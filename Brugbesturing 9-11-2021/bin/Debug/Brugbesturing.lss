
bin\Debug\Brugbesturing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800200  00002d4e  00002e02  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002d4e  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800202  00800202  00002e04  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00002e04  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 00000060  00000000  00000000  00002e07  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000572  00000000  00000000  00002e67  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bf7  00000000  00000000  000033d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000002ab  00000000  00000000  00003fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001860  00000000  00000000  0000427b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000310  00000000  00000000  00005adc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000758  00000000  00000000  00005dec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 c7 13 	jmp	0x278e	; 0x278e <__vector_17>
      48:	0c 94 ee 13 	jmp	0x27dc	; 0x27dc <__vector_18>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 91 13 	jmp	0x2722	; 0x2722 <__vector_20>
      54:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__vector_21>
      58:	0c 94 21 01 	jmp	0x242	; 0x242 <__vector_22>
      5c:	0c 94 95 00 	jmp	0x12a	; 0x12a <__vector_23>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ee e4       	ldi	r30, 0x4E	; 78
      fc:	fd e2       	ldi	r31, 0x2D	; 45
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a2 30       	cpi	r26, 0x02	; 2
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	12 e0       	ldi	r17, 0x02	; 2
     110:	a2 e0       	ldi	r26, 0x02	; 2
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a4 31       	cpi	r26, 0x14	; 20
     11a:	b1 07       	cpc	r27, r17
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 40 08 	call	0x1080	; 0x1080 <main>
     122:	0c 94 c0 14 	jmp	0x2980	; 0x2980 <exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <__vector_23>:
     12a:	1f 92       	push	r1
     12c:	0f 92       	push	r0
     12e:	0f b6       	in	r0, 0x3f	; 63
     130:	0f 92       	push	r0
     132:	00 90 5b 00 	lds	r0, 0x005B
     136:	0f 92       	push	r0
     138:	11 24       	eor	r1, r1
     13a:	8f 93       	push	r24
     13c:	af 93       	push	r26
     13e:	bf 93       	push	r27
     140:	ef 93       	push	r30
     142:	ff 93       	push	r31
     144:	df 93       	push	r29
     146:	cf 93       	push	r28
     148:	cd b7       	in	r28, 0x3d	; 61
     14a:	de b7       	in	r29, 0x3e	; 62
     14c:	e7 e4       	ldi	r30, 0x47	; 71
     14e:	f0 e0       	ldi	r31, 0x00	; 0
     150:	80 81       	ld	r24, Z
     152:	88 23       	and	r24, r24
     154:	a1 f4       	brne	.+40     	; 0x17e <__vector_23+0x54>
     156:	e8 e4       	ldi	r30, 0x48	; 72
     158:	f0 e0       	ldi	r31, 0x00	; 0
     15a:	80 81       	ld	r24, Z
     15c:	88 23       	and	r24, r24
     15e:	79 f4       	brne	.+30     	; 0x17e <__vector_23+0x54>
     160:	a2 e0       	ldi	r26, 0x02	; 2
     162:	b1 e0       	ldi	r27, 0x01	; 1
     164:	e2 e0       	ldi	r30, 0x02	; 2
     166:	f1 e0       	ldi	r31, 0x01	; 1
     168:	80 81       	ld	r24, Z
     16a:	8f 7b       	andi	r24, 0xBF	; 191
     16c:	8c 93       	st	X, r24
     16e:	a1 e3       	ldi	r26, 0x31	; 49
     170:	b0 e0       	ldi	r27, 0x00	; 0
     172:	e1 e3       	ldi	r30, 0x31	; 49
     174:	f0 e0       	ldi	r31, 0x00	; 0
     176:	80 81       	ld	r24, Z
     178:	8f 7d       	andi	r24, 0xDF	; 223
     17a:	8c 93       	st	X, r24
     17c:	27 c0       	rjmp	.+78     	; 0x1cc <__vector_23+0xa2>
     17e:	e7 e4       	ldi	r30, 0x47	; 71
     180:	f0 e0       	ldi	r31, 0x00	; 0
     182:	80 81       	ld	r24, Z
     184:	88 23       	and	r24, r24
     186:	79 f0       	breq	.+30     	; 0x1a6 <__vector_23+0x7c>
     188:	a1 e3       	ldi	r26, 0x31	; 49
     18a:	b0 e0       	ldi	r27, 0x00	; 0
     18c:	e1 e3       	ldi	r30, 0x31	; 49
     18e:	f0 e0       	ldi	r31, 0x00	; 0
     190:	80 81       	ld	r24, Z
     192:	8f 7d       	andi	r24, 0xDF	; 223
     194:	8c 93       	st	X, r24
     196:	a2 e0       	ldi	r26, 0x02	; 2
     198:	b1 e0       	ldi	r27, 0x01	; 1
     19a:	e2 e0       	ldi	r30, 0x02	; 2
     19c:	f1 e0       	ldi	r31, 0x01	; 1
     19e:	80 81       	ld	r24, Z
     1a0:	80 64       	ori	r24, 0x40	; 64
     1a2:	8c 93       	st	X, r24
     1a4:	13 c0       	rjmp	.+38     	; 0x1cc <__vector_23+0xa2>
     1a6:	e8 e4       	ldi	r30, 0x48	; 72
     1a8:	f0 e0       	ldi	r31, 0x00	; 0
     1aa:	80 81       	ld	r24, Z
     1ac:	88 23       	and	r24, r24
     1ae:	71 f0       	breq	.+28     	; 0x1cc <__vector_23+0xa2>
     1b0:	a2 e0       	ldi	r26, 0x02	; 2
     1b2:	b1 e0       	ldi	r27, 0x01	; 1
     1b4:	e2 e0       	ldi	r30, 0x02	; 2
     1b6:	f1 e0       	ldi	r31, 0x01	; 1
     1b8:	80 81       	ld	r24, Z
     1ba:	8f 7b       	andi	r24, 0xBF	; 191
     1bc:	8c 93       	st	X, r24
     1be:	a1 e3       	ldi	r26, 0x31	; 49
     1c0:	b0 e0       	ldi	r27, 0x00	; 0
     1c2:	e1 e3       	ldi	r30, 0x31	; 49
     1c4:	f0 e0       	ldi	r31, 0x00	; 0
     1c6:	80 81       	ld	r24, Z
     1c8:	80 62       	ori	r24, 0x20	; 32
     1ca:	8c 93       	st	X, r24
     1cc:	cf 91       	pop	r28
     1ce:	df 91       	pop	r29
     1d0:	ff 91       	pop	r31
     1d2:	ef 91       	pop	r30
     1d4:	bf 91       	pop	r27
     1d6:	af 91       	pop	r26
     1d8:	8f 91       	pop	r24
     1da:	0f 90       	pop	r0
     1dc:	00 92 5b 00 	sts	0x005B, r0
     1e0:	0f 90       	pop	r0
     1e2:	0f be       	out	0x3f, r0	; 63
     1e4:	0f 90       	pop	r0
     1e6:	1f 90       	pop	r1
     1e8:	18 95       	reti

000001ea <__vector_21>:
     1ea:	1f 92       	push	r1
     1ec:	0f 92       	push	r0
     1ee:	0f b6       	in	r0, 0x3f	; 63
     1f0:	0f 92       	push	r0
     1f2:	00 90 5b 00 	lds	r0, 0x005B
     1f6:	0f 92       	push	r0
     1f8:	11 24       	eor	r1, r1
     1fa:	8f 93       	push	r24
     1fc:	af 93       	push	r26
     1fe:	bf 93       	push	r27
     200:	ef 93       	push	r30
     202:	ff 93       	push	r31
     204:	df 93       	push	r29
     206:	cf 93       	push	r28
     208:	cd b7       	in	r28, 0x3d	; 61
     20a:	de b7       	in	r29, 0x3e	; 62
     20c:	e7 e4       	ldi	r30, 0x47	; 71
     20e:	f0 e0       	ldi	r31, 0x00	; 0
     210:	80 81       	ld	r24, Z
     212:	8f 3f       	cpi	r24, 0xFF	; 255
     214:	39 f0       	breq	.+14     	; 0x224 <__vector_21+0x3a>
     216:	a2 e0       	ldi	r26, 0x02	; 2
     218:	b1 e0       	ldi	r27, 0x01	; 1
     21a:	e2 e0       	ldi	r30, 0x02	; 2
     21c:	f1 e0       	ldi	r31, 0x01	; 1
     21e:	80 81       	ld	r24, Z
     220:	8f 7b       	andi	r24, 0xBF	; 191
     222:	8c 93       	st	X, r24
     224:	cf 91       	pop	r28
     226:	df 91       	pop	r29
     228:	ff 91       	pop	r31
     22a:	ef 91       	pop	r30
     22c:	bf 91       	pop	r27
     22e:	af 91       	pop	r26
     230:	8f 91       	pop	r24
     232:	0f 90       	pop	r0
     234:	00 92 5b 00 	sts	0x005B, r0
     238:	0f 90       	pop	r0
     23a:	0f be       	out	0x3f, r0	; 63
     23c:	0f 90       	pop	r0
     23e:	1f 90       	pop	r1
     240:	18 95       	reti

00000242 <__vector_22>:
     242:	1f 92       	push	r1
     244:	0f 92       	push	r0
     246:	0f b6       	in	r0, 0x3f	; 63
     248:	0f 92       	push	r0
     24a:	00 90 5b 00 	lds	r0, 0x005B
     24e:	0f 92       	push	r0
     250:	11 24       	eor	r1, r1
     252:	8f 93       	push	r24
     254:	af 93       	push	r26
     256:	bf 93       	push	r27
     258:	ef 93       	push	r30
     25a:	ff 93       	push	r31
     25c:	df 93       	push	r29
     25e:	cf 93       	push	r28
     260:	cd b7       	in	r28, 0x3d	; 61
     262:	de b7       	in	r29, 0x3e	; 62
     264:	e8 e4       	ldi	r30, 0x48	; 72
     266:	f0 e0       	ldi	r31, 0x00	; 0
     268:	80 81       	ld	r24, Z
     26a:	8f 3f       	cpi	r24, 0xFF	; 255
     26c:	39 f0       	breq	.+14     	; 0x27c <__vector_22+0x3a>
     26e:	a1 e3       	ldi	r26, 0x31	; 49
     270:	b0 e0       	ldi	r27, 0x00	; 0
     272:	e1 e3       	ldi	r30, 0x31	; 49
     274:	f0 e0       	ldi	r31, 0x00	; 0
     276:	80 81       	ld	r24, Z
     278:	8f 7d       	andi	r24, 0xDF	; 223
     27a:	8c 93       	st	X, r24
     27c:	cf 91       	pop	r28
     27e:	df 91       	pop	r29
     280:	ff 91       	pop	r31
     282:	ef 91       	pop	r30
     284:	bf 91       	pop	r27
     286:	af 91       	pop	r26
     288:	8f 91       	pop	r24
     28a:	0f 90       	pop	r0
     28c:	00 92 5b 00 	sts	0x005B, r0
     290:	0f 90       	pop	r0
     292:	0f be       	out	0x3f, r0	; 63
     294:	0f 90       	pop	r0
     296:	1f 90       	pop	r1
     298:	18 95       	reti

0000029a <init_h_bridge>:
     29a:	df 93       	push	r29
     29c:	cf 93       	push	r28
     29e:	cd b7       	in	r28, 0x3d	; 61
     2a0:	de b7       	in	r29, 0x3e	; 62
     2a2:	a1 e0       	ldi	r26, 0x01	; 1
     2a4:	b1 e0       	ldi	r27, 0x01	; 1
     2a6:	e1 e0       	ldi	r30, 0x01	; 1
     2a8:	f1 e0       	ldi	r31, 0x01	; 1
     2aa:	80 81       	ld	r24, Z
     2ac:	80 64       	ori	r24, 0x40	; 64
     2ae:	8c 93       	st	X, r24
     2b0:	a0 e3       	ldi	r26, 0x30	; 48
     2b2:	b0 e0       	ldi	r27, 0x00	; 0
     2b4:	e0 e3       	ldi	r30, 0x30	; 48
     2b6:	f0 e0       	ldi	r31, 0x00	; 0
     2b8:	80 81       	ld	r24, Z
     2ba:	80 62       	ori	r24, 0x20	; 32
     2bc:	8c 93       	st	X, r24
     2be:	a2 e0       	ldi	r26, 0x02	; 2
     2c0:	b1 e0       	ldi	r27, 0x01	; 1
     2c2:	e2 e0       	ldi	r30, 0x02	; 2
     2c4:	f1 e0       	ldi	r31, 0x01	; 1
     2c6:	80 81       	ld	r24, Z
     2c8:	8f 7b       	andi	r24, 0xBF	; 191
     2ca:	8c 93       	st	X, r24
     2cc:	a1 e3       	ldi	r26, 0x31	; 49
     2ce:	b0 e0       	ldi	r27, 0x00	; 0
     2d0:	e1 e3       	ldi	r30, 0x31	; 49
     2d2:	f0 e0       	ldi	r31, 0x00	; 0
     2d4:	80 81       	ld	r24, Z
     2d6:	8f 7d       	andi	r24, 0xDF	; 223
     2d8:	8c 93       	st	X, r24
     2da:	e4 e4       	ldi	r30, 0x44	; 68
     2dc:	f0 e0       	ldi	r31, 0x00	; 0
     2de:	10 82       	st	Z, r1
     2e0:	e5 e4       	ldi	r30, 0x45	; 69
     2e2:	f0 e0       	ldi	r31, 0x00	; 0
     2e4:	83 e0       	ldi	r24, 0x03	; 3
     2e6:	80 83       	st	Z, r24
     2e8:	e7 e4       	ldi	r30, 0x47	; 71
     2ea:	f0 e0       	ldi	r31, 0x00	; 0
     2ec:	10 82       	st	Z, r1
     2ee:	e8 e4       	ldi	r30, 0x48	; 72
     2f0:	f0 e0       	ldi	r31, 0x00	; 0
     2f2:	10 82       	st	Z, r1
     2f4:	ee e6       	ldi	r30, 0x6E	; 110
     2f6:	f0 e0       	ldi	r31, 0x00	; 0
     2f8:	87 e0       	ldi	r24, 0x07	; 7
     2fa:	80 83       	st	Z, r24
     2fc:	78 94       	sei
     2fe:	cf 91       	pop	r28
     300:	df 91       	pop	r29
     302:	08 95       	ret

00000304 <h_bridge_set_percentage>:
     304:	df 93       	push	r29
     306:	cf 93       	push	r28
     308:	0f 92       	push	r0
     30a:	cd b7       	in	r28, 0x3d	; 61
     30c:	de b7       	in	r29, 0x3e	; 62
     30e:	89 83       	std	Y+1, r24	; 0x01
     310:	89 81       	ldd	r24, Y+1	; 0x01
     312:	8c 39       	cpi	r24, 0x9C	; 156
     314:	0c f4       	brge	.+2      	; 0x318 <h_bridge_set_percentage+0x14>
     316:	46 c0       	rjmp	.+140    	; 0x3a4 <h_bridge_set_percentage+0xa0>
     318:	89 81       	ldd	r24, Y+1	; 0x01
     31a:	85 36       	cpi	r24, 0x65	; 101
     31c:	0c f0       	brlt	.+2      	; 0x320 <h_bridge_set_percentage+0x1c>
     31e:	42 c0       	rjmp	.+132    	; 0x3a4 <h_bridge_set_percentage+0xa0>
     320:	89 81       	ldd	r24, Y+1	; 0x01
     322:	88 23       	and	r24, r24
     324:	04 f1       	brlt	.+64     	; 0x366 <h_bridge_set_percentage+0x62>
     326:	e8 e4       	ldi	r30, 0x48	; 72
     328:	f0 e0       	ldi	r31, 0x00	; 0
     32a:	10 82       	st	Z, r1
     32c:	e7 e4       	ldi	r30, 0x47	; 71
     32e:	f0 e0       	ldi	r31, 0x00	; 0
     330:	89 81       	ldd	r24, Y+1	; 0x01
     332:	48 2f       	mov	r20, r24
     334:	55 27       	eor	r21, r21
     336:	47 fd       	sbrc	r20, 7
     338:	50 95       	com	r21
     33a:	ca 01       	movw	r24, r20
     33c:	9c 01       	movw	r18, r24
     33e:	22 0f       	add	r18, r18
     340:	33 1f       	adc	r19, r19
     342:	c9 01       	movw	r24, r18
     344:	96 95       	lsr	r25
     346:	98 2f       	mov	r25, r24
     348:	88 27       	eor	r24, r24
     34a:	97 95       	ror	r25
     34c:	87 95       	ror	r24
     34e:	82 1b       	sub	r24, r18
     350:	93 0b       	sbc	r25, r19
     352:	84 0f       	add	r24, r20
     354:	95 1f       	adc	r25, r21
     356:	24 e6       	ldi	r18, 0x64	; 100
     358:	30 e0       	ldi	r19, 0x00	; 0
     35a:	b9 01       	movw	r22, r18
     35c:	0e 94 7e 16 	call	0x2cfc	; 0x2cfc <__divmodhi4>
     360:	cb 01       	movw	r24, r22
     362:	80 83       	st	Z, r24
     364:	1f c0       	rjmp	.+62     	; 0x3a4 <h_bridge_set_percentage+0xa0>
     366:	e7 e4       	ldi	r30, 0x47	; 71
     368:	f0 e0       	ldi	r31, 0x00	; 0
     36a:	10 82       	st	Z, r1
     36c:	e8 e4       	ldi	r30, 0x48	; 72
     36e:	f0 e0       	ldi	r31, 0x00	; 0
     370:	89 81       	ldd	r24, Y+1	; 0x01
     372:	48 2f       	mov	r20, r24
     374:	55 27       	eor	r21, r21
     376:	47 fd       	sbrc	r20, 7
     378:	50 95       	com	r21
     37a:	ca 01       	movw	r24, r20
     37c:	9c 01       	movw	r18, r24
     37e:	22 0f       	add	r18, r18
     380:	33 1f       	adc	r19, r19
     382:	c9 01       	movw	r24, r18
     384:	96 95       	lsr	r25
     386:	98 2f       	mov	r25, r24
     388:	88 27       	eor	r24, r24
     38a:	97 95       	ror	r25
     38c:	87 95       	ror	r24
     38e:	82 1b       	sub	r24, r18
     390:	93 0b       	sbc	r25, r19
     392:	84 0f       	add	r24, r20
     394:	95 1f       	adc	r25, r21
     396:	2c e9       	ldi	r18, 0x9C	; 156
     398:	3f ef       	ldi	r19, 0xFF	; 255
     39a:	b9 01       	movw	r22, r18
     39c:	0e 94 7e 16 	call	0x2cfc	; 0x2cfc <__divmodhi4>
     3a0:	cb 01       	movw	r24, r22
     3a2:	80 83       	st	Z, r24
     3a4:	0f 90       	pop	r0
     3a6:	cf 91       	pop	r28
     3a8:	df 91       	pop	r29
     3aa:	08 95       	ret

000003ac <Verlichtingbrugdicht>:
int windmeter = 0;
int winddrempel = 100;
unsigned long millisec = 0, millisecBlinkLights = 0, millisecWindmeter = 0, millisecPushButton = 0;

void Verlichtingbrugdicht(int aanD)
{
     3ac:	df 93       	push	r29
     3ae:	cf 93       	push	r28
     3b0:	0f 92       	push	r0
     3b2:	0f 92       	push	r0
     3b4:	cd b7       	in	r28, 0x3d	; 61
     3b6:	de b7       	in	r29, 0x3e	; 62
     3b8:	9a 83       	std	Y+2, r25	; 0x02
     3ba:	89 83       	std	Y+1, r24	; 0x01
    if (aanD == 1)
     3bc:	89 81       	ldd	r24, Y+1	; 0x01
     3be:	9a 81       	ldd	r25, Y+2	; 0x02
     3c0:	81 30       	cpi	r24, 0x01	; 1
     3c2:	91 05       	cpc	r25, r1
     3c4:	c1 f5       	brne	.+112    	; 0x436 <Verlichtingbrugdicht+0x8a>
    {
    PORTC &= ~(1 << LEDPIN_GroenBoot1R); //uit
     3c6:	a8 e2       	ldi	r26, 0x28	; 40
     3c8:	b0 e0       	ldi	r27, 0x00	; 0
     3ca:	e8 e2       	ldi	r30, 0x28	; 40
     3cc:	f0 e0       	ldi	r31, 0x00	; 0
     3ce:	80 81       	ld	r24, Z
     3d0:	8f 7d       	andi	r24, 0xDF	; 223
     3d2:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_RoodBoot1R);   //uit
     3d4:	a8 e2       	ldi	r26, 0x28	; 40
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e8 e2       	ldi	r30, 0x28	; 40
     3da:	f0 e0       	ldi	r31, 0x00	; 0
     3dc:	80 81       	ld	r24, Z
     3de:	81 60       	ori	r24, 0x01	; 1
     3e0:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1L); //uit
     3e2:	a8 e2       	ldi	r26, 0x28	; 40
     3e4:	b0 e0       	ldi	r27, 0x00	; 0
     3e6:	e8 e2       	ldi	r30, 0x28	; 40
     3e8:	f0 e0       	ldi	r31, 0x00	; 0
     3ea:	80 81       	ld	r24, Z
     3ec:	8f 7e       	andi	r24, 0xEF	; 239
     3ee:	8c 93       	st	X, r24
    PORTD |= (1 << LEDPIN_RoodBoot1L);   //uit
     3f0:	ab e2       	ldi	r26, 0x2B	; 43
     3f2:	b0 e0       	ldi	r27, 0x00	; 0
     3f4:	eb e2       	ldi	r30, 0x2B	; 43
     3f6:	f0 e0       	ldi	r31, 0x00	; 0
     3f8:	80 81       	ld	r24, Z
     3fa:	80 68       	ori	r24, 0x80	; 128
     3fc:	8c 93       	st	X, r24
    PORTG |= (1 << LEDPIN_RoodBoot1B);  //aan
     3fe:	a4 e3       	ldi	r26, 0x34	; 52
     400:	b0 e0       	ldi	r27, 0x00	; 0
     402:	e4 e3       	ldi	r30, 0x34	; 52
     404:	f0 e0       	ldi	r31, 0x00	; 0
     406:	80 81       	ld	r24, Z
     408:	84 60       	ori	r24, 0x04	; 4
     40a:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1B);   //aan
     40c:	a8 e2       	ldi	r26, 0x28	; 40
     40e:	b0 e0       	ldi	r27, 0x00	; 0
     410:	e8 e2       	ldi	r30, 0x28	; 40
     412:	f0 e0       	ldi	r31, 0x00	; 0
     414:	80 81       	ld	r24, Z
     416:	8d 7f       	andi	r24, 0xFD	; 253
     418:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GeelBrug1);    //uit
     41a:	a8 e2       	ldi	r26, 0x28	; 40
     41c:	b0 e0       	ldi	r27, 0x00	; 0
     41e:	e8 e2       	ldi	r30, 0x28	; 40
     420:	f0 e0       	ldi	r31, 0x00	; 0
     422:	80 81       	ld	r24, Z
     424:	8f 77       	andi	r24, 0x7F	; 127
     426:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug2);    //uit
     428:	a8 e2       	ldi	r26, 0x28	; 40
     42a:	b0 e0       	ldi	r27, 0x00	; 0
     42c:	e8 e2       	ldi	r30, 0x28	; 40
     42e:	f0 e0       	ldi	r31, 0x00	; 0
     430:	80 81       	ld	r24, Z
     432:	80 64       	ori	r24, 0x40	; 64
     434:	8c 93       	st	X, r24
    }
}
     436:	0f 90       	pop	r0
     438:	0f 90       	pop	r0
     43a:	cf 91       	pop	r28
     43c:	df 91       	pop	r29
     43e:	08 95       	ret

00000440 <Verlichtingbrugopent1Aan>:
void Verlichtingbrugopent1Aan(int aanO1)
{
     440:	df 93       	push	r29
     442:	cf 93       	push	r28
     444:	0f 92       	push	r0
     446:	0f 92       	push	r0
     448:	cd b7       	in	r28, 0x3d	; 61
     44a:	de b7       	in	r29, 0x3e	; 62
     44c:	9a 83       	std	Y+2, r25	; 0x02
     44e:	89 83       	std	Y+1, r24	; 0x01
    if (aanO1 == 1)
     450:	89 81       	ldd	r24, Y+1	; 0x01
     452:	9a 81       	ldd	r25, Y+2	; 0x02
     454:	81 30       	cpi	r24, 0x01	; 1
     456:	91 05       	cpc	r25, r1
     458:	c1 f5       	brne	.+112    	; 0x4ca <Verlichtingbrugopent1Aan+0x8a>
    {
    PORTC |= (1 << LEDPIN_GroenBoot1R); //uit
     45a:	a8 e2       	ldi	r26, 0x28	; 40
     45c:	b0 e0       	ldi	r27, 0x00	; 0
     45e:	e8 e2       	ldi	r30, 0x28	; 40
     460:	f0 e0       	ldi	r31, 0x00	; 0
     462:	80 81       	ld	r24, Z
     464:	80 62       	ori	r24, 0x20	; 32
     466:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_RoodBoot1R);   //uit
     468:	a8 e2       	ldi	r26, 0x28	; 40
     46a:	b0 e0       	ldi	r27, 0x00	; 0
     46c:	e8 e2       	ldi	r30, 0x28	; 40
     46e:	f0 e0       	ldi	r31, 0x00	; 0
     470:	80 81       	ld	r24, Z
     472:	81 60       	ori	r24, 0x01	; 1
     474:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1L); //uit
     476:	a8 e2       	ldi	r26, 0x28	; 40
     478:	b0 e0       	ldi	r27, 0x00	; 0
     47a:	e8 e2       	ldi	r30, 0x28	; 40
     47c:	f0 e0       	ldi	r31, 0x00	; 0
     47e:	80 81       	ld	r24, Z
     480:	8f 7e       	andi	r24, 0xEF	; 239
     482:	8c 93       	st	X, r24
    PORTD |= (1 << LEDPIN_RoodBoot1L);   //uit
     484:	ab e2       	ldi	r26, 0x2B	; 43
     486:	b0 e0       	ldi	r27, 0x00	; 0
     488:	eb e2       	ldi	r30, 0x2B	; 43
     48a:	f0 e0       	ldi	r31, 0x00	; 0
     48c:	80 81       	ld	r24, Z
     48e:	80 68       	ori	r24, 0x80	; 128
     490:	8c 93       	st	X, r24
    PORTG &= ~(1 << LEDPIN_RoodBoot1B);  //aan
     492:	a4 e3       	ldi	r26, 0x34	; 52
     494:	b0 e0       	ldi	r27, 0x00	; 0
     496:	e4 e3       	ldi	r30, 0x34	; 52
     498:	f0 e0       	ldi	r31, 0x00	; 0
     49a:	80 81       	ld	r24, Z
     49c:	8b 7f       	andi	r24, 0xFB	; 251
     49e:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1B);   //aan
     4a0:	a8 e2       	ldi	r26, 0x28	; 40
     4a2:	b0 e0       	ldi	r27, 0x00	; 0
     4a4:	e8 e2       	ldi	r30, 0x28	; 40
     4a6:	f0 e0       	ldi	r31, 0x00	; 0
     4a8:	80 81       	ld	r24, Z
     4aa:	8d 7f       	andi	r24, 0xFD	; 253
     4ac:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug1);    //uit
     4ae:	a8 e2       	ldi	r26, 0x28	; 40
     4b0:	b0 e0       	ldi	r27, 0x00	; 0
     4b2:	e8 e2       	ldi	r30, 0x28	; 40
     4b4:	f0 e0       	ldi	r31, 0x00	; 0
     4b6:	80 81       	ld	r24, Z
     4b8:	80 68       	ori	r24, 0x80	; 128
     4ba:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug2);    //uit
     4bc:	a8 e2       	ldi	r26, 0x28	; 40
     4be:	b0 e0       	ldi	r27, 0x00	; 0
     4c0:	e8 e2       	ldi	r30, 0x28	; 40
     4c2:	f0 e0       	ldi	r31, 0x00	; 0
     4c4:	80 81       	ld	r24, Z
     4c6:	80 64       	ori	r24, 0x40	; 64
     4c8:	8c 93       	st	X, r24
    }
}
     4ca:	0f 90       	pop	r0
     4cc:	0f 90       	pop	r0
     4ce:	cf 91       	pop	r28
     4d0:	df 91       	pop	r29
     4d2:	08 95       	ret

000004d4 <Verlichtingbrugopent1Uit>:
void Verlichtingbrugopent1Uit(int uitO1)
{
     4d4:	df 93       	push	r29
     4d6:	cf 93       	push	r28
     4d8:	0f 92       	push	r0
     4da:	0f 92       	push	r0
     4dc:	cd b7       	in	r28, 0x3d	; 61
     4de:	de b7       	in	r29, 0x3e	; 62
     4e0:	9a 83       	std	Y+2, r25	; 0x02
     4e2:	89 83       	std	Y+1, r24	; 0x01
    if (uitO1 == 1)
     4e4:	89 81       	ldd	r24, Y+1	; 0x01
     4e6:	9a 81       	ldd	r25, Y+2	; 0x02
     4e8:	81 30       	cpi	r24, 0x01	; 1
     4ea:	91 05       	cpc	r25, r1
     4ec:	c1 f5       	brne	.+112    	; 0x55e <Verlichtingbrugopent1Uit+0x8a>
    {
    PORTC &= ~(1 << LEDPIN_GroenBoot1R); //uit
     4ee:	a8 e2       	ldi	r26, 0x28	; 40
     4f0:	b0 e0       	ldi	r27, 0x00	; 0
     4f2:	e8 e2       	ldi	r30, 0x28	; 40
     4f4:	f0 e0       	ldi	r31, 0x00	; 0
     4f6:	80 81       	ld	r24, Z
     4f8:	8f 7d       	andi	r24, 0xDF	; 223
     4fa:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_RoodBoot1R);   //uit
     4fc:	a8 e2       	ldi	r26, 0x28	; 40
     4fe:	b0 e0       	ldi	r27, 0x00	; 0
     500:	e8 e2       	ldi	r30, 0x28	; 40
     502:	f0 e0       	ldi	r31, 0x00	; 0
     504:	80 81       	ld	r24, Z
     506:	8e 7f       	andi	r24, 0xFE	; 254
     508:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1L); //uit
     50a:	a8 e2       	ldi	r26, 0x28	; 40
     50c:	b0 e0       	ldi	r27, 0x00	; 0
     50e:	e8 e2       	ldi	r30, 0x28	; 40
     510:	f0 e0       	ldi	r31, 0x00	; 0
     512:	80 81       	ld	r24, Z
     514:	8f 7e       	andi	r24, 0xEF	; 239
     516:	8c 93       	st	X, r24
    PORTD &= ~(1 << LEDPIN_RoodBoot1L);   //uit
     518:	ab e2       	ldi	r26, 0x2B	; 43
     51a:	b0 e0       	ldi	r27, 0x00	; 0
     51c:	eb e2       	ldi	r30, 0x2B	; 43
     51e:	f0 e0       	ldi	r31, 0x00	; 0
     520:	80 81       	ld	r24, Z
     522:	8f 77       	andi	r24, 0x7F	; 127
     524:	8c 93       	st	X, r24
    PORTG &= ~(1 << LEDPIN_RoodBoot1B);  //aan
     526:	a4 e3       	ldi	r26, 0x34	; 52
     528:	b0 e0       	ldi	r27, 0x00	; 0
     52a:	e4 e3       	ldi	r30, 0x34	; 52
     52c:	f0 e0       	ldi	r31, 0x00	; 0
     52e:	80 81       	ld	r24, Z
     530:	8b 7f       	andi	r24, 0xFB	; 251
     532:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1B);   //aan
     534:	a8 e2       	ldi	r26, 0x28	; 40
     536:	b0 e0       	ldi	r27, 0x00	; 0
     538:	e8 e2       	ldi	r30, 0x28	; 40
     53a:	f0 e0       	ldi	r31, 0x00	; 0
     53c:	80 81       	ld	r24, Z
     53e:	8d 7f       	andi	r24, 0xFD	; 253
     540:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GeelBrug1);    //uit
     542:	a8 e2       	ldi	r26, 0x28	; 40
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	e8 e2       	ldi	r30, 0x28	; 40
     548:	f0 e0       	ldi	r31, 0x00	; 0
     54a:	80 81       	ld	r24, Z
     54c:	8f 77       	andi	r24, 0x7F	; 127
     54e:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GeelBrug2);    //uit
     550:	a8 e2       	ldi	r26, 0x28	; 40
     552:	b0 e0       	ldi	r27, 0x00	; 0
     554:	e8 e2       	ldi	r30, 0x28	; 40
     556:	f0 e0       	ldi	r31, 0x00	; 0
     558:	80 81       	ld	r24, Z
     55a:	8f 7b       	andi	r24, 0xBF	; 191
     55c:	8c 93       	st	X, r24
    }
}
     55e:	0f 90       	pop	r0
     560:	0f 90       	pop	r0
     562:	cf 91       	pop	r28
     564:	df 91       	pop	r29
     566:	08 95       	ret

00000568 <Verlichtingbrugopent2Aan>:
void Verlichtingbrugopent2Aan(int aanOt2)
{
     568:	df 93       	push	r29
     56a:	cf 93       	push	r28
     56c:	0f 92       	push	r0
     56e:	0f 92       	push	r0
     570:	cd b7       	in	r28, 0x3d	; 61
     572:	de b7       	in	r29, 0x3e	; 62
     574:	9a 83       	std	Y+2, r25	; 0x02
     576:	89 83       	std	Y+1, r24	; 0x01
    if (aanOt2 == 1)
     578:	89 81       	ldd	r24, Y+1	; 0x01
     57a:	9a 81       	ldd	r25, Y+2	; 0x02
     57c:	81 30       	cpi	r24, 0x01	; 1
     57e:	91 05       	cpc	r25, r1
     580:	c1 f5       	brne	.+112    	; 0x5f2 <Verlichtingbrugopent2Aan+0x8a>
    {
    PORTC &= ~(1 << LEDPIN_GroenBoot1R); //uit
     582:	a8 e2       	ldi	r26, 0x28	; 40
     584:	b0 e0       	ldi	r27, 0x00	; 0
     586:	e8 e2       	ldi	r30, 0x28	; 40
     588:	f0 e0       	ldi	r31, 0x00	; 0
     58a:	80 81       	ld	r24, Z
     58c:	8f 7d       	andi	r24, 0xDF	; 223
     58e:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_RoodBoot1R);   //uit
     590:	a8 e2       	ldi	r26, 0x28	; 40
     592:	b0 e0       	ldi	r27, 0x00	; 0
     594:	e8 e2       	ldi	r30, 0x28	; 40
     596:	f0 e0       	ldi	r31, 0x00	; 0
     598:	80 81       	ld	r24, Z
     59a:	81 60       	ori	r24, 0x01	; 1
     59c:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GroenBoot1L); //uit
     59e:	a8 e2       	ldi	r26, 0x28	; 40
     5a0:	b0 e0       	ldi	r27, 0x00	; 0
     5a2:	e8 e2       	ldi	r30, 0x28	; 40
     5a4:	f0 e0       	ldi	r31, 0x00	; 0
     5a6:	80 81       	ld	r24, Z
     5a8:	80 61       	ori	r24, 0x10	; 16
     5aa:	8c 93       	st	X, r24
    PORTD |= (1 << LEDPIN_RoodBoot1L);   //uit
     5ac:	ab e2       	ldi	r26, 0x2B	; 43
     5ae:	b0 e0       	ldi	r27, 0x00	; 0
     5b0:	eb e2       	ldi	r30, 0x2B	; 43
     5b2:	f0 e0       	ldi	r31, 0x00	; 0
     5b4:	80 81       	ld	r24, Z
     5b6:	80 68       	ori	r24, 0x80	; 128
     5b8:	8c 93       	st	X, r24
    PORTG &= ~(1 << LEDPIN_RoodBoot1B);  //aan
     5ba:	a4 e3       	ldi	r26, 0x34	; 52
     5bc:	b0 e0       	ldi	r27, 0x00	; 0
     5be:	e4 e3       	ldi	r30, 0x34	; 52
     5c0:	f0 e0       	ldi	r31, 0x00	; 0
     5c2:	80 81       	ld	r24, Z
     5c4:	8b 7f       	andi	r24, 0xFB	; 251
     5c6:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1B);   //aan
     5c8:	a8 e2       	ldi	r26, 0x28	; 40
     5ca:	b0 e0       	ldi	r27, 0x00	; 0
     5cc:	e8 e2       	ldi	r30, 0x28	; 40
     5ce:	f0 e0       	ldi	r31, 0x00	; 0
     5d0:	80 81       	ld	r24, Z
     5d2:	8d 7f       	andi	r24, 0xFD	; 253
     5d4:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug1);    //uit
     5d6:	a8 e2       	ldi	r26, 0x28	; 40
     5d8:	b0 e0       	ldi	r27, 0x00	; 0
     5da:	e8 e2       	ldi	r30, 0x28	; 40
     5dc:	f0 e0       	ldi	r31, 0x00	; 0
     5de:	80 81       	ld	r24, Z
     5e0:	80 68       	ori	r24, 0x80	; 128
     5e2:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug2);    //uit
     5e4:	a8 e2       	ldi	r26, 0x28	; 40
     5e6:	b0 e0       	ldi	r27, 0x00	; 0
     5e8:	e8 e2       	ldi	r30, 0x28	; 40
     5ea:	f0 e0       	ldi	r31, 0x00	; 0
     5ec:	80 81       	ld	r24, Z
     5ee:	80 64       	ori	r24, 0x40	; 64
     5f0:	8c 93       	st	X, r24
    }
}
     5f2:	0f 90       	pop	r0
     5f4:	0f 90       	pop	r0
     5f6:	cf 91       	pop	r28
     5f8:	df 91       	pop	r29
     5fa:	08 95       	ret

000005fc <Verlichtingbrugopent2Uit>:
void Verlichtingbrugopent2Uit(int uitOt2)
{
     5fc:	df 93       	push	r29
     5fe:	cf 93       	push	r28
     600:	0f 92       	push	r0
     602:	0f 92       	push	r0
     604:	cd b7       	in	r28, 0x3d	; 61
     606:	de b7       	in	r29, 0x3e	; 62
     608:	9a 83       	std	Y+2, r25	; 0x02
     60a:	89 83       	std	Y+1, r24	; 0x01
    if (uitOt2 == 1)
     60c:	89 81       	ldd	r24, Y+1	; 0x01
     60e:	9a 81       	ldd	r25, Y+2	; 0x02
     610:	81 30       	cpi	r24, 0x01	; 1
     612:	91 05       	cpc	r25, r1
     614:	c1 f5       	brne	.+112    	; 0x686 <Verlichtingbrugopent2Uit+0x8a>
    {
    PORTC &= ~(1 << LEDPIN_GroenBoot1R); //uit
     616:	a8 e2       	ldi	r26, 0x28	; 40
     618:	b0 e0       	ldi	r27, 0x00	; 0
     61a:	e8 e2       	ldi	r30, 0x28	; 40
     61c:	f0 e0       	ldi	r31, 0x00	; 0
     61e:	80 81       	ld	r24, Z
     620:	8f 7d       	andi	r24, 0xDF	; 223
     622:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_RoodBoot1R);   //uit
     624:	a8 e2       	ldi	r26, 0x28	; 40
     626:	b0 e0       	ldi	r27, 0x00	; 0
     628:	e8 e2       	ldi	r30, 0x28	; 40
     62a:	f0 e0       	ldi	r31, 0x00	; 0
     62c:	80 81       	ld	r24, Z
     62e:	8e 7f       	andi	r24, 0xFE	; 254
     630:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1L); //uit
     632:	a8 e2       	ldi	r26, 0x28	; 40
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	e8 e2       	ldi	r30, 0x28	; 40
     638:	f0 e0       	ldi	r31, 0x00	; 0
     63a:	80 81       	ld	r24, Z
     63c:	8f 7e       	andi	r24, 0xEF	; 239
     63e:	8c 93       	st	X, r24
    PORTD &= ~(1 << LEDPIN_RoodBoot1L);   //uit
     640:	ab e2       	ldi	r26, 0x2B	; 43
     642:	b0 e0       	ldi	r27, 0x00	; 0
     644:	eb e2       	ldi	r30, 0x2B	; 43
     646:	f0 e0       	ldi	r31, 0x00	; 0
     648:	80 81       	ld	r24, Z
     64a:	8f 77       	andi	r24, 0x7F	; 127
     64c:	8c 93       	st	X, r24
    PORTG &= ~(1 << LEDPIN_RoodBoot1B);  //aan
     64e:	a4 e3       	ldi	r26, 0x34	; 52
     650:	b0 e0       	ldi	r27, 0x00	; 0
     652:	e4 e3       	ldi	r30, 0x34	; 52
     654:	f0 e0       	ldi	r31, 0x00	; 0
     656:	80 81       	ld	r24, Z
     658:	8b 7f       	andi	r24, 0xFB	; 251
     65a:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1B);   //aan
     65c:	a8 e2       	ldi	r26, 0x28	; 40
     65e:	b0 e0       	ldi	r27, 0x00	; 0
     660:	e8 e2       	ldi	r30, 0x28	; 40
     662:	f0 e0       	ldi	r31, 0x00	; 0
     664:	80 81       	ld	r24, Z
     666:	8d 7f       	andi	r24, 0xFD	; 253
     668:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug1);    //uit
     66a:	a8 e2       	ldi	r26, 0x28	; 40
     66c:	b0 e0       	ldi	r27, 0x00	; 0
     66e:	e8 e2       	ldi	r30, 0x28	; 40
     670:	f0 e0       	ldi	r31, 0x00	; 0
     672:	80 81       	ld	r24, Z
     674:	80 68       	ori	r24, 0x80	; 128
     676:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug2);    //uit
     678:	a8 e2       	ldi	r26, 0x28	; 40
     67a:	b0 e0       	ldi	r27, 0x00	; 0
     67c:	e8 e2       	ldi	r30, 0x28	; 40
     67e:	f0 e0       	ldi	r31, 0x00	; 0
     680:	80 81       	ld	r24, Z
     682:	80 64       	ori	r24, 0x40	; 64
     684:	8c 93       	st	X, r24
    }
}
     686:	0f 90       	pop	r0
     688:	0f 90       	pop	r0
     68a:	cf 91       	pop	r28
     68c:	df 91       	pop	r29
     68e:	08 95       	ret

00000690 <Verlichtingbrugopen1Aan>:
void Verlichtingbrugopen1Aan(int aanO1)
{
     690:	df 93       	push	r29
     692:	cf 93       	push	r28
     694:	0f 92       	push	r0
     696:	0f 92       	push	r0
     698:	cd b7       	in	r28, 0x3d	; 61
     69a:	de b7       	in	r29, 0x3e	; 62
     69c:	9a 83       	std	Y+2, r25	; 0x02
     69e:	89 83       	std	Y+1, r24	; 0x01
    if (aanO1 == 1)
     6a0:	89 81       	ldd	r24, Y+1	; 0x01
     6a2:	9a 81       	ldd	r25, Y+2	; 0x02
     6a4:	81 30       	cpi	r24, 0x01	; 1
     6a6:	91 05       	cpc	r25, r1
     6a8:	c1 f5       	brne	.+112    	; 0x71a <Verlichtingbrugopen1Aan+0x8a>
    {
    PORTC |= (1 << LEDPIN_GroenBoot1R); //aan
     6aa:	a8 e2       	ldi	r26, 0x28	; 40
     6ac:	b0 e0       	ldi	r27, 0x00	; 0
     6ae:	e8 e2       	ldi	r30, 0x28	; 40
     6b0:	f0 e0       	ldi	r31, 0x00	; 0
     6b2:	80 81       	ld	r24, Z
     6b4:	80 62       	ori	r24, 0x20	; 32
     6b6:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_RoodBoot1R);   //uit
     6b8:	a8 e2       	ldi	r26, 0x28	; 40
     6ba:	b0 e0       	ldi	r27, 0x00	; 0
     6bc:	e8 e2       	ldi	r30, 0x28	; 40
     6be:	f0 e0       	ldi	r31, 0x00	; 0
     6c0:	80 81       	ld	r24, Z
     6c2:	81 60       	ori	r24, 0x01	; 1
     6c4:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GroenBoot1L); //aan
     6c6:	a8 e2       	ldi	r26, 0x28	; 40
     6c8:	b0 e0       	ldi	r27, 0x00	; 0
     6ca:	e8 e2       	ldi	r30, 0x28	; 40
     6cc:	f0 e0       	ldi	r31, 0x00	; 0
     6ce:	80 81       	ld	r24, Z
     6d0:	80 61       	ori	r24, 0x10	; 16
     6d2:	8c 93       	st	X, r24
    PORTD &= ~(1 << LEDPIN_RoodBoot1L);   //uit
     6d4:	ab e2       	ldi	r26, 0x2B	; 43
     6d6:	b0 e0       	ldi	r27, 0x00	; 0
     6d8:	eb e2       	ldi	r30, 0x2B	; 43
     6da:	f0 e0       	ldi	r31, 0x00	; 0
     6dc:	80 81       	ld	r24, Z
     6de:	8f 77       	andi	r24, 0x7F	; 127
     6e0:	8c 93       	st	X, r24
    PORTG &= ~(1 << LEDPIN_RoodBoot1B);  //uit
     6e2:	a4 e3       	ldi	r26, 0x34	; 52
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e4 e3       	ldi	r30, 0x34	; 52
     6e8:	f0 e0       	ldi	r31, 0x00	; 0
     6ea:	80 81       	ld	r24, Z
     6ec:	8b 7f       	andi	r24, 0xFB	; 251
     6ee:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GroenBoot1B);   //aan
     6f0:	a8 e2       	ldi	r26, 0x28	; 40
     6f2:	b0 e0       	ldi	r27, 0x00	; 0
     6f4:	e8 e2       	ldi	r30, 0x28	; 40
     6f6:	f0 e0       	ldi	r31, 0x00	; 0
     6f8:	80 81       	ld	r24, Z
     6fa:	82 60       	ori	r24, 0x02	; 2
     6fc:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug1);    //uit
     6fe:	a8 e2       	ldi	r26, 0x28	; 40
     700:	b0 e0       	ldi	r27, 0x00	; 0
     702:	e8 e2       	ldi	r30, 0x28	; 40
     704:	f0 e0       	ldi	r31, 0x00	; 0
     706:	80 81       	ld	r24, Z
     708:	80 68       	ori	r24, 0x80	; 128
     70a:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug2);    //uit
     70c:	a8 e2       	ldi	r26, 0x28	; 40
     70e:	b0 e0       	ldi	r27, 0x00	; 0
     710:	e8 e2       	ldi	r30, 0x28	; 40
     712:	f0 e0       	ldi	r31, 0x00	; 0
     714:	80 81       	ld	r24, Z
     716:	80 64       	ori	r24, 0x40	; 64
     718:	8c 93       	st	X, r24
    }
}
     71a:	0f 90       	pop	r0
     71c:	0f 90       	pop	r0
     71e:	cf 91       	pop	r28
     720:	df 91       	pop	r29
     722:	08 95       	ret

00000724 <Verlichtingbrugopen1Uit>:
void Verlichtingbrugopen1Uit(int uitO1)
{
     724:	df 93       	push	r29
     726:	cf 93       	push	r28
     728:	0f 92       	push	r0
     72a:	0f 92       	push	r0
     72c:	cd b7       	in	r28, 0x3d	; 61
     72e:	de b7       	in	r29, 0x3e	; 62
     730:	9a 83       	std	Y+2, r25	; 0x02
     732:	89 83       	std	Y+1, r24	; 0x01
    if (uitO1 == 1)
     734:	89 81       	ldd	r24, Y+1	; 0x01
     736:	9a 81       	ldd	r25, Y+2	; 0x02
     738:	81 30       	cpi	r24, 0x01	; 1
     73a:	91 05       	cpc	r25, r1
     73c:	c1 f5       	brne	.+112    	; 0x7ae <Verlichtingbrugopen1Uit+0x8a>
    {
    PORTC &= ~(1 << LEDPIN_GroenBoot1R); //aan
     73e:	a8 e2       	ldi	r26, 0x28	; 40
     740:	b0 e0       	ldi	r27, 0x00	; 0
     742:	e8 e2       	ldi	r30, 0x28	; 40
     744:	f0 e0       	ldi	r31, 0x00	; 0
     746:	80 81       	ld	r24, Z
     748:	8f 7d       	andi	r24, 0xDF	; 223
     74a:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_RoodBoot1R);   //uit
     74c:	a8 e2       	ldi	r26, 0x28	; 40
     74e:	b0 e0       	ldi	r27, 0x00	; 0
     750:	e8 e2       	ldi	r30, 0x28	; 40
     752:	f0 e0       	ldi	r31, 0x00	; 0
     754:	80 81       	ld	r24, Z
     756:	8e 7f       	andi	r24, 0xFE	; 254
     758:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1L); //aan
     75a:	a8 e2       	ldi	r26, 0x28	; 40
     75c:	b0 e0       	ldi	r27, 0x00	; 0
     75e:	e8 e2       	ldi	r30, 0x28	; 40
     760:	f0 e0       	ldi	r31, 0x00	; 0
     762:	80 81       	ld	r24, Z
     764:	8f 7e       	andi	r24, 0xEF	; 239
     766:	8c 93       	st	X, r24
    PORTD &= ~(1 << LEDPIN_RoodBoot1L);   //uit
     768:	ab e2       	ldi	r26, 0x2B	; 43
     76a:	b0 e0       	ldi	r27, 0x00	; 0
     76c:	eb e2       	ldi	r30, 0x2B	; 43
     76e:	f0 e0       	ldi	r31, 0x00	; 0
     770:	80 81       	ld	r24, Z
     772:	8f 77       	andi	r24, 0x7F	; 127
     774:	8c 93       	st	X, r24
    PORTG &= ~(1 << LEDPIN_RoodBoot1B);  //uit
     776:	a4 e3       	ldi	r26, 0x34	; 52
     778:	b0 e0       	ldi	r27, 0x00	; 0
     77a:	e4 e3       	ldi	r30, 0x34	; 52
     77c:	f0 e0       	ldi	r31, 0x00	; 0
     77e:	80 81       	ld	r24, Z
     780:	8b 7f       	andi	r24, 0xFB	; 251
     782:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1B);   //aan
     784:	a8 e2       	ldi	r26, 0x28	; 40
     786:	b0 e0       	ldi	r27, 0x00	; 0
     788:	e8 e2       	ldi	r30, 0x28	; 40
     78a:	f0 e0       	ldi	r31, 0x00	; 0
     78c:	80 81       	ld	r24, Z
     78e:	8d 7f       	andi	r24, 0xFD	; 253
     790:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug1);    //uit
     792:	a8 e2       	ldi	r26, 0x28	; 40
     794:	b0 e0       	ldi	r27, 0x00	; 0
     796:	e8 e2       	ldi	r30, 0x28	; 40
     798:	f0 e0       	ldi	r31, 0x00	; 0
     79a:	80 81       	ld	r24, Z
     79c:	80 68       	ori	r24, 0x80	; 128
     79e:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug2);    //uit
     7a0:	a8 e2       	ldi	r26, 0x28	; 40
     7a2:	b0 e0       	ldi	r27, 0x00	; 0
     7a4:	e8 e2       	ldi	r30, 0x28	; 40
     7a6:	f0 e0       	ldi	r31, 0x00	; 0
     7a8:	80 81       	ld	r24, Z
     7aa:	80 64       	ori	r24, 0x40	; 64
     7ac:	8c 93       	st	X, r24
    }
}
     7ae:	0f 90       	pop	r0
     7b0:	0f 90       	pop	r0
     7b2:	cf 91       	pop	r28
     7b4:	df 91       	pop	r29
     7b6:	08 95       	ret

000007b8 <Verlichtingbrugopen2Aan>:
void Verlichtingbrugopen2Aan(int aanO2)
{
     7b8:	df 93       	push	r29
     7ba:	cf 93       	push	r28
     7bc:	0f 92       	push	r0
     7be:	0f 92       	push	r0
     7c0:	cd b7       	in	r28, 0x3d	; 61
     7c2:	de b7       	in	r29, 0x3e	; 62
     7c4:	9a 83       	std	Y+2, r25	; 0x02
     7c6:	89 83       	std	Y+1, r24	; 0x01
    if (aanO2 == 1)
     7c8:	89 81       	ldd	r24, Y+1	; 0x01
     7ca:	9a 81       	ldd	r25, Y+2	; 0x02
     7cc:	81 30       	cpi	r24, 0x01	; 1
     7ce:	91 05       	cpc	r25, r1
     7d0:	c1 f5       	brne	.+112    	; 0x842 <Verlichtingbrugopen2Aan+0x8a>
    {
    PORTC |= (1 << LEDPIN_GroenBoot1R); //aan
     7d2:	a8 e2       	ldi	r26, 0x28	; 40
     7d4:	b0 e0       	ldi	r27, 0x00	; 0
     7d6:	e8 e2       	ldi	r30, 0x28	; 40
     7d8:	f0 e0       	ldi	r31, 0x00	; 0
     7da:	80 81       	ld	r24, Z
     7dc:	80 62       	ori	r24, 0x20	; 32
     7de:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_RoodBoot1R);   //uit
     7e0:	a8 e2       	ldi	r26, 0x28	; 40
     7e2:	b0 e0       	ldi	r27, 0x00	; 0
     7e4:	e8 e2       	ldi	r30, 0x28	; 40
     7e6:	f0 e0       	ldi	r31, 0x00	; 0
     7e8:	80 81       	ld	r24, Z
     7ea:	8e 7f       	andi	r24, 0xFE	; 254
     7ec:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GroenBoot1L); //aan
     7ee:	a8 e2       	ldi	r26, 0x28	; 40
     7f0:	b0 e0       	ldi	r27, 0x00	; 0
     7f2:	e8 e2       	ldi	r30, 0x28	; 40
     7f4:	f0 e0       	ldi	r31, 0x00	; 0
     7f6:	80 81       	ld	r24, Z
     7f8:	80 61       	ori	r24, 0x10	; 16
     7fa:	8c 93       	st	X, r24
    PORTD |= (1 << LEDPIN_RoodBoot1L);   //uit
     7fc:	ab e2       	ldi	r26, 0x2B	; 43
     7fe:	b0 e0       	ldi	r27, 0x00	; 0
     800:	eb e2       	ldi	r30, 0x2B	; 43
     802:	f0 e0       	ldi	r31, 0x00	; 0
     804:	80 81       	ld	r24, Z
     806:	80 68       	ori	r24, 0x80	; 128
     808:	8c 93       	st	X, r24
    PORTG &= ~(1 << LEDPIN_RoodBoot1B);  //uit
     80a:	a4 e3       	ldi	r26, 0x34	; 52
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e4 e3       	ldi	r30, 0x34	; 52
     810:	f0 e0       	ldi	r31, 0x00	; 0
     812:	80 81       	ld	r24, Z
     814:	8b 7f       	andi	r24, 0xFB	; 251
     816:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GroenBoot1B);   //aan
     818:	a8 e2       	ldi	r26, 0x28	; 40
     81a:	b0 e0       	ldi	r27, 0x00	; 0
     81c:	e8 e2       	ldi	r30, 0x28	; 40
     81e:	f0 e0       	ldi	r31, 0x00	; 0
     820:	80 81       	ld	r24, Z
     822:	82 60       	ori	r24, 0x02	; 2
     824:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug1);    //uit
     826:	a8 e2       	ldi	r26, 0x28	; 40
     828:	b0 e0       	ldi	r27, 0x00	; 0
     82a:	e8 e2       	ldi	r30, 0x28	; 40
     82c:	f0 e0       	ldi	r31, 0x00	; 0
     82e:	80 81       	ld	r24, Z
     830:	80 68       	ori	r24, 0x80	; 128
     832:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug2);    //uit
     834:	a8 e2       	ldi	r26, 0x28	; 40
     836:	b0 e0       	ldi	r27, 0x00	; 0
     838:	e8 e2       	ldi	r30, 0x28	; 40
     83a:	f0 e0       	ldi	r31, 0x00	; 0
     83c:	80 81       	ld	r24, Z
     83e:	80 64       	ori	r24, 0x40	; 64
     840:	8c 93       	st	X, r24
    }
}
     842:	0f 90       	pop	r0
     844:	0f 90       	pop	r0
     846:	cf 91       	pop	r28
     848:	df 91       	pop	r29
     84a:	08 95       	ret

0000084c <Verlichtingbrugopen2Uit>:
void Verlichtingbrugopen2Uit(int uitO2)
{
     84c:	df 93       	push	r29
     84e:	cf 93       	push	r28
     850:	0f 92       	push	r0
     852:	0f 92       	push	r0
     854:	cd b7       	in	r28, 0x3d	; 61
     856:	de b7       	in	r29, 0x3e	; 62
     858:	9a 83       	std	Y+2, r25	; 0x02
     85a:	89 83       	std	Y+1, r24	; 0x01
    if (uitO2 == 1)
     85c:	89 81       	ldd	r24, Y+1	; 0x01
     85e:	9a 81       	ldd	r25, Y+2	; 0x02
     860:	81 30       	cpi	r24, 0x01	; 1
     862:	91 05       	cpc	r25, r1
     864:	c1 f5       	brne	.+112    	; 0x8d6 <Verlichtingbrugopen2Uit+0x8a>
    {
    PORTC &= ~(1 << LEDPIN_GroenBoot1R); //aan
     866:	a8 e2       	ldi	r26, 0x28	; 40
     868:	b0 e0       	ldi	r27, 0x00	; 0
     86a:	e8 e2       	ldi	r30, 0x28	; 40
     86c:	f0 e0       	ldi	r31, 0x00	; 0
     86e:	80 81       	ld	r24, Z
     870:	8f 7d       	andi	r24, 0xDF	; 223
     872:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_RoodBoot1R);   //uit
     874:	a8 e2       	ldi	r26, 0x28	; 40
     876:	b0 e0       	ldi	r27, 0x00	; 0
     878:	e8 e2       	ldi	r30, 0x28	; 40
     87a:	f0 e0       	ldi	r31, 0x00	; 0
     87c:	80 81       	ld	r24, Z
     87e:	8e 7f       	andi	r24, 0xFE	; 254
     880:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1L); //aan
     882:	a8 e2       	ldi	r26, 0x28	; 40
     884:	b0 e0       	ldi	r27, 0x00	; 0
     886:	e8 e2       	ldi	r30, 0x28	; 40
     888:	f0 e0       	ldi	r31, 0x00	; 0
     88a:	80 81       	ld	r24, Z
     88c:	8f 7e       	andi	r24, 0xEF	; 239
     88e:	8c 93       	st	X, r24
    PORTD &= ~(1 << LEDPIN_RoodBoot1L);   //uit
     890:	ab e2       	ldi	r26, 0x2B	; 43
     892:	b0 e0       	ldi	r27, 0x00	; 0
     894:	eb e2       	ldi	r30, 0x2B	; 43
     896:	f0 e0       	ldi	r31, 0x00	; 0
     898:	80 81       	ld	r24, Z
     89a:	8f 77       	andi	r24, 0x7F	; 127
     89c:	8c 93       	st	X, r24
    PORTG &= ~(1 << LEDPIN_RoodBoot1B);  //uit
     89e:	a4 e3       	ldi	r26, 0x34	; 52
     8a0:	b0 e0       	ldi	r27, 0x00	; 0
     8a2:	e4 e3       	ldi	r30, 0x34	; 52
     8a4:	f0 e0       	ldi	r31, 0x00	; 0
     8a6:	80 81       	ld	r24, Z
     8a8:	8b 7f       	andi	r24, 0xFB	; 251
     8aa:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1B);   //aan
     8ac:	a8 e2       	ldi	r26, 0x28	; 40
     8ae:	b0 e0       	ldi	r27, 0x00	; 0
     8b0:	e8 e2       	ldi	r30, 0x28	; 40
     8b2:	f0 e0       	ldi	r31, 0x00	; 0
     8b4:	80 81       	ld	r24, Z
     8b6:	8d 7f       	andi	r24, 0xFD	; 253
     8b8:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug1);    //uit
     8ba:	a8 e2       	ldi	r26, 0x28	; 40
     8bc:	b0 e0       	ldi	r27, 0x00	; 0
     8be:	e8 e2       	ldi	r30, 0x28	; 40
     8c0:	f0 e0       	ldi	r31, 0x00	; 0
     8c2:	80 81       	ld	r24, Z
     8c4:	80 68       	ori	r24, 0x80	; 128
     8c6:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug2);    //uit
     8c8:	a8 e2       	ldi	r26, 0x28	; 40
     8ca:	b0 e0       	ldi	r27, 0x00	; 0
     8cc:	e8 e2       	ldi	r30, 0x28	; 40
     8ce:	f0 e0       	ldi	r31, 0x00	; 0
     8d0:	80 81       	ld	r24, Z
     8d2:	80 64       	ori	r24, 0x40	; 64
     8d4:	8c 93       	st	X, r24
    }
}
     8d6:	0f 90       	pop	r0
     8d8:	0f 90       	pop	r0
     8da:	cf 91       	pop	r28
     8dc:	df 91       	pop	r29
     8de:	08 95       	ret

000008e0 <VerlichtingbrugsluitAan>:
void VerlichtingbrugsluitAan(int aanS)
{
     8e0:	df 93       	push	r29
     8e2:	cf 93       	push	r28
     8e4:	0f 92       	push	r0
     8e6:	0f 92       	push	r0
     8e8:	cd b7       	in	r28, 0x3d	; 61
     8ea:	de b7       	in	r29, 0x3e	; 62
     8ec:	9a 83       	std	Y+2, r25	; 0x02
     8ee:	89 83       	std	Y+1, r24	; 0x01
    if (aanS == 1)
     8f0:	89 81       	ldd	r24, Y+1	; 0x01
     8f2:	9a 81       	ldd	r25, Y+2	; 0x02
     8f4:	81 30       	cpi	r24, 0x01	; 1
     8f6:	91 05       	cpc	r25, r1
     8f8:	c1 f5       	brne	.+112    	; 0x96a <VerlichtingbrugsluitAan+0x8a>
    {
    PORTC &= ~(1 << LEDPIN_GroenBoot1R); //uit
     8fa:	a8 e2       	ldi	r26, 0x28	; 40
     8fc:	b0 e0       	ldi	r27, 0x00	; 0
     8fe:	e8 e2       	ldi	r30, 0x28	; 40
     900:	f0 e0       	ldi	r31, 0x00	; 0
     902:	80 81       	ld	r24, Z
     904:	8f 7d       	andi	r24, 0xDF	; 223
     906:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_RoodBoot1R);   //uit
     908:	a8 e2       	ldi	r26, 0x28	; 40
     90a:	b0 e0       	ldi	r27, 0x00	; 0
     90c:	e8 e2       	ldi	r30, 0x28	; 40
     90e:	f0 e0       	ldi	r31, 0x00	; 0
     910:	80 81       	ld	r24, Z
     912:	81 60       	ori	r24, 0x01	; 1
     914:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1L); //uit
     916:	a8 e2       	ldi	r26, 0x28	; 40
     918:	b0 e0       	ldi	r27, 0x00	; 0
     91a:	e8 e2       	ldi	r30, 0x28	; 40
     91c:	f0 e0       	ldi	r31, 0x00	; 0
     91e:	80 81       	ld	r24, Z
     920:	8f 7e       	andi	r24, 0xEF	; 239
     922:	8c 93       	st	X, r24
    PORTD |= (1 << LEDPIN_RoodBoot1L);   //uit
     924:	ab e2       	ldi	r26, 0x2B	; 43
     926:	b0 e0       	ldi	r27, 0x00	; 0
     928:	eb e2       	ldi	r30, 0x2B	; 43
     92a:	f0 e0       	ldi	r31, 0x00	; 0
     92c:	80 81       	ld	r24, Z
     92e:	80 68       	ori	r24, 0x80	; 128
     930:	8c 93       	st	X, r24
    PORTG &= ~(1 << LEDPIN_RoodBoot1B);  //aan
     932:	a4 e3       	ldi	r26, 0x34	; 52
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e4 e3       	ldi	r30, 0x34	; 52
     938:	f0 e0       	ldi	r31, 0x00	; 0
     93a:	80 81       	ld	r24, Z
     93c:	8b 7f       	andi	r24, 0xFB	; 251
     93e:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1B);   //uit
     940:	a8 e2       	ldi	r26, 0x28	; 40
     942:	b0 e0       	ldi	r27, 0x00	; 0
     944:	e8 e2       	ldi	r30, 0x28	; 40
     946:	f0 e0       	ldi	r31, 0x00	; 0
     948:	80 81       	ld	r24, Z
     94a:	8d 7f       	andi	r24, 0xFD	; 253
     94c:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug1);    //uit
     94e:	a8 e2       	ldi	r26, 0x28	; 40
     950:	b0 e0       	ldi	r27, 0x00	; 0
     952:	e8 e2       	ldi	r30, 0x28	; 40
     954:	f0 e0       	ldi	r31, 0x00	; 0
     956:	80 81       	ld	r24, Z
     958:	80 68       	ori	r24, 0x80	; 128
     95a:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug2);    //uit
     95c:	a8 e2       	ldi	r26, 0x28	; 40
     95e:	b0 e0       	ldi	r27, 0x00	; 0
     960:	e8 e2       	ldi	r30, 0x28	; 40
     962:	f0 e0       	ldi	r31, 0x00	; 0
     964:	80 81       	ld	r24, Z
     966:	80 64       	ori	r24, 0x40	; 64
     968:	8c 93       	st	X, r24
    }
}
     96a:	0f 90       	pop	r0
     96c:	0f 90       	pop	r0
     96e:	cf 91       	pop	r28
     970:	df 91       	pop	r29
     972:	08 95       	ret

00000974 <VerlichtingbrugsluitUit>:
void VerlichtingbrugsluitUit(int uitS)
{
     974:	df 93       	push	r29
     976:	cf 93       	push	r28
     978:	0f 92       	push	r0
     97a:	0f 92       	push	r0
     97c:	cd b7       	in	r28, 0x3d	; 61
     97e:	de b7       	in	r29, 0x3e	; 62
     980:	9a 83       	std	Y+2, r25	; 0x02
     982:	89 83       	std	Y+1, r24	; 0x01
    if (uitS == 1)
     984:	89 81       	ldd	r24, Y+1	; 0x01
     986:	9a 81       	ldd	r25, Y+2	; 0x02
     988:	81 30       	cpi	r24, 0x01	; 1
     98a:	91 05       	cpc	r25, r1
     98c:	c1 f5       	brne	.+112    	; 0x9fe <VerlichtingbrugsluitUit+0x8a>
    {
    PORTC &= ~(1 << LEDPIN_GroenBoot1R); //uit
     98e:	a8 e2       	ldi	r26, 0x28	; 40
     990:	b0 e0       	ldi	r27, 0x00	; 0
     992:	e8 e2       	ldi	r30, 0x28	; 40
     994:	f0 e0       	ldi	r31, 0x00	; 0
     996:	80 81       	ld	r24, Z
     998:	8f 7d       	andi	r24, 0xDF	; 223
     99a:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_RoodBoot1R);   //uit
     99c:	a8 e2       	ldi	r26, 0x28	; 40
     99e:	b0 e0       	ldi	r27, 0x00	; 0
     9a0:	e8 e2       	ldi	r30, 0x28	; 40
     9a2:	f0 e0       	ldi	r31, 0x00	; 0
     9a4:	80 81       	ld	r24, Z
     9a6:	8e 7f       	andi	r24, 0xFE	; 254
     9a8:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1L); //uit
     9aa:	a8 e2       	ldi	r26, 0x28	; 40
     9ac:	b0 e0       	ldi	r27, 0x00	; 0
     9ae:	e8 e2       	ldi	r30, 0x28	; 40
     9b0:	f0 e0       	ldi	r31, 0x00	; 0
     9b2:	80 81       	ld	r24, Z
     9b4:	8f 7e       	andi	r24, 0xEF	; 239
     9b6:	8c 93       	st	X, r24
    PORTD &= ~(1 << LEDPIN_RoodBoot1L);   //uit
     9b8:	ab e2       	ldi	r26, 0x2B	; 43
     9ba:	b0 e0       	ldi	r27, 0x00	; 0
     9bc:	eb e2       	ldi	r30, 0x2B	; 43
     9be:	f0 e0       	ldi	r31, 0x00	; 0
     9c0:	80 81       	ld	r24, Z
     9c2:	8f 77       	andi	r24, 0x7F	; 127
     9c4:	8c 93       	st	X, r24
    PORTG &= ~(1 << LEDPIN_RoodBoot1B);  //aan
     9c6:	a4 e3       	ldi	r26, 0x34	; 52
     9c8:	b0 e0       	ldi	r27, 0x00	; 0
     9ca:	e4 e3       	ldi	r30, 0x34	; 52
     9cc:	f0 e0       	ldi	r31, 0x00	; 0
     9ce:	80 81       	ld	r24, Z
     9d0:	8b 7f       	andi	r24, 0xFB	; 251
     9d2:	8c 93       	st	X, r24
    PORTC &= ~(1 << LEDPIN_GroenBoot1B);   //uit
     9d4:	a8 e2       	ldi	r26, 0x28	; 40
     9d6:	b0 e0       	ldi	r27, 0x00	; 0
     9d8:	e8 e2       	ldi	r30, 0x28	; 40
     9da:	f0 e0       	ldi	r31, 0x00	; 0
     9dc:	80 81       	ld	r24, Z
     9de:	8d 7f       	andi	r24, 0xFD	; 253
     9e0:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug1);    //uit
     9e2:	a8 e2       	ldi	r26, 0x28	; 40
     9e4:	b0 e0       	ldi	r27, 0x00	; 0
     9e6:	e8 e2       	ldi	r30, 0x28	; 40
     9e8:	f0 e0       	ldi	r31, 0x00	; 0
     9ea:	80 81       	ld	r24, Z
     9ec:	80 68       	ori	r24, 0x80	; 128
     9ee:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug2);    //uit
     9f0:	a8 e2       	ldi	r26, 0x28	; 40
     9f2:	b0 e0       	ldi	r27, 0x00	; 0
     9f4:	e8 e2       	ldi	r30, 0x28	; 40
     9f6:	f0 e0       	ldi	r31, 0x00	; 0
     9f8:	80 81       	ld	r24, Z
     9fa:	80 64       	ori	r24, 0x40	; 64
     9fc:	8c 93       	st	X, r24
    }
}
     9fe:	0f 90       	pop	r0
     a00:	0f 90       	pop	r0
     a02:	cf 91       	pop	r28
     a04:	df 91       	pop	r29
     a06:	08 95       	ret

00000a08 <LedsbedieningpaneelRoodOpenAan>:

void LedsbedieningpaneelRoodOpenAan(int roodopenaan)
{if (roodopenaan == 1){PORTA |= (1 << LEDPIN_RoodOpen);}}
     a08:	df 93       	push	r29
     a0a:	cf 93       	push	r28
     a0c:	0f 92       	push	r0
     a0e:	0f 92       	push	r0
     a10:	cd b7       	in	r28, 0x3d	; 61
     a12:	de b7       	in	r29, 0x3e	; 62
     a14:	9a 83       	std	Y+2, r25	; 0x02
     a16:	89 83       	std	Y+1, r24	; 0x01
     a18:	89 81       	ldd	r24, Y+1	; 0x01
     a1a:	9a 81       	ldd	r25, Y+2	; 0x02
     a1c:	81 30       	cpi	r24, 0x01	; 1
     a1e:	91 05       	cpc	r25, r1
     a20:	39 f4       	brne	.+14     	; 0xa30 <LedsbedieningpaneelRoodOpenAan+0x28>
     a22:	a2 e2       	ldi	r26, 0x22	; 34
     a24:	b0 e0       	ldi	r27, 0x00	; 0
     a26:	e2 e2       	ldi	r30, 0x22	; 34
     a28:	f0 e0       	ldi	r31, 0x00	; 0
     a2a:	80 81       	ld	r24, Z
     a2c:	80 64       	ori	r24, 0x40	; 64
     a2e:	8c 93       	st	X, r24
     a30:	0f 90       	pop	r0
     a32:	0f 90       	pop	r0
     a34:	cf 91       	pop	r28
     a36:	df 91       	pop	r29
     a38:	08 95       	ret

00000a3a <LedsbedieningpaneelRoodOpenUit>:

void LedsbedieningpaneelRoodOpenUit(int roodopenuit)
{if (roodopenuit == 1){PORTA &= ~(1 << LEDPIN_RoodOpen);}}
     a3a:	df 93       	push	r29
     a3c:	cf 93       	push	r28
     a3e:	0f 92       	push	r0
     a40:	0f 92       	push	r0
     a42:	cd b7       	in	r28, 0x3d	; 61
     a44:	de b7       	in	r29, 0x3e	; 62
     a46:	9a 83       	std	Y+2, r25	; 0x02
     a48:	89 83       	std	Y+1, r24	; 0x01
     a4a:	89 81       	ldd	r24, Y+1	; 0x01
     a4c:	9a 81       	ldd	r25, Y+2	; 0x02
     a4e:	81 30       	cpi	r24, 0x01	; 1
     a50:	91 05       	cpc	r25, r1
     a52:	39 f4       	brne	.+14     	; 0xa62 <LedsbedieningpaneelRoodOpenUit+0x28>
     a54:	a2 e2       	ldi	r26, 0x22	; 34
     a56:	b0 e0       	ldi	r27, 0x00	; 0
     a58:	e2 e2       	ldi	r30, 0x22	; 34
     a5a:	f0 e0       	ldi	r31, 0x00	; 0
     a5c:	80 81       	ld	r24, Z
     a5e:	8f 7b       	andi	r24, 0xBF	; 191
     a60:	8c 93       	st	X, r24
     a62:	0f 90       	pop	r0
     a64:	0f 90       	pop	r0
     a66:	cf 91       	pop	r28
     a68:	df 91       	pop	r29
     a6a:	08 95       	ret

00000a6c <LedsbedieningpaneelRoodDichtAan>:

void LedsbedieningpaneelRoodDichtAan(int rooddichtaan)
{if (rooddichtaan == 1){PORTA |= (1 << LEDPIN_RoodDicht);}}
     a6c:	df 93       	push	r29
     a6e:	cf 93       	push	r28
     a70:	0f 92       	push	r0
     a72:	0f 92       	push	r0
     a74:	cd b7       	in	r28, 0x3d	; 61
     a76:	de b7       	in	r29, 0x3e	; 62
     a78:	9a 83       	std	Y+2, r25	; 0x02
     a7a:	89 83       	std	Y+1, r24	; 0x01
     a7c:	89 81       	ldd	r24, Y+1	; 0x01
     a7e:	9a 81       	ldd	r25, Y+2	; 0x02
     a80:	81 30       	cpi	r24, 0x01	; 1
     a82:	91 05       	cpc	r25, r1
     a84:	39 f4       	brne	.+14     	; 0xa94 <LedsbedieningpaneelRoodDichtAan+0x28>
     a86:	a2 e2       	ldi	r26, 0x22	; 34
     a88:	b0 e0       	ldi	r27, 0x00	; 0
     a8a:	e2 e2       	ldi	r30, 0x22	; 34
     a8c:	f0 e0       	ldi	r31, 0x00	; 0
     a8e:	80 81       	ld	r24, Z
     a90:	80 68       	ori	r24, 0x80	; 128
     a92:	8c 93       	st	X, r24
     a94:	0f 90       	pop	r0
     a96:	0f 90       	pop	r0
     a98:	cf 91       	pop	r28
     a9a:	df 91       	pop	r29
     a9c:	08 95       	ret

00000a9e <LedsbedieningpaneelRoodDichtUit>:

void LedsbedieningpaneelRoodDichtUit(int rooddichtuit)
{if (rooddichtuit == 1){PORTA &= ~(1 << LEDPIN_RoodDicht);}}
     a9e:	df 93       	push	r29
     aa0:	cf 93       	push	r28
     aa2:	0f 92       	push	r0
     aa4:	0f 92       	push	r0
     aa6:	cd b7       	in	r28, 0x3d	; 61
     aa8:	de b7       	in	r29, 0x3e	; 62
     aaa:	9a 83       	std	Y+2, r25	; 0x02
     aac:	89 83       	std	Y+1, r24	; 0x01
     aae:	89 81       	ldd	r24, Y+1	; 0x01
     ab0:	9a 81       	ldd	r25, Y+2	; 0x02
     ab2:	81 30       	cpi	r24, 0x01	; 1
     ab4:	91 05       	cpc	r25, r1
     ab6:	39 f4       	brne	.+14     	; 0xac6 <LedsbedieningpaneelRoodDichtUit+0x28>
     ab8:	a2 e2       	ldi	r26, 0x22	; 34
     aba:	b0 e0       	ldi	r27, 0x00	; 0
     abc:	e2 e2       	ldi	r30, 0x22	; 34
     abe:	f0 e0       	ldi	r31, 0x00	; 0
     ac0:	80 81       	ld	r24, Z
     ac2:	8f 77       	andi	r24, 0x7F	; 127
     ac4:	8c 93       	st	X, r24
     ac6:	0f 90       	pop	r0
     ac8:	0f 90       	pop	r0
     aca:	cf 91       	pop	r28
     acc:	df 91       	pop	r29
     ace:	08 95       	ret

00000ad0 <LedsbedieningpaneelBlauwOpenenAan>:

void LedsbedieningpaneelBlauwOpenenAan(int blauwopenaan)
{if (blauwopenaan == 1){PORTA |= (1 << LEDPIN_BlauwOpenen);}}
     ad0:	df 93       	push	r29
     ad2:	cf 93       	push	r28
     ad4:	0f 92       	push	r0
     ad6:	0f 92       	push	r0
     ad8:	cd b7       	in	r28, 0x3d	; 61
     ada:	de b7       	in	r29, 0x3e	; 62
     adc:	9a 83       	std	Y+2, r25	; 0x02
     ade:	89 83       	std	Y+1, r24	; 0x01
     ae0:	89 81       	ldd	r24, Y+1	; 0x01
     ae2:	9a 81       	ldd	r25, Y+2	; 0x02
     ae4:	81 30       	cpi	r24, 0x01	; 1
     ae6:	91 05       	cpc	r25, r1
     ae8:	39 f4       	brne	.+14     	; 0xaf8 <LedsbedieningpaneelBlauwOpenenAan+0x28>
     aea:	a2 e2       	ldi	r26, 0x22	; 34
     aec:	b0 e0       	ldi	r27, 0x00	; 0
     aee:	e2 e2       	ldi	r30, 0x22	; 34
     af0:	f0 e0       	ldi	r31, 0x00	; 0
     af2:	80 81       	ld	r24, Z
     af4:	81 60       	ori	r24, 0x01	; 1
     af6:	8c 93       	st	X, r24
     af8:	0f 90       	pop	r0
     afa:	0f 90       	pop	r0
     afc:	cf 91       	pop	r28
     afe:	df 91       	pop	r29
     b00:	08 95       	ret

00000b02 <LedsbedieningpaneelBlauwOpenenUit>:

void LedsbedieningpaneelBlauwOpenenUit(int blauwopenuit)
{if (blauwopenuit == 1){PORTA &= ~(1 << LEDPIN_BlauwOpenen);}}
     b02:	df 93       	push	r29
     b04:	cf 93       	push	r28
     b06:	0f 92       	push	r0
     b08:	0f 92       	push	r0
     b0a:	cd b7       	in	r28, 0x3d	; 61
     b0c:	de b7       	in	r29, 0x3e	; 62
     b0e:	9a 83       	std	Y+2, r25	; 0x02
     b10:	89 83       	std	Y+1, r24	; 0x01
     b12:	89 81       	ldd	r24, Y+1	; 0x01
     b14:	9a 81       	ldd	r25, Y+2	; 0x02
     b16:	81 30       	cpi	r24, 0x01	; 1
     b18:	91 05       	cpc	r25, r1
     b1a:	39 f4       	brne	.+14     	; 0xb2a <LedsbedieningpaneelBlauwOpenenUit+0x28>
     b1c:	a2 e2       	ldi	r26, 0x22	; 34
     b1e:	b0 e0       	ldi	r27, 0x00	; 0
     b20:	e2 e2       	ldi	r30, 0x22	; 34
     b22:	f0 e0       	ldi	r31, 0x00	; 0
     b24:	80 81       	ld	r24, Z
     b26:	8e 7f       	andi	r24, 0xFE	; 254
     b28:	8c 93       	st	X, r24
     b2a:	0f 90       	pop	r0
     b2c:	0f 90       	pop	r0
     b2e:	cf 91       	pop	r28
     b30:	df 91       	pop	r29
     b32:	08 95       	ret

00000b34 <LedsbedieningpaneelBlauwSluitenAan>:

void LedsbedieningpaneelBlauwSluitenAan(int blauwsluitaan)
{if (blauwsluitaan == 1){PORTA |= (1 << LEDPIN_BlauwSluiten);}}
     b34:	df 93       	push	r29
     b36:	cf 93       	push	r28
     b38:	0f 92       	push	r0
     b3a:	0f 92       	push	r0
     b3c:	cd b7       	in	r28, 0x3d	; 61
     b3e:	de b7       	in	r29, 0x3e	; 62
     b40:	9a 83       	std	Y+2, r25	; 0x02
     b42:	89 83       	std	Y+1, r24	; 0x01
     b44:	89 81       	ldd	r24, Y+1	; 0x01
     b46:	9a 81       	ldd	r25, Y+2	; 0x02
     b48:	81 30       	cpi	r24, 0x01	; 1
     b4a:	91 05       	cpc	r25, r1
     b4c:	39 f4       	brne	.+14     	; 0xb5c <LedsbedieningpaneelBlauwSluitenAan+0x28>
     b4e:	a2 e2       	ldi	r26, 0x22	; 34
     b50:	b0 e0       	ldi	r27, 0x00	; 0
     b52:	e2 e2       	ldi	r30, 0x22	; 34
     b54:	f0 e0       	ldi	r31, 0x00	; 0
     b56:	80 81       	ld	r24, Z
     b58:	82 60       	ori	r24, 0x02	; 2
     b5a:	8c 93       	st	X, r24
     b5c:	0f 90       	pop	r0
     b5e:	0f 90       	pop	r0
     b60:	cf 91       	pop	r28
     b62:	df 91       	pop	r29
     b64:	08 95       	ret

00000b66 <LedsbedieningpaneelBlauwSluitenUit>:

void LedsbedieningpaneelBlauwSluitenUit(int blauwsluituit)
{if (blauwsluituit == 1){PORTA &= ~(1 << LEDPIN_BlauwSluiten);}}
     b66:	df 93       	push	r29
     b68:	cf 93       	push	r28
     b6a:	0f 92       	push	r0
     b6c:	0f 92       	push	r0
     b6e:	cd b7       	in	r28, 0x3d	; 61
     b70:	de b7       	in	r29, 0x3e	; 62
     b72:	9a 83       	std	Y+2, r25	; 0x02
     b74:	89 83       	std	Y+1, r24	; 0x01
     b76:	89 81       	ldd	r24, Y+1	; 0x01
     b78:	9a 81       	ldd	r25, Y+2	; 0x02
     b7a:	81 30       	cpi	r24, 0x01	; 1
     b7c:	91 05       	cpc	r25, r1
     b7e:	39 f4       	brne	.+14     	; 0xb8e <LedsbedieningpaneelBlauwSluitenUit+0x28>
     b80:	a2 e2       	ldi	r26, 0x22	; 34
     b82:	b0 e0       	ldi	r27, 0x00	; 0
     b84:	e2 e2       	ldi	r30, 0x22	; 34
     b86:	f0 e0       	ldi	r31, 0x00	; 0
     b88:	80 81       	ld	r24, Z
     b8a:	8d 7f       	andi	r24, 0xFD	; 253
     b8c:	8c 93       	st	X, r24
     b8e:	0f 90       	pop	r0
     b90:	0f 90       	pop	r0
     b92:	cf 91       	pop	r28
     b94:	df 91       	pop	r29
     b96:	08 95       	ret

00000b98 <LedsbedieningpaneelGeelBootAan>:

void LedsbedieningpaneelGeelBootAan(int geelbootaan)
{if (geelbootaan == 1){PORTB |= (1 << LEDPIN_GeelBoot);}}
     b98:	df 93       	push	r29
     b9a:	cf 93       	push	r28
     b9c:	0f 92       	push	r0
     b9e:	0f 92       	push	r0
     ba0:	cd b7       	in	r28, 0x3d	; 61
     ba2:	de b7       	in	r29, 0x3e	; 62
     ba4:	9a 83       	std	Y+2, r25	; 0x02
     ba6:	89 83       	std	Y+1, r24	; 0x01
     ba8:	89 81       	ldd	r24, Y+1	; 0x01
     baa:	9a 81       	ldd	r25, Y+2	; 0x02
     bac:	81 30       	cpi	r24, 0x01	; 1
     bae:	91 05       	cpc	r25, r1
     bb0:	39 f4       	brne	.+14     	; 0xbc0 <LedsbedieningpaneelGeelBootAan+0x28>
     bb2:	a5 e2       	ldi	r26, 0x25	; 37
     bb4:	b0 e0       	ldi	r27, 0x00	; 0
     bb6:	e5 e2       	ldi	r30, 0x25	; 37
     bb8:	f0 e0       	ldi	r31, 0x00	; 0
     bba:	80 81       	ld	r24, Z
     bbc:	88 60       	ori	r24, 0x08	; 8
     bbe:	8c 93       	st	X, r24
     bc0:	0f 90       	pop	r0
     bc2:	0f 90       	pop	r0
     bc4:	cf 91       	pop	r28
     bc6:	df 91       	pop	r29
     bc8:	08 95       	ret

00000bca <LedsbedieningpaneelGeelBootUit>:

void LedsbedieningpaneelGeelBootUit(int geelbootuit)
{if (geelbootuit == 1){PORTB &= ~(1 << LEDPIN_GeelBoot);}}
     bca:	df 93       	push	r29
     bcc:	cf 93       	push	r28
     bce:	0f 92       	push	r0
     bd0:	0f 92       	push	r0
     bd2:	cd b7       	in	r28, 0x3d	; 61
     bd4:	de b7       	in	r29, 0x3e	; 62
     bd6:	9a 83       	std	Y+2, r25	; 0x02
     bd8:	89 83       	std	Y+1, r24	; 0x01
     bda:	89 81       	ldd	r24, Y+1	; 0x01
     bdc:	9a 81       	ldd	r25, Y+2	; 0x02
     bde:	81 30       	cpi	r24, 0x01	; 1
     be0:	91 05       	cpc	r25, r1
     be2:	39 f4       	brne	.+14     	; 0xbf2 <LedsbedieningpaneelGeelBootUit+0x28>
     be4:	a5 e2       	ldi	r26, 0x25	; 37
     be6:	b0 e0       	ldi	r27, 0x00	; 0
     be8:	e5 e2       	ldi	r30, 0x25	; 37
     bea:	f0 e0       	ldi	r31, 0x00	; 0
     bec:	80 81       	ld	r24, Z
     bee:	87 7f       	andi	r24, 0xF7	; 247
     bf0:	8c 93       	st	X, r24
     bf2:	0f 90       	pop	r0
     bf4:	0f 90       	pop	r0
     bf6:	cf 91       	pop	r28
     bf8:	df 91       	pop	r29
     bfa:	08 95       	ret

00000bfc <LedsbedieningpaneelGeelPersoonAan>:

void LedsbedieningpaneelGeelPersoonAan(int geelpersoonaan)
{if (geelpersoonaan == 1){PORTB |= (1 << LEDPIN_GeelPersoon);}}
     bfc:	df 93       	push	r29
     bfe:	cf 93       	push	r28
     c00:	0f 92       	push	r0
     c02:	0f 92       	push	r0
     c04:	cd b7       	in	r28, 0x3d	; 61
     c06:	de b7       	in	r29, 0x3e	; 62
     c08:	9a 83       	std	Y+2, r25	; 0x02
     c0a:	89 83       	std	Y+1, r24	; 0x01
     c0c:	89 81       	ldd	r24, Y+1	; 0x01
     c0e:	9a 81       	ldd	r25, Y+2	; 0x02
     c10:	81 30       	cpi	r24, 0x01	; 1
     c12:	91 05       	cpc	r25, r1
     c14:	39 f4       	brne	.+14     	; 0xc24 <LedsbedieningpaneelGeelPersoonAan+0x28>
     c16:	a5 e2       	ldi	r26, 0x25	; 37
     c18:	b0 e0       	ldi	r27, 0x00	; 0
     c1a:	e5 e2       	ldi	r30, 0x25	; 37
     c1c:	f0 e0       	ldi	r31, 0x00	; 0
     c1e:	80 81       	ld	r24, Z
     c20:	84 60       	ori	r24, 0x04	; 4
     c22:	8c 93       	st	X, r24
     c24:	0f 90       	pop	r0
     c26:	0f 90       	pop	r0
     c28:	cf 91       	pop	r28
     c2a:	df 91       	pop	r29
     c2c:	08 95       	ret

00000c2e <LedsbedieningpaneelGeelPersoonUit>:

void LedsbedieningpaneelGeelPersoonUit(int geelpersoonuit)
{if (geelpersoonuit == 1){PORTB &= ~(1 << LEDPIN_GeelPersoon);}}
     c2e:	df 93       	push	r29
     c30:	cf 93       	push	r28
     c32:	0f 92       	push	r0
     c34:	0f 92       	push	r0
     c36:	cd b7       	in	r28, 0x3d	; 61
     c38:	de b7       	in	r29, 0x3e	; 62
     c3a:	9a 83       	std	Y+2, r25	; 0x02
     c3c:	89 83       	std	Y+1, r24	; 0x01
     c3e:	89 81       	ldd	r24, Y+1	; 0x01
     c40:	9a 81       	ldd	r25, Y+2	; 0x02
     c42:	81 30       	cpi	r24, 0x01	; 1
     c44:	91 05       	cpc	r25, r1
     c46:	39 f4       	brne	.+14     	; 0xc56 <LedsbedieningpaneelGeelPersoonUit+0x28>
     c48:	a5 e2       	ldi	r26, 0x25	; 37
     c4a:	b0 e0       	ldi	r27, 0x00	; 0
     c4c:	e5 e2       	ldi	r30, 0x25	; 37
     c4e:	f0 e0       	ldi	r31, 0x00	; 0
     c50:	80 81       	ld	r24, Z
     c52:	8b 7f       	andi	r24, 0xFB	; 251
     c54:	8c 93       	st	X, r24
     c56:	0f 90       	pop	r0
     c58:	0f 90       	pop	r0
     c5a:	cf 91       	pop	r28
     c5c:	df 91       	pop	r29
     c5e:	08 95       	ret

00000c60 <LedsbedieningpaneelNoodstopAan>:

void LedsbedieningpaneelNoodstopAan(int noodaan)
{if (noodaan == 1){PORTD |= (1 << led_aan);}}
     c60:	df 93       	push	r29
     c62:	cf 93       	push	r28
     c64:	0f 92       	push	r0
     c66:	0f 92       	push	r0
     c68:	cd b7       	in	r28, 0x3d	; 61
     c6a:	de b7       	in	r29, 0x3e	; 62
     c6c:	9a 83       	std	Y+2, r25	; 0x02
     c6e:	89 83       	std	Y+1, r24	; 0x01
     c70:	89 81       	ldd	r24, Y+1	; 0x01
     c72:	9a 81       	ldd	r25, Y+2	; 0x02
     c74:	81 30       	cpi	r24, 0x01	; 1
     c76:	91 05       	cpc	r25, r1
     c78:	39 f4       	brne	.+14     	; 0xc88 <LedsbedieningpaneelNoodstopAan+0x28>
     c7a:	ab e2       	ldi	r26, 0x2B	; 43
     c7c:	b0 e0       	ldi	r27, 0x00	; 0
     c7e:	eb e2       	ldi	r30, 0x2B	; 43
     c80:	f0 e0       	ldi	r31, 0x00	; 0
     c82:	80 81       	ld	r24, Z
     c84:	84 60       	ori	r24, 0x04	; 4
     c86:	8c 93       	st	X, r24
     c88:	0f 90       	pop	r0
     c8a:	0f 90       	pop	r0
     c8c:	cf 91       	pop	r28
     c8e:	df 91       	pop	r29
     c90:	08 95       	ret

00000c92 <LedsbedieningpaneelNoodstopUit>:

void LedsbedieningpaneelNoodstopUit(int nooduit)
{if (nooduit == 1){PORTD &= ~(1 << led_aan);}}
     c92:	df 93       	push	r29
     c94:	cf 93       	push	r28
     c96:	0f 92       	push	r0
     c98:	0f 92       	push	r0
     c9a:	cd b7       	in	r28, 0x3d	; 61
     c9c:	de b7       	in	r29, 0x3e	; 62
     c9e:	9a 83       	std	Y+2, r25	; 0x02
     ca0:	89 83       	std	Y+1, r24	; 0x01
     ca2:	89 81       	ldd	r24, Y+1	; 0x01
     ca4:	9a 81       	ldd	r25, Y+2	; 0x02
     ca6:	81 30       	cpi	r24, 0x01	; 1
     ca8:	91 05       	cpc	r25, r1
     caa:	39 f4       	brne	.+14     	; 0xcba <LedsbedieningpaneelNoodstopUit+0x28>
     cac:	ab e2       	ldi	r26, 0x2B	; 43
     cae:	b0 e0       	ldi	r27, 0x00	; 0
     cb0:	eb e2       	ldi	r30, 0x2B	; 43
     cb2:	f0 e0       	ldi	r31, 0x00	; 0
     cb4:	80 81       	ld	r24, Z
     cb6:	8b 7f       	andi	r24, 0xFB	; 251
     cb8:	8c 93       	st	X, r24
     cba:	0f 90       	pop	r0
     cbc:	0f 90       	pop	r0
     cbe:	cf 91       	pop	r28
     cc0:	df 91       	pop	r29
     cc2:	08 95       	ret

00000cc4 <waarschuwingslichtenAan>:


void waarschuwingslichtenAan(int waaraan)
{
     cc4:	df 93       	push	r29
     cc6:	cf 93       	push	r28
     cc8:	cd b7       	in	r28, 0x3d	; 61
     cca:	de b7       	in	r29, 0x3e	; 62
     ccc:	6e 97       	sbiw	r28, 0x1e	; 30
     cce:	0f b6       	in	r0, 0x3f	; 63
     cd0:	f8 94       	cli
     cd2:	de bf       	out	0x3e, r29	; 62
     cd4:	0f be       	out	0x3f, r0	; 63
     cd6:	cd bf       	out	0x3d, r28	; 61
     cd8:	9e 8f       	std	Y+30, r25	; 0x1e
     cda:	8d 8f       	std	Y+29, r24	; 0x1d
    if (waaraan == 1)
     cdc:	8d 8d       	ldd	r24, Y+29	; 0x1d
     cde:	9e 8d       	ldd	r25, Y+30	; 0x1e
     ce0:	81 30       	cpi	r24, 0x01	; 1
     ce2:	91 05       	cpc	r25, r1
     ce4:	09 f0       	breq	.+2      	; 0xce8 <waarschuwingslichtenAan+0x24>
     ce6:	00 c1       	rjmp	.+512    	; 0xee8 <waarschuwingslichtenAan+0x224>
    {
            PORTC &= ~(1 << LEDPIN_RoodBlink1);
     ce8:	a8 e2       	ldi	r26, 0x28	; 40
     cea:	b0 e0       	ldi	r27, 0x00	; 0
     cec:	e8 e2       	ldi	r30, 0x28	; 40
     cee:	f0 e0       	ldi	r31, 0x00	; 0
     cf0:	80 81       	ld	r24, Z
     cf2:	8b 7f       	andi	r24, 0xFB	; 251
     cf4:	8c 93       	st	X, r24
            PORTC |= (1 << LEDPIN_RoodBlink2);
     cf6:	a8 e2       	ldi	r26, 0x28	; 40
     cf8:	b0 e0       	ldi	r27, 0x00	; 0
     cfa:	e8 e2       	ldi	r30, 0x28	; 40
     cfc:	f0 e0       	ldi	r31, 0x00	; 0
     cfe:	80 81       	ld	r24, Z
     d00:	88 60       	ori	r24, 0x08	; 8
     d02:	8c 93       	st	X, r24
     d04:	80 e0       	ldi	r24, 0x00	; 0
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	a8 e4       	ldi	r26, 0x48	; 72
     d0a:	b3 e4       	ldi	r27, 0x43	; 67
     d0c:	89 8f       	std	Y+25, r24	; 0x19
     d0e:	9a 8f       	std	Y+26, r25	; 0x1a
     d10:	ab 8f       	std	Y+27, r26	; 0x1b
     d12:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d14:	69 8d       	ldd	r22, Y+25	; 0x19
     d16:	7a 8d       	ldd	r23, Y+26	; 0x1a
     d18:	8b 8d       	ldd	r24, Y+27	; 0x1b
     d1a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     d1c:	20 e0       	ldi	r18, 0x00	; 0
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	4a e7       	ldi	r20, 0x7A	; 122
     d22:	55 e4       	ldi	r21, 0x45	; 69
     d24:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
     d28:	dc 01       	movw	r26, r24
     d2a:	cb 01       	movw	r24, r22
     d2c:	8d 8b       	std	Y+21, r24	; 0x15
     d2e:	9e 8b       	std	Y+22, r25	; 0x16
     d30:	af 8b       	std	Y+23, r26	; 0x17
     d32:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     d34:	6d 89       	ldd	r22, Y+21	; 0x15
     d36:	7e 89       	ldd	r23, Y+22	; 0x16
     d38:	8f 89       	ldd	r24, Y+23	; 0x17
     d3a:	98 8d       	ldd	r25, Y+24	; 0x18
     d3c:	20 e0       	ldi	r18, 0x00	; 0
     d3e:	30 e0       	ldi	r19, 0x00	; 0
     d40:	40 e8       	ldi	r20, 0x80	; 128
     d42:	5f e3       	ldi	r21, 0x3F	; 63
     d44:	0e 94 2c 15 	call	0x2a58	; 0x2a58 <__cmpsf2>
     d48:	88 23       	and	r24, r24
     d4a:	2c f4       	brge	.+10     	; 0xd56 <waarschuwingslichtenAan+0x92>
		__ticks = 1;
     d4c:	81 e0       	ldi	r24, 0x01	; 1
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	9c 8b       	std	Y+20, r25	; 0x14
     d52:	8b 8b       	std	Y+19, r24	; 0x13
     d54:	3f c0       	rjmp	.+126    	; 0xdd4 <waarschuwingslichtenAan+0x110>
	else if (__tmp > 65535)
     d56:	6d 89       	ldd	r22, Y+21	; 0x15
     d58:	7e 89       	ldd	r23, Y+22	; 0x16
     d5a:	8f 89       	ldd	r24, Y+23	; 0x17
     d5c:	98 8d       	ldd	r25, Y+24	; 0x18
     d5e:	20 e0       	ldi	r18, 0x00	; 0
     d60:	3f ef       	ldi	r19, 0xFF	; 255
     d62:	4f e7       	ldi	r20, 0x7F	; 127
     d64:	57 e4       	ldi	r21, 0x47	; 71
     d66:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__gesf2>
     d6a:	18 16       	cp	r1, r24
     d6c:	4c f5       	brge	.+82     	; 0xdc0 <waarschuwingslichtenAan+0xfc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d6e:	69 8d       	ldd	r22, Y+25	; 0x19
     d70:	7a 8d       	ldd	r23, Y+26	; 0x1a
     d72:	8b 8d       	ldd	r24, Y+27	; 0x1b
     d74:	9c 8d       	ldd	r25, Y+28	; 0x1c
     d76:	20 e0       	ldi	r18, 0x00	; 0
     d78:	30 e0       	ldi	r19, 0x00	; 0
     d7a:	40 e2       	ldi	r20, 0x20	; 32
     d7c:	51 e4       	ldi	r21, 0x41	; 65
     d7e:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
     d82:	dc 01       	movw	r26, r24
     d84:	cb 01       	movw	r24, r22
     d86:	bc 01       	movw	r22, r24
     d88:	cd 01       	movw	r24, r26
     d8a:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
     d8e:	dc 01       	movw	r26, r24
     d90:	cb 01       	movw	r24, r22
     d92:	9c 8b       	std	Y+20, r25	; 0x14
     d94:	8b 8b       	std	Y+19, r24	; 0x13
     d96:	0f c0       	rjmp	.+30     	; 0xdb6 <waarschuwingslichtenAan+0xf2>
     d98:	80 e9       	ldi	r24, 0x90	; 144
     d9a:	91 e0       	ldi	r25, 0x01	; 1
     d9c:	9a 8b       	std	Y+18, r25	; 0x12
     d9e:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     da0:	89 89       	ldd	r24, Y+17	; 0x11
     da2:	9a 89       	ldd	r25, Y+18	; 0x12
     da4:	01 97       	sbiw	r24, 0x01	; 1
     da6:	f1 f7       	brne	.-4      	; 0xda4 <waarschuwingslichtenAan+0xe0>
     da8:	9a 8b       	std	Y+18, r25	; 0x12
     daa:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     dac:	8b 89       	ldd	r24, Y+19	; 0x13
     dae:	9c 89       	ldd	r25, Y+20	; 0x14
     db0:	01 97       	sbiw	r24, 0x01	; 1
     db2:	9c 8b       	std	Y+20, r25	; 0x14
     db4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     db6:	8b 89       	ldd	r24, Y+19	; 0x13
     db8:	9c 89       	ldd	r25, Y+20	; 0x14
     dba:	00 97       	sbiw	r24, 0x00	; 0
     dbc:	69 f7       	brne	.-38     	; 0xd98 <waarschuwingslichtenAan+0xd4>
     dbe:	14 c0       	rjmp	.+40     	; 0xde8 <waarschuwingslichtenAan+0x124>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     dc0:	6d 89       	ldd	r22, Y+21	; 0x15
     dc2:	7e 89       	ldd	r23, Y+22	; 0x16
     dc4:	8f 89       	ldd	r24, Y+23	; 0x17
     dc6:	98 8d       	ldd	r25, Y+24	; 0x18
     dc8:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
     dcc:	dc 01       	movw	r26, r24
     dce:	cb 01       	movw	r24, r22
     dd0:	9c 8b       	std	Y+20, r25	; 0x14
     dd2:	8b 8b       	std	Y+19, r24	; 0x13
     dd4:	8b 89       	ldd	r24, Y+19	; 0x13
     dd6:	9c 89       	ldd	r25, Y+20	; 0x14
     dd8:	98 8b       	std	Y+16, r25	; 0x10
     dda:	8f 87       	std	Y+15, r24	; 0x0f
     ddc:	8f 85       	ldd	r24, Y+15	; 0x0f
     dde:	98 89       	ldd	r25, Y+16	; 0x10
     de0:	01 97       	sbiw	r24, 0x01	; 1
     de2:	f1 f7       	brne	.-4      	; 0xde0 <waarschuwingslichtenAan+0x11c>
     de4:	98 8b       	std	Y+16, r25	; 0x10
     de6:	8f 87       	std	Y+15, r24	; 0x0f
            _delay_ms(200);
            PORTC |= (1 << LEDPIN_RoodBlink1);
     de8:	a8 e2       	ldi	r26, 0x28	; 40
     dea:	b0 e0       	ldi	r27, 0x00	; 0
     dec:	e8 e2       	ldi	r30, 0x28	; 40
     dee:	f0 e0       	ldi	r31, 0x00	; 0
     df0:	80 81       	ld	r24, Z
     df2:	84 60       	ori	r24, 0x04	; 4
     df4:	8c 93       	st	X, r24
            PORTC &= ~(1 << LEDPIN_RoodBlink2);
     df6:	a8 e2       	ldi	r26, 0x28	; 40
     df8:	b0 e0       	ldi	r27, 0x00	; 0
     dfa:	e8 e2       	ldi	r30, 0x28	; 40
     dfc:	f0 e0       	ldi	r31, 0x00	; 0
     dfe:	80 81       	ld	r24, Z
     e00:	87 7f       	andi	r24, 0xF7	; 247
     e02:	8c 93       	st	X, r24
     e04:	80 e0       	ldi	r24, 0x00	; 0
     e06:	90 e0       	ldi	r25, 0x00	; 0
     e08:	a8 e4       	ldi	r26, 0x48	; 72
     e0a:	b3 e4       	ldi	r27, 0x43	; 67
     e0c:	8b 87       	std	Y+11, r24	; 0x0b
     e0e:	9c 87       	std	Y+12, r25	; 0x0c
     e10:	ad 87       	std	Y+13, r26	; 0x0d
     e12:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e14:	6b 85       	ldd	r22, Y+11	; 0x0b
     e16:	7c 85       	ldd	r23, Y+12	; 0x0c
     e18:	8d 85       	ldd	r24, Y+13	; 0x0d
     e1a:	9e 85       	ldd	r25, Y+14	; 0x0e
     e1c:	20 e0       	ldi	r18, 0x00	; 0
     e1e:	30 e0       	ldi	r19, 0x00	; 0
     e20:	4a e7       	ldi	r20, 0x7A	; 122
     e22:	55 e4       	ldi	r21, 0x45	; 69
     e24:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
     e28:	dc 01       	movw	r26, r24
     e2a:	cb 01       	movw	r24, r22
     e2c:	8f 83       	std	Y+7, r24	; 0x07
     e2e:	98 87       	std	Y+8, r25	; 0x08
     e30:	a9 87       	std	Y+9, r26	; 0x09
     e32:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     e34:	6f 81       	ldd	r22, Y+7	; 0x07
     e36:	78 85       	ldd	r23, Y+8	; 0x08
     e38:	89 85       	ldd	r24, Y+9	; 0x09
     e3a:	9a 85       	ldd	r25, Y+10	; 0x0a
     e3c:	20 e0       	ldi	r18, 0x00	; 0
     e3e:	30 e0       	ldi	r19, 0x00	; 0
     e40:	40 e8       	ldi	r20, 0x80	; 128
     e42:	5f e3       	ldi	r21, 0x3F	; 63
     e44:	0e 94 2c 15 	call	0x2a58	; 0x2a58 <__cmpsf2>
     e48:	88 23       	and	r24, r24
     e4a:	2c f4       	brge	.+10     	; 0xe56 <waarschuwingslichtenAan+0x192>
		__ticks = 1;
     e4c:	81 e0       	ldi	r24, 0x01	; 1
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	9e 83       	std	Y+6, r25	; 0x06
     e52:	8d 83       	std	Y+5, r24	; 0x05
     e54:	3f c0       	rjmp	.+126    	; 0xed4 <waarschuwingslichtenAan+0x210>
	else if (__tmp > 65535)
     e56:	6f 81       	ldd	r22, Y+7	; 0x07
     e58:	78 85       	ldd	r23, Y+8	; 0x08
     e5a:	89 85       	ldd	r24, Y+9	; 0x09
     e5c:	9a 85       	ldd	r25, Y+10	; 0x0a
     e5e:	20 e0       	ldi	r18, 0x00	; 0
     e60:	3f ef       	ldi	r19, 0xFF	; 255
     e62:	4f e7       	ldi	r20, 0x7F	; 127
     e64:	57 e4       	ldi	r21, 0x47	; 71
     e66:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__gesf2>
     e6a:	18 16       	cp	r1, r24
     e6c:	4c f5       	brge	.+82     	; 0xec0 <waarschuwingslichtenAan+0x1fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e6e:	6b 85       	ldd	r22, Y+11	; 0x0b
     e70:	7c 85       	ldd	r23, Y+12	; 0x0c
     e72:	8d 85       	ldd	r24, Y+13	; 0x0d
     e74:	9e 85       	ldd	r25, Y+14	; 0x0e
     e76:	20 e0       	ldi	r18, 0x00	; 0
     e78:	30 e0       	ldi	r19, 0x00	; 0
     e7a:	40 e2       	ldi	r20, 0x20	; 32
     e7c:	51 e4       	ldi	r21, 0x41	; 65
     e7e:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
     e82:	dc 01       	movw	r26, r24
     e84:	cb 01       	movw	r24, r22
     e86:	bc 01       	movw	r22, r24
     e88:	cd 01       	movw	r24, r26
     e8a:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
     e8e:	dc 01       	movw	r26, r24
     e90:	cb 01       	movw	r24, r22
     e92:	9e 83       	std	Y+6, r25	; 0x06
     e94:	8d 83       	std	Y+5, r24	; 0x05
     e96:	0f c0       	rjmp	.+30     	; 0xeb6 <waarschuwingslichtenAan+0x1f2>
     e98:	80 e9       	ldi	r24, 0x90	; 144
     e9a:	91 e0       	ldi	r25, 0x01	; 1
     e9c:	9c 83       	std	Y+4, r25	; 0x04
     e9e:	8b 83       	std	Y+3, r24	; 0x03
     ea0:	8b 81       	ldd	r24, Y+3	; 0x03
     ea2:	9c 81       	ldd	r25, Y+4	; 0x04
     ea4:	01 97       	sbiw	r24, 0x01	; 1
     ea6:	f1 f7       	brne	.-4      	; 0xea4 <waarschuwingslichtenAan+0x1e0>
     ea8:	9c 83       	std	Y+4, r25	; 0x04
     eaa:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     eac:	8d 81       	ldd	r24, Y+5	; 0x05
     eae:	9e 81       	ldd	r25, Y+6	; 0x06
     eb0:	01 97       	sbiw	r24, 0x01	; 1
     eb2:	9e 83       	std	Y+6, r25	; 0x06
     eb4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     eb6:	8d 81       	ldd	r24, Y+5	; 0x05
     eb8:	9e 81       	ldd	r25, Y+6	; 0x06
     eba:	00 97       	sbiw	r24, 0x00	; 0
     ebc:	69 f7       	brne	.-38     	; 0xe98 <waarschuwingslichtenAan+0x1d4>
     ebe:	14 c0       	rjmp	.+40     	; 0xee8 <waarschuwingslichtenAan+0x224>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ec0:	6f 81       	ldd	r22, Y+7	; 0x07
     ec2:	78 85       	ldd	r23, Y+8	; 0x08
     ec4:	89 85       	ldd	r24, Y+9	; 0x09
     ec6:	9a 85       	ldd	r25, Y+10	; 0x0a
     ec8:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
     ecc:	dc 01       	movw	r26, r24
     ece:	cb 01       	movw	r24, r22
     ed0:	9e 83       	std	Y+6, r25	; 0x06
     ed2:	8d 83       	std	Y+5, r24	; 0x05
     ed4:	8d 81       	ldd	r24, Y+5	; 0x05
     ed6:	9e 81       	ldd	r25, Y+6	; 0x06
     ed8:	9a 83       	std	Y+2, r25	; 0x02
     eda:	89 83       	std	Y+1, r24	; 0x01
     edc:	89 81       	ldd	r24, Y+1	; 0x01
     ede:	9a 81       	ldd	r25, Y+2	; 0x02
     ee0:	01 97       	sbiw	r24, 0x01	; 1
     ee2:	f1 f7       	brne	.-4      	; 0xee0 <waarschuwingslichtenAan+0x21c>
     ee4:	9a 83       	std	Y+2, r25	; 0x02
     ee6:	89 83       	std	Y+1, r24	; 0x01
            _delay_ms(200);
    }
}
     ee8:	6e 96       	adiw	r28, 0x1e	; 30
     eea:	0f b6       	in	r0, 0x3f	; 63
     eec:	f8 94       	cli
     eee:	de bf       	out	0x3e, r29	; 62
     ef0:	0f be       	out	0x3f, r0	; 63
     ef2:	cd bf       	out	0x3d, r28	; 61
     ef4:	cf 91       	pop	r28
     ef6:	df 91       	pop	r29
     ef8:	08 95       	ret

00000efa <waarschuwingslichtenUit>:
void waarschuwingslichtenUit(int waaruit)
{
     efa:	df 93       	push	r29
     efc:	cf 93       	push	r28
     efe:	0f 92       	push	r0
     f00:	0f 92       	push	r0
     f02:	cd b7       	in	r28, 0x3d	; 61
     f04:	de b7       	in	r29, 0x3e	; 62
     f06:	9a 83       	std	Y+2, r25	; 0x02
     f08:	89 83       	std	Y+1, r24	; 0x01
    if (waaruit == 1) {PORTC |= (1 << LEDPIN_RoodBlink1);      PORTC |= (1 << LEDPIN_RoodBlink2);}}
     f0a:	89 81       	ldd	r24, Y+1	; 0x01
     f0c:	9a 81       	ldd	r25, Y+2	; 0x02
     f0e:	81 30       	cpi	r24, 0x01	; 1
     f10:	91 05       	cpc	r25, r1
     f12:	71 f4       	brne	.+28     	; 0xf30 <waarschuwingslichtenUit+0x36>
     f14:	a8 e2       	ldi	r26, 0x28	; 40
     f16:	b0 e0       	ldi	r27, 0x00	; 0
     f18:	e8 e2       	ldi	r30, 0x28	; 40
     f1a:	f0 e0       	ldi	r31, 0x00	; 0
     f1c:	80 81       	ld	r24, Z
     f1e:	84 60       	ori	r24, 0x04	; 4
     f20:	8c 93       	st	X, r24
     f22:	a8 e2       	ldi	r26, 0x28	; 40
     f24:	b0 e0       	ldi	r27, 0x00	; 0
     f26:	e8 e2       	ldi	r30, 0x28	; 40
     f28:	f0 e0       	ldi	r31, 0x00	; 0
     f2a:	80 81       	ld	r24, Z
     f2c:	88 60       	ori	r24, 0x08	; 8
     f2e:	8c 93       	st	X, r24
     f30:	0f 90       	pop	r0
     f32:	0f 90       	pop	r0
     f34:	cf 91       	pop	r28
     f36:	df 91       	pop	r29
     f38:	08 95       	ret

00000f3a <init>:

void init()
{init_h_bridge();               init_servo();}
     f3a:	df 93       	push	r29
     f3c:	cf 93       	push	r28
     f3e:	cd b7       	in	r28, 0x3d	; 61
     f40:	de b7       	in	r29, 0x3e	; 62
     f42:	0e 94 4d 01 	call	0x29a	; 0x29a <init_h_bridge>
     f46:	0e 94 15 14 	call	0x282a	; 0x282a <init_servo>
     f4a:	cf 91       	pop	r28
     f4c:	df 91       	pop	r29
     f4e:	08 95       	ret

00000f50 <Slagbomendicht>:

void Slagbomendicht(int slagdicht)
{
     f50:	df 93       	push	r29
     f52:	cf 93       	push	r28
     f54:	0f 92       	push	r0
     f56:	0f 92       	push	r0
     f58:	cd b7       	in	r28, 0x3d	; 61
     f5a:	de b7       	in	r29, 0x3e	; 62
     f5c:	9a 83       	std	Y+2, r25	; 0x02
     f5e:	89 83       	std	Y+1, r24	; 0x01
    if (slagdicht == 1) {servo1_set_percentage(-80);    servo2_set_percentage(-70);}}
     f60:	89 81       	ldd	r24, Y+1	; 0x01
     f62:	9a 81       	ldd	r25, Y+2	; 0x02
     f64:	81 30       	cpi	r24, 0x01	; 1
     f66:	91 05       	cpc	r25, r1
     f68:	31 f4       	brne	.+12     	; 0xf76 <Slagbomendicht+0x26>
     f6a:	80 eb       	ldi	r24, 0xB0	; 176
     f6c:	0e 94 42 14 	call	0x2884	; 0x2884 <servo1_set_percentage>
     f70:	8a eb       	ldi	r24, 0xBA	; 186
     f72:	0e 94 81 14 	call	0x2902	; 0x2902 <servo2_set_percentage>
     f76:	0f 90       	pop	r0
     f78:	0f 90       	pop	r0
     f7a:	cf 91       	pop	r28
     f7c:	df 91       	pop	r29
     f7e:	08 95       	ret

00000f80 <Slagbomenopen>:

void Slagbomenopen(int slagopen)
{
     f80:	df 93       	push	r29
     f82:	cf 93       	push	r28
     f84:	0f 92       	push	r0
     f86:	0f 92       	push	r0
     f88:	cd b7       	in	r28, 0x3d	; 61
     f8a:	de b7       	in	r29, 0x3e	; 62
     f8c:	9a 83       	std	Y+2, r25	; 0x02
     f8e:	89 83       	std	Y+1, r24	; 0x01
    if (slagopen == 1) {servo1_set_percentage(80);     servo2_set_percentage(70);}}
     f90:	89 81       	ldd	r24, Y+1	; 0x01
     f92:	9a 81       	ldd	r25, Y+2	; 0x02
     f94:	81 30       	cpi	r24, 0x01	; 1
     f96:	91 05       	cpc	r25, r1
     f98:	31 f4       	brne	.+12     	; 0xfa6 <Slagbomenopen+0x26>
     f9a:	80 e5       	ldi	r24, 0x50	; 80
     f9c:	0e 94 42 14 	call	0x2884	; 0x2884 <servo1_set_percentage>
     fa0:	86 e4       	ldi	r24, 0x46	; 70
     fa2:	0e 94 81 14 	call	0x2902	; 0x2902 <servo2_set_percentage>
     fa6:	0f 90       	pop	r0
     fa8:	0f 90       	pop	r0
     faa:	cf 91       	pop	r28
     fac:	df 91       	pop	r29
     fae:	08 95       	ret

00000fb0 <Motoruit>:

void Motoruit()
{h_bridge_set_percentage(0);}
     fb0:	df 93       	push	r29
     fb2:	cf 93       	push	r28
     fb4:	cd b7       	in	r28, 0x3d	; 61
     fb6:	de b7       	in	r29, 0x3e	; 62
     fb8:	80 e0       	ldi	r24, 0x00	; 0
     fba:	0e 94 82 01 	call	0x304	; 0x304 <h_bridge_set_percentage>
     fbe:	cf 91       	pop	r28
     fc0:	df 91       	pop	r29
     fc2:	08 95       	ret

00000fc4 <Brugomhoog>:

void Brugomhoog()
{h_bridge_set_percentage(-33);}
     fc4:	df 93       	push	r29
     fc6:	cf 93       	push	r28
     fc8:	cd b7       	in	r28, 0x3d	; 61
     fca:	de b7       	in	r29, 0x3e	; 62
     fcc:	8f ed       	ldi	r24, 0xDF	; 223
     fce:	0e 94 82 01 	call	0x304	; 0x304 <h_bridge_set_percentage>
     fd2:	cf 91       	pop	r28
     fd4:	df 91       	pop	r29
     fd6:	08 95       	ret

00000fd8 <Brugomlaag>:

void Brugomlaag()
{h_bridge_set_percentage(33);}
     fd8:	df 93       	push	r29
     fda:	cf 93       	push	r28
     fdc:	cd b7       	in	r28, 0x3d	; 61
     fde:	de b7       	in	r29, 0x3e	; 62
     fe0:	81 e2       	ldi	r24, 0x21	; 33
     fe2:	0e 94 82 01 	call	0x304	; 0x304 <h_bridge_set_percentage>
     fe6:	cf 91       	pop	r28
     fe8:	df 91       	pop	r29
     fea:	08 95       	ret

00000fec <informatie>:

void informatie()
{       //lees windmeter uit
     fec:	df 93       	push	r29
     fee:	cf 93       	push	r28
     ff0:	cd b7       	in	r28, 0x3d	; 61
     ff2:	de b7       	in	r29, 0x3e	; 62
    if (millisec - millisecWindmeter >= 5000)
     ff4:	80 91 04 02 	lds	r24, 0x0204
     ff8:	90 91 05 02 	lds	r25, 0x0205
     ffc:	a0 91 06 02 	lds	r26, 0x0206
    1000:	b0 91 07 02 	lds	r27, 0x0207
    1004:	20 91 0c 02 	lds	r18, 0x020C
    1008:	30 91 0d 02 	lds	r19, 0x020D
    100c:	40 91 0e 02 	lds	r20, 0x020E
    1010:	50 91 0f 02 	lds	r21, 0x020F
    1014:	82 1b       	sub	r24, r18
    1016:	93 0b       	sbc	r25, r19
    1018:	a4 0b       	sbc	r26, r20
    101a:	b5 0b       	sbc	r27, r21
    101c:	88 38       	cpi	r24, 0x88	; 136
    101e:	23 e1       	ldi	r18, 0x13	; 19
    1020:	92 07       	cpc	r25, r18
    1022:	20 e0       	ldi	r18, 0x00	; 0
    1024:	a2 07       	cpc	r26, r18
    1026:	20 e0       	ldi	r18, 0x00	; 0
    1028:	b2 07       	cpc	r27, r18
    102a:	38 f1       	brcs	.+78     	; 0x107a <informatie+0x8e>
    {
    if (ADCH > winddrempel)
    102c:	e9 e7       	ldi	r30, 0x79	; 121
    102e:	f0 e0       	ldi	r31, 0x00	; 0
    1030:	80 81       	ld	r24, Z
    1032:	28 2f       	mov	r18, r24
    1034:	30 e0       	ldi	r19, 0x00	; 0
    1036:	80 91 00 02 	lds	r24, 0x0200
    103a:	90 91 01 02 	lds	r25, 0x0201
    103e:	82 17       	cp	r24, r18
    1040:	93 07       	cpc	r25, r19
    1042:	bc f4       	brge	.+46     	; 0x1072 <informatie+0x86>
    {
      windmeter = 1;
    1044:	81 e0       	ldi	r24, 0x01	; 1
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	90 93 03 02 	sts	0x0203, r25
    104c:	80 93 02 02 	sts	0x0202, r24
      millisecWindmeter = millisec;
    1050:	80 91 04 02 	lds	r24, 0x0204
    1054:	90 91 05 02 	lds	r25, 0x0205
    1058:	a0 91 06 02 	lds	r26, 0x0206
    105c:	b0 91 07 02 	lds	r27, 0x0207
    1060:	80 93 0c 02 	sts	0x020C, r24
    1064:	90 93 0d 02 	sts	0x020D, r25
    1068:	a0 93 0e 02 	sts	0x020E, r26
    106c:	b0 93 0f 02 	sts	0x020F, r27
    1070:	04 c0       	rjmp	.+8      	; 0x107a <informatie+0x8e>
    }
    else
      windmeter = 0;
    1072:	10 92 03 02 	sts	0x0203, r1
    1076:	10 92 02 02 	sts	0x0202, r1
    }
}
    107a:	cf 91       	pop	r28
    107c:	df 91       	pop	r29
    107e:	08 95       	ret

00001080 <main>:

int main(void)
{
    1080:	0f 93       	push	r16
    1082:	1f 93       	push	r17
    1084:	df 93       	push	r29
    1086:	cf 93       	push	r28
    1088:	cd b7       	in	r28, 0x3d	; 61
    108a:	de b7       	in	r29, 0x3e	; 62
    108c:	ca 57       	subi	r28, 0x7A	; 122
    108e:	d0 40       	sbci	r29, 0x00	; 0
    1090:	0f b6       	in	r0, 0x3f	; 63
    1092:	f8 94       	cli
    1094:	de bf       	out	0x3e, r29	; 62
    1096:	0f be       	out	0x3f, r0	; 63
    1098:	cd bf       	out	0x3d, r28	; 61

    init();
    109a:	0e 94 9d 07 	call	0xf3a	; 0xf3a <init>
    DDRC |= (1 << LEDPIN_GroenBoot1R);
    109e:	a7 e2       	ldi	r26, 0x27	; 39
    10a0:	b0 e0       	ldi	r27, 0x00	; 0
    10a2:	e7 e2       	ldi	r30, 0x27	; 39
    10a4:	f0 e0       	ldi	r31, 0x00	; 0
    10a6:	80 81       	ld	r24, Z
    10a8:	80 62       	ori	r24, 0x20	; 32
    10aa:	8c 93       	st	X, r24
    DDRC |= (1 << LEDPIN_RoodBoot1R);
    10ac:	a7 e2       	ldi	r26, 0x27	; 39
    10ae:	b0 e0       	ldi	r27, 0x00	; 0
    10b0:	e7 e2       	ldi	r30, 0x27	; 39
    10b2:	f0 e0       	ldi	r31, 0x00	; 0
    10b4:	80 81       	ld	r24, Z
    10b6:	81 60       	ori	r24, 0x01	; 1
    10b8:	8c 93       	st	X, r24
    DDRC |= (1 << LEDPIN_GroenBoot1L);
    10ba:	a7 e2       	ldi	r26, 0x27	; 39
    10bc:	b0 e0       	ldi	r27, 0x00	; 0
    10be:	e7 e2       	ldi	r30, 0x27	; 39
    10c0:	f0 e0       	ldi	r31, 0x00	; 0
    10c2:	80 81       	ld	r24, Z
    10c4:	80 61       	ori	r24, 0x10	; 16
    10c6:	8c 93       	st	X, r24
    DDRD |= (1 << LEDPIN_RoodBoot1L);
    10c8:	aa e2       	ldi	r26, 0x2A	; 42
    10ca:	b0 e0       	ldi	r27, 0x00	; 0
    10cc:	ea e2       	ldi	r30, 0x2A	; 42
    10ce:	f0 e0       	ldi	r31, 0x00	; 0
    10d0:	80 81       	ld	r24, Z
    10d2:	80 68       	ori	r24, 0x80	; 128
    10d4:	8c 93       	st	X, r24
    DDRG |= (1 << LEDPIN_RoodBoot1B);
    10d6:	a3 e3       	ldi	r26, 0x33	; 51
    10d8:	b0 e0       	ldi	r27, 0x00	; 0
    10da:	e3 e3       	ldi	r30, 0x33	; 51
    10dc:	f0 e0       	ldi	r31, 0x00	; 0
    10de:	80 81       	ld	r24, Z
    10e0:	84 60       	ori	r24, 0x04	; 4
    10e2:	8c 93       	st	X, r24
    DDRC |= (1 << LEDPIN_GroenBoot1B);
    10e4:	a7 e2       	ldi	r26, 0x27	; 39
    10e6:	b0 e0       	ldi	r27, 0x00	; 0
    10e8:	e7 e2       	ldi	r30, 0x27	; 39
    10ea:	f0 e0       	ldi	r31, 0x00	; 0
    10ec:	80 81       	ld	r24, Z
    10ee:	82 60       	ori	r24, 0x02	; 2
    10f0:	8c 93       	st	X, r24
    DDRC |= (1 << LEDPIN_GeelBrug1);
    10f2:	a7 e2       	ldi	r26, 0x27	; 39
    10f4:	b0 e0       	ldi	r27, 0x00	; 0
    10f6:	e7 e2       	ldi	r30, 0x27	; 39
    10f8:	f0 e0       	ldi	r31, 0x00	; 0
    10fa:	80 81       	ld	r24, Z
    10fc:	80 68       	ori	r24, 0x80	; 128
    10fe:	8c 93       	st	X, r24
    DDRC |= (1 << LEDPIN_GeelBrug2);
    1100:	a7 e2       	ldi	r26, 0x27	; 39
    1102:	b0 e0       	ldi	r27, 0x00	; 0
    1104:	e7 e2       	ldi	r30, 0x27	; 39
    1106:	f0 e0       	ldi	r31, 0x00	; 0
    1108:	80 81       	ld	r24, Z
    110a:	80 64       	ori	r24, 0x40	; 64
    110c:	8c 93       	st	X, r24
    DDRA |= (1 << LEDPIN_BlauwOpenen);
    110e:	a1 e2       	ldi	r26, 0x21	; 33
    1110:	b0 e0       	ldi	r27, 0x00	; 0
    1112:	e1 e2       	ldi	r30, 0x21	; 33
    1114:	f0 e0       	ldi	r31, 0x00	; 0
    1116:	80 81       	ld	r24, Z
    1118:	81 60       	ori	r24, 0x01	; 1
    111a:	8c 93       	st	X, r24
    DDRA |= (1 << LEDPIN_BlauwSluiten);
    111c:	a1 e2       	ldi	r26, 0x21	; 33
    111e:	b0 e0       	ldi	r27, 0x00	; 0
    1120:	e1 e2       	ldi	r30, 0x21	; 33
    1122:	f0 e0       	ldi	r31, 0x00	; 0
    1124:	80 81       	ld	r24, Z
    1126:	82 60       	ori	r24, 0x02	; 2
    1128:	8c 93       	st	X, r24
    DDRA |= (1 << LEDPIN_RoodOpen);
    112a:	a1 e2       	ldi	r26, 0x21	; 33
    112c:	b0 e0       	ldi	r27, 0x00	; 0
    112e:	e1 e2       	ldi	r30, 0x21	; 33
    1130:	f0 e0       	ldi	r31, 0x00	; 0
    1132:	80 81       	ld	r24, Z
    1134:	80 64       	ori	r24, 0x40	; 64
    1136:	8c 93       	st	X, r24
    DDRA |= (1 << LEDPIN_RoodDicht);
    1138:	a1 e2       	ldi	r26, 0x21	; 33
    113a:	b0 e0       	ldi	r27, 0x00	; 0
    113c:	e1 e2       	ldi	r30, 0x21	; 33
    113e:	f0 e0       	ldi	r31, 0x00	; 0
    1140:	80 81       	ld	r24, Z
    1142:	80 68       	ori	r24, 0x80	; 128
    1144:	8c 93       	st	X, r24
    DDRB |= (1 << LEDPIN_GeelBoot);
    1146:	a4 e2       	ldi	r26, 0x24	; 36
    1148:	b0 e0       	ldi	r27, 0x00	; 0
    114a:	e4 e2       	ldi	r30, 0x24	; 36
    114c:	f0 e0       	ldi	r31, 0x00	; 0
    114e:	80 81       	ld	r24, Z
    1150:	88 60       	ori	r24, 0x08	; 8
    1152:	8c 93       	st	X, r24
    DDRB |= (1 << LEDPIN_GeelPersoon);
    1154:	a4 e2       	ldi	r26, 0x24	; 36
    1156:	b0 e0       	ldi	r27, 0x00	; 0
    1158:	e4 e2       	ldi	r30, 0x24	; 36
    115a:	f0 e0       	ldi	r31, 0x00	; 0
    115c:	80 81       	ld	r24, Z
    115e:	84 60       	ori	r24, 0x04	; 4
    1160:	8c 93       	st	X, r24

    PORTC |= (1 << LEDPIN_GroenBoot1R);
    1162:	a8 e2       	ldi	r26, 0x28	; 40
    1164:	b0 e0       	ldi	r27, 0x00	; 0
    1166:	e8 e2       	ldi	r30, 0x28	; 40
    1168:	f0 e0       	ldi	r31, 0x00	; 0
    116a:	80 81       	ld	r24, Z
    116c:	80 62       	ori	r24, 0x20	; 32
    116e:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_RoodBoot1R);
    1170:	a8 e2       	ldi	r26, 0x28	; 40
    1172:	b0 e0       	ldi	r27, 0x00	; 0
    1174:	e8 e2       	ldi	r30, 0x28	; 40
    1176:	f0 e0       	ldi	r31, 0x00	; 0
    1178:	80 81       	ld	r24, Z
    117a:	81 60       	ori	r24, 0x01	; 1
    117c:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GroenBoot1L);
    117e:	a8 e2       	ldi	r26, 0x28	; 40
    1180:	b0 e0       	ldi	r27, 0x00	; 0
    1182:	e8 e2       	ldi	r30, 0x28	; 40
    1184:	f0 e0       	ldi	r31, 0x00	; 0
    1186:	80 81       	ld	r24, Z
    1188:	80 61       	ori	r24, 0x10	; 16
    118a:	8c 93       	st	X, r24
    PORTD |= (1 << LEDPIN_RoodBoot1L);
    118c:	ab e2       	ldi	r26, 0x2B	; 43
    118e:	b0 e0       	ldi	r27, 0x00	; 0
    1190:	eb e2       	ldi	r30, 0x2B	; 43
    1192:	f0 e0       	ldi	r31, 0x00	; 0
    1194:	80 81       	ld	r24, Z
    1196:	80 68       	ori	r24, 0x80	; 128
    1198:	8c 93       	st	X, r24
    PORTG |= (1 << LEDPIN_RoodBoot1B);
    119a:	a4 e3       	ldi	r26, 0x34	; 52
    119c:	b0 e0       	ldi	r27, 0x00	; 0
    119e:	e4 e3       	ldi	r30, 0x34	; 52
    11a0:	f0 e0       	ldi	r31, 0x00	; 0
    11a2:	80 81       	ld	r24, Z
    11a4:	84 60       	ori	r24, 0x04	; 4
    11a6:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GroenBoot1B);
    11a8:	a8 e2       	ldi	r26, 0x28	; 40
    11aa:	b0 e0       	ldi	r27, 0x00	; 0
    11ac:	e8 e2       	ldi	r30, 0x28	; 40
    11ae:	f0 e0       	ldi	r31, 0x00	; 0
    11b0:	80 81       	ld	r24, Z
    11b2:	82 60       	ori	r24, 0x02	; 2
    11b4:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug1);
    11b6:	a8 e2       	ldi	r26, 0x28	; 40
    11b8:	b0 e0       	ldi	r27, 0x00	; 0
    11ba:	e8 e2       	ldi	r30, 0x28	; 40
    11bc:	f0 e0       	ldi	r31, 0x00	; 0
    11be:	80 81       	ld	r24, Z
    11c0:	80 68       	ori	r24, 0x80	; 128
    11c2:	8c 93       	st	X, r24
    PORTC |= (1 << LEDPIN_GeelBrug2);
    11c4:	a8 e2       	ldi	r26, 0x28	; 40
    11c6:	b0 e0       	ldi	r27, 0x00	; 0
    11c8:	e8 e2       	ldi	r30, 0x28	; 40
    11ca:	f0 e0       	ldi	r31, 0x00	; 0
    11cc:	80 81       	ld	r24, Z
    11ce:	80 64       	ori	r24, 0x40	; 64
    11d0:	8c 93       	st	X, r24
    PORTA |= (1 << LEDPIN_BlauwOpenen);
    11d2:	a2 e2       	ldi	r26, 0x22	; 34
    11d4:	b0 e0       	ldi	r27, 0x00	; 0
    11d6:	e2 e2       	ldi	r30, 0x22	; 34
    11d8:	f0 e0       	ldi	r31, 0x00	; 0
    11da:	80 81       	ld	r24, Z
    11dc:	81 60       	ori	r24, 0x01	; 1
    11de:	8c 93       	st	X, r24
    PORTA |= (1 << LEDPIN_BlauwSluiten);
    11e0:	a2 e2       	ldi	r26, 0x22	; 34
    11e2:	b0 e0       	ldi	r27, 0x00	; 0
    11e4:	e2 e2       	ldi	r30, 0x22	; 34
    11e6:	f0 e0       	ldi	r31, 0x00	; 0
    11e8:	80 81       	ld	r24, Z
    11ea:	82 60       	ori	r24, 0x02	; 2
    11ec:	8c 93       	st	X, r24
    PORTA |= (1 << LEDPIN_RoodOpen);
    11ee:	a2 e2       	ldi	r26, 0x22	; 34
    11f0:	b0 e0       	ldi	r27, 0x00	; 0
    11f2:	e2 e2       	ldi	r30, 0x22	; 34
    11f4:	f0 e0       	ldi	r31, 0x00	; 0
    11f6:	80 81       	ld	r24, Z
    11f8:	80 64       	ori	r24, 0x40	; 64
    11fa:	8c 93       	st	X, r24
    PORTA |= (1 << LEDPIN_RoodDicht);
    11fc:	a2 e2       	ldi	r26, 0x22	; 34
    11fe:	b0 e0       	ldi	r27, 0x00	; 0
    1200:	e2 e2       	ldi	r30, 0x22	; 34
    1202:	f0 e0       	ldi	r31, 0x00	; 0
    1204:	80 81       	ld	r24, Z
    1206:	80 68       	ori	r24, 0x80	; 128
    1208:	8c 93       	st	X, r24
    PORTB |= (1 << LEDPIN_GeelBoot);
    120a:	a5 e2       	ldi	r26, 0x25	; 37
    120c:	b0 e0       	ldi	r27, 0x00	; 0
    120e:	e5 e2       	ldi	r30, 0x25	; 37
    1210:	f0 e0       	ldi	r31, 0x00	; 0
    1212:	80 81       	ld	r24, Z
    1214:	88 60       	ori	r24, 0x08	; 8
    1216:	8c 93       	st	X, r24
    PORTB |= (1 << LEDPIN_GeelPersoon);
    1218:	a5 e2       	ldi	r26, 0x25	; 37
    121a:	b0 e0       	ldi	r27, 0x00	; 0
    121c:	e5 e2       	ldi	r30, 0x25	; 37
    121e:	f0 e0       	ldi	r31, 0x00	; 0
    1220:	80 81       	ld	r24, Z
    1222:	84 60       	ori	r24, 0x04	; 4
    1224:	8c 93       	st	X, r24

    DDRL &= ~(1 << Button_Noodstop);
    1226:	aa e0       	ldi	r26, 0x0A	; 10
    1228:	b1 e0       	ldi	r27, 0x01	; 1
    122a:	ea e0       	ldi	r30, 0x0A	; 10
    122c:	f1 e0       	ldi	r31, 0x01	; 1
    122e:	80 81       	ld	r24, Z
    1230:	8f 7e       	andi	r24, 0xEF	; 239
    1232:	8c 93       	st	X, r24
    DDRL &= ~(1 << Button_Openen);
    1234:	aa e0       	ldi	r26, 0x0A	; 10
    1236:	b1 e0       	ldi	r27, 0x01	; 1
    1238:	ea e0       	ldi	r30, 0x0A	; 10
    123a:	f1 e0       	ldi	r31, 0x01	; 1
    123c:	80 81       	ld	r24, Z
    123e:	8f 7b       	andi	r24, 0xBF	; 191
    1240:	8c 93       	st	X, r24
    DDRL &= ~(1 << Button_Sluiten);
    1242:	aa e0       	ldi	r26, 0x0A	; 10
    1244:	b1 e0       	ldi	r27, 0x01	; 1
    1246:	ea e0       	ldi	r30, 0x0A	; 10
    1248:	f1 e0       	ldi	r31, 0x01	; 1
    124a:	80 81       	ld	r24, Z
    124c:	8f 7d       	andi	r24, 0xDF	; 223
    124e:	8c 93       	st	X, r24
    DDRL &= ~(1 << Eindschakelaar_Open);
    1250:	aa e0       	ldi	r26, 0x0A	; 10
    1252:	b1 e0       	ldi	r27, 0x01	; 1
    1254:	ea e0       	ldi	r30, 0x0A	; 10
    1256:	f1 e0       	ldi	r31, 0x01	; 1
    1258:	80 81       	ld	r24, Z
    125a:	8b 7f       	andi	r24, 0xFB	; 251
    125c:	8c 93       	st	X, r24
    DDRL &= ~(1 << Eindschakelaar_Dicht);
    125e:	aa e0       	ldi	r26, 0x0A	; 10
    1260:	b1 e0       	ldi	r27, 0x01	; 1
    1262:	ea e0       	ldi	r30, 0x0A	; 10
    1264:	f1 e0       	ldi	r31, 0x01	; 1
    1266:	80 81       	ld	r24, Z
    1268:	8d 7f       	andi	r24, 0xFD	; 253
    126a:	8c 93       	st	X, r24

    DDRB &= ~(1 << Ultrasoon_Boot1);
    126c:	a4 e2       	ldi	r26, 0x24	; 36
    126e:	b0 e0       	ldi	r27, 0x00	; 0
    1270:	e4 e2       	ldi	r30, 0x24	; 36
    1272:	f0 e0       	ldi	r31, 0x00	; 0
    1274:	80 81       	ld	r24, Z
    1276:	8d 7f       	andi	r24, 0xFD	; 253
    1278:	8c 93       	st	X, r24
    DDRL &= ~(1 << Ultrasoon_Boot2);
    127a:	aa e0       	ldi	r26, 0x0A	; 10
    127c:	b1 e0       	ldi	r27, 0x01	; 1
    127e:	ea e0       	ldi	r30, 0x0A	; 10
    1280:	f1 e0       	ldi	r31, 0x01	; 1
    1282:	80 81       	ld	r24, Z
    1284:	8f 77       	andi	r24, 0x7F	; 127
    1286:	8c 93       	st	X, r24
    DDRG &= ~(1 << Ultrasoon_Persoon1);
    1288:	a3 e3       	ldi	r26, 0x33	; 51
    128a:	b0 e0       	ldi	r27, 0x00	; 0
    128c:	e3 e3       	ldi	r30, 0x33	; 51
    128e:	f0 e0       	ldi	r31, 0x00	; 0
    1290:	80 81       	ld	r24, Z
    1292:	8b 7f       	andi	r24, 0xFB	; 251
    1294:	8c 93       	st	X, r24
    DDRG &= ~(1 << Ultrasoon_Persoon2);
    1296:	a3 e3       	ldi	r26, 0x33	; 51
    1298:	b0 e0       	ldi	r27, 0x00	; 0
    129a:	e3 e3       	ldi	r30, 0x33	; 51
    129c:	f0 e0       	ldi	r31, 0x00	; 0
    129e:	80 81       	ld	r24, Z
    12a0:	8e 7f       	andi	r24, 0xFE	; 254
    12a2:	8c 93       	st	X, r24

    while (1)
    {
        int KnopOpen = 0;
    12a4:	fe 01       	movw	r30, r28
    12a6:	e9 58       	subi	r30, 0x89	; 137
    12a8:	ff 4f       	sbci	r31, 0xFF	; 255
    12aa:	11 82       	std	Z+1, r1	; 0x01
    12ac:	10 82       	st	Z, r1
        int KnopDicht = 0;
    12ae:	fe 01       	movw	r30, r28
    12b0:	eb 58       	subi	r30, 0x8B	; 139
    12b2:	ff 4f       	sbci	r31, 0xFF	; 255
    12b4:	11 82       	std	Z+1, r1	; 0x01
    12b6:	10 82       	st	Z, r1
        int KnopNood = 0;
    12b8:	fe 01       	movw	r30, r28
    12ba:	ed 58       	subi	r30, 0x8D	; 141
    12bc:	ff 4f       	sbci	r31, 0xFF	; 255
    12be:	11 82       	std	Z+1, r1	; 0x01
    12c0:	10 82       	st	Z, r1
        int EindOpen = 0;
    12c2:	fe 01       	movw	r30, r28
    12c4:	ef 58       	subi	r30, 0x8F	; 143
    12c6:	ff 4f       	sbci	r31, 0xFF	; 255
    12c8:	11 82       	std	Z+1, r1	; 0x01
    12ca:	10 82       	st	Z, r1
        int EindDicht = 0;
    12cc:	fe 01       	movw	r30, r28
    12ce:	e1 59       	subi	r30, 0x91	; 145
    12d0:	ff 4f       	sbci	r31, 0xFF	; 255
    12d2:	11 82       	std	Z+1, r1	; 0x01
    12d4:	10 82       	st	Z, r1
        int stand = 1;
    12d6:	fe 01       	movw	r30, r28
    12d8:	e3 59       	subi	r30, 0x93	; 147
    12da:	ff 4f       	sbci	r31, 0xFF	; 255
    12dc:	81 e0       	ldi	r24, 0x01	; 1
    12de:	90 e0       	ldi	r25, 0x00	; 0
    12e0:	91 83       	std	Z+1, r25	; 0x01
    12e2:	80 83       	st	Z, r24
        int ultrasoonboot1 = 0;
    12e4:	fe 01       	movw	r30, r28
    12e6:	e5 59       	subi	r30, 0x95	; 149
    12e8:	ff 4f       	sbci	r31, 0xFF	; 255
    12ea:	11 82       	std	Z+1, r1	; 0x01
    12ec:	10 82       	st	Z, r1
        int ultrasoonboot2 = 0;
    12ee:	fe 01       	movw	r30, r28
    12f0:	e7 59       	subi	r30, 0x97	; 151
    12f2:	ff 4f       	sbci	r31, 0xFF	; 255
    12f4:	11 82       	std	Z+1, r1	; 0x01
    12f6:	10 82       	st	Z, r1
        int ultrasoonpersoon1 = 0;
    12f8:	fe 01       	movw	r30, r28
    12fa:	e9 59       	subi	r30, 0x99	; 153
    12fc:	ff 4f       	sbci	r31, 0xFF	; 255
    12fe:	11 82       	std	Z+1, r1	; 0x01
    1300:	10 82       	st	Z, r1
        int ultrasoonpersoon2 = 0;
    1302:	fe 01       	movw	r30, r28
    1304:	eb 59       	subi	r30, 0x9B	; 155
    1306:	ff 4f       	sbci	r31, 0xFF	; 255
    1308:	11 82       	std	Z+1, r1	; 0x01
    130a:	10 82       	st	Z, r1
        int BrugbesturingAan = 1;
    130c:	fe 01       	movw	r30, r28
    130e:	ed 59       	subi	r30, 0x9D	; 157
    1310:	ff 4f       	sbci	r31, 0xFF	; 255
    1312:	81 e0       	ldi	r24, 0x01	; 1
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	91 83       	std	Z+1, r25	; 0x01
    1318:	80 83       	st	Z, r24

        Slagbomenopen(1);
    131a:	81 e0       	ldi	r24, 0x01	; 1
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	0e 94 c0 07 	call	0xf80	; 0xf80 <Slagbomenopen>
        h_bridge_set_percentage(0);
    1322:	80 e0       	ldi	r24, 0x00	; 0
    1324:	0e 94 82 01 	call	0x304	; 0x304 <h_bridge_set_percentage>
    1328:	0c 94 84 13 	jmp	0x2708	; 0x2708 <__stack+0x509>

        while ((BrugbesturingAan & 1) != 0)
        {

            if (!(PINL & (1 << Button_Openen)))
    132c:	e9 e0       	ldi	r30, 0x09	; 9
    132e:	f1 e0       	ldi	r31, 0x01	; 1
    1330:	80 81       	ld	r24, Z
    1332:	88 2f       	mov	r24, r24
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	80 74       	andi	r24, 0x40	; 64
    1338:	90 70       	andi	r25, 0x00	; 0
    133a:	00 97       	sbiw	r24, 0x00	; 0
    133c:	39 f4       	brne	.+14     	; 0x134c <main+0x2cc>
            {
                KnopOpen = 1;
    133e:	fe 01       	movw	r30, r28
    1340:	e9 58       	subi	r30, 0x89	; 137
    1342:	ff 4f       	sbci	r31, 0xFF	; 255
    1344:	81 e0       	ldi	r24, 0x01	; 1
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	91 83       	std	Z+1, r25	; 0x01
    134a:	80 83       	st	Z, r24
            }
            if (!(PINL & (1 << Button_Sluiten)))
    134c:	e9 e0       	ldi	r30, 0x09	; 9
    134e:	f1 e0       	ldi	r31, 0x01	; 1
    1350:	80 81       	ld	r24, Z
    1352:	88 2f       	mov	r24, r24
    1354:	90 e0       	ldi	r25, 0x00	; 0
    1356:	80 72       	andi	r24, 0x20	; 32
    1358:	90 70       	andi	r25, 0x00	; 0
    135a:	00 97       	sbiw	r24, 0x00	; 0
    135c:	39 f4       	brne	.+14     	; 0x136c <main+0x2ec>
            {
                KnopDicht = 1;
    135e:	fe 01       	movw	r30, r28
    1360:	eb 58       	subi	r30, 0x8B	; 139
    1362:	ff 4f       	sbci	r31, 0xFF	; 255
    1364:	81 e0       	ldi	r24, 0x01	; 1
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	91 83       	std	Z+1, r25	; 0x01
    136a:	80 83       	st	Z, r24
            }
            if (!(PINL & (1 << Button_Noodstop)))
    136c:	e9 e0       	ldi	r30, 0x09	; 9
    136e:	f1 e0       	ldi	r31, 0x01	; 1
    1370:	80 81       	ld	r24, Z
    1372:	88 2f       	mov	r24, r24
    1374:	90 e0       	ldi	r25, 0x00	; 0
    1376:	80 71       	andi	r24, 0x10	; 16
    1378:	90 70       	andi	r25, 0x00	; 0
    137a:	00 97       	sbiw	r24, 0x00	; 0
    137c:	39 f4       	brne	.+14     	; 0x138c <main+0x30c>
            {
                KnopNood = 1;
    137e:	fe 01       	movw	r30, r28
    1380:	ed 58       	subi	r30, 0x8D	; 141
    1382:	ff 4f       	sbci	r31, 0xFF	; 255
    1384:	81 e0       	ldi	r24, 0x01	; 1
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	91 83       	std	Z+1, r25	; 0x01
    138a:	80 83       	st	Z, r24
            }
            if (!(PINL & (1 << Eindschakelaar_Open)))
    138c:	e9 e0       	ldi	r30, 0x09	; 9
    138e:	f1 e0       	ldi	r31, 0x01	; 1
    1390:	80 81       	ld	r24, Z
    1392:	88 2f       	mov	r24, r24
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	84 70       	andi	r24, 0x04	; 4
    1398:	90 70       	andi	r25, 0x00	; 0
    139a:	00 97       	sbiw	r24, 0x00	; 0
    139c:	39 f4       	brne	.+14     	; 0x13ac <main+0x32c>
            {
                EindOpen = 1;
    139e:	fe 01       	movw	r30, r28
    13a0:	ef 58       	subi	r30, 0x8F	; 143
    13a2:	ff 4f       	sbci	r31, 0xFF	; 255
    13a4:	81 e0       	ldi	r24, 0x01	; 1
    13a6:	90 e0       	ldi	r25, 0x00	; 0
    13a8:	91 83       	std	Z+1, r25	; 0x01
    13aa:	80 83       	st	Z, r24
            }
            if (!(PINL & (1 << Eindschakelaar_Dicht)))
    13ac:	e9 e0       	ldi	r30, 0x09	; 9
    13ae:	f1 e0       	ldi	r31, 0x01	; 1
    13b0:	80 81       	ld	r24, Z
    13b2:	88 2f       	mov	r24, r24
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	82 70       	andi	r24, 0x02	; 2
    13b8:	90 70       	andi	r25, 0x00	; 0
    13ba:	00 97       	sbiw	r24, 0x00	; 0
    13bc:	39 f4       	brne	.+14     	; 0x13cc <main+0x34c>
            {
                EindDicht = 1;
    13be:	fe 01       	movw	r30, r28
    13c0:	e1 59       	subi	r30, 0x91	; 145
    13c2:	ff 4f       	sbci	r31, 0xFF	; 255
    13c4:	81 e0       	ldi	r24, 0x01	; 1
    13c6:	90 e0       	ldi	r25, 0x00	; 0
    13c8:	91 83       	std	Z+1, r25	; 0x01
    13ca:	80 83       	st	Z, r24
            }
            if (!(PINB & (1 << Ultrasoon_Boot1)))
    13cc:	e3 e2       	ldi	r30, 0x23	; 35
    13ce:	f0 e0       	ldi	r31, 0x00	; 0
    13d0:	80 81       	ld	r24, Z
    13d2:	88 2f       	mov	r24, r24
    13d4:	90 e0       	ldi	r25, 0x00	; 0
    13d6:	82 70       	andi	r24, 0x02	; 2
    13d8:	90 70       	andi	r25, 0x00	; 0
    13da:	00 97       	sbiw	r24, 0x00	; 0
    13dc:	61 f4       	brne	.+24     	; 0x13f6 <main+0x376>
            {
                ultrasoonboot1 = 1;
    13de:	fe 01       	movw	r30, r28
    13e0:	e5 59       	subi	r30, 0x95	; 149
    13e2:	ff 4f       	sbci	r31, 0xFF	; 255
    13e4:	81 e0       	ldi	r24, 0x01	; 1
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	91 83       	std	Z+1, r25	; 0x01
    13ea:	80 83       	st	Z, r24
                ultrasoonboot2 = 0;
    13ec:	fe 01       	movw	r30, r28
    13ee:	e7 59       	subi	r30, 0x97	; 151
    13f0:	ff 4f       	sbci	r31, 0xFF	; 255
    13f2:	11 82       	std	Z+1, r1	; 0x01
    13f4:	10 82       	st	Z, r1
            }
            if (!(PINL & (1 << Ultrasoon_Boot2)))
    13f6:	e9 e0       	ldi	r30, 0x09	; 9
    13f8:	f1 e0       	ldi	r31, 0x01	; 1
    13fa:	80 81       	ld	r24, Z
    13fc:	88 23       	and	r24, r24
    13fe:	64 f0       	brlt	.+24     	; 0x1418 <main+0x398>
            {
                ultrasoonboot2 = 1;
    1400:	fe 01       	movw	r30, r28
    1402:	e7 59       	subi	r30, 0x97	; 151
    1404:	ff 4f       	sbci	r31, 0xFF	; 255
    1406:	81 e0       	ldi	r24, 0x01	; 1
    1408:	90 e0       	ldi	r25, 0x00	; 0
    140a:	91 83       	std	Z+1, r25	; 0x01
    140c:	80 83       	st	Z, r24
                ultrasoonboot1 = 0;
    140e:	fe 01       	movw	r30, r28
    1410:	e5 59       	subi	r30, 0x95	; 149
    1412:	ff 4f       	sbci	r31, 0xFF	; 255
    1414:	11 82       	std	Z+1, r1	; 0x01
    1416:	10 82       	st	Z, r1
            }
            if (!(PING & (1 << Ultrasoon_Persoon1)))
    1418:	e2 e3       	ldi	r30, 0x32	; 50
    141a:	f0 e0       	ldi	r31, 0x00	; 0
    141c:	80 81       	ld	r24, Z
    141e:	88 2f       	mov	r24, r24
    1420:	90 e0       	ldi	r25, 0x00	; 0
    1422:	84 70       	andi	r24, 0x04	; 4
    1424:	90 70       	andi	r25, 0x00	; 0
    1426:	00 97       	sbiw	r24, 0x00	; 0
    1428:	39 f4       	brne	.+14     	; 0x1438 <main+0x3b8>
            {
                ultrasoonpersoon1 = 1;
    142a:	fe 01       	movw	r30, r28
    142c:	e9 59       	subi	r30, 0x99	; 153
    142e:	ff 4f       	sbci	r31, 0xFF	; 255
    1430:	81 e0       	ldi	r24, 0x01	; 1
    1432:	90 e0       	ldi	r25, 0x00	; 0
    1434:	91 83       	std	Z+1, r25	; 0x01
    1436:	80 83       	st	Z, r24
            }
            if (!(PING & (1 << Ultrasoon_Persoon2)))
    1438:	e2 e3       	ldi	r30, 0x32	; 50
    143a:	f0 e0       	ldi	r31, 0x00	; 0
    143c:	80 81       	ld	r24, Z
    143e:	88 2f       	mov	r24, r24
    1440:	90 e0       	ldi	r25, 0x00	; 0
    1442:	81 70       	andi	r24, 0x01	; 1
    1444:	90 70       	andi	r25, 0x00	; 0
    1446:	00 97       	sbiw	r24, 0x00	; 0
    1448:	39 f4       	brne	.+14     	; 0x1458 <main+0x3d8>
            {
                ultrasoonpersoon2 = 1;
    144a:	fe 01       	movw	r30, r28
    144c:	eb 59       	subi	r30, 0x9B	; 155
    144e:	ff 4f       	sbci	r31, 0xFF	; 255
    1450:	81 e0       	ldi	r24, 0x01	; 1
    1452:	90 e0       	ldi	r25, 0x00	; 0
    1454:	91 83       	std	Z+1, r25	; 0x01
    1456:	80 83       	st	Z, r24
            }

            switch(stand)
    1458:	fe 01       	movw	r30, r28
    145a:	e3 59       	subi	r30, 0x93	; 147
    145c:	ff 4f       	sbci	r31, 0xFF	; 255
    145e:	80 81       	ld	r24, Z
    1460:	91 81       	ldd	r25, Z+1	; 0x01
    1462:	eb 96       	adiw	r28, 0x3b	; 59
    1464:	9f af       	std	Y+63, r25	; 0x3f
    1466:	8e af       	std	Y+62, r24	; 0x3e
    1468:	eb 97       	sbiw	r28, 0x3b	; 59
    146a:	eb 96       	adiw	r28, 0x3b	; 59
    146c:	ee ad       	ldd	r30, Y+62	; 0x3e
    146e:	ff ad       	ldd	r31, Y+63	; 0x3f
    1470:	eb 97       	sbiw	r28, 0x3b	; 59
    1472:	e6 30       	cpi	r30, 0x06	; 6
    1474:	f1 05       	cpc	r31, r1
    1476:	09 f4       	brne	.+2      	; 0x147a <main+0x3fa>
    1478:	27 c4       	rjmp	.+2126   	; 0x1cc8 <main+0xc48>
    147a:	eb 96       	adiw	r28, 0x3b	; 59
    147c:	8e ad       	ldd	r24, Y+62	; 0x3e
    147e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1480:	eb 97       	sbiw	r28, 0x3b	; 59
    1482:	87 30       	cpi	r24, 0x07	; 7
    1484:	91 05       	cpc	r25, r1
    1486:	9c f5       	brge	.+102    	; 0x14ee <main+0x46e>
    1488:	eb 96       	adiw	r28, 0x3b	; 59
    148a:	ee ad       	ldd	r30, Y+62	; 0x3e
    148c:	ff ad       	ldd	r31, Y+63	; 0x3f
    148e:	eb 97       	sbiw	r28, 0x3b	; 59
    1490:	e3 30       	cpi	r30, 0x03	; 3
    1492:	f1 05       	cpc	r31, r1
    1494:	09 f4       	brne	.+2      	; 0x1498 <main+0x418>
    1496:	a5 c1       	rjmp	.+842    	; 0x17e2 <main+0x762>
    1498:	eb 96       	adiw	r28, 0x3b	; 59
    149a:	8e ad       	ldd	r24, Y+62	; 0x3e
    149c:	9f ad       	ldd	r25, Y+63	; 0x3f
    149e:	eb 97       	sbiw	r28, 0x3b	; 59
    14a0:	84 30       	cpi	r24, 0x04	; 4
    14a2:	91 05       	cpc	r25, r1
    14a4:	94 f4       	brge	.+36     	; 0x14ca <main+0x44a>
    14a6:	eb 96       	adiw	r28, 0x3b	; 59
    14a8:	ee ad       	ldd	r30, Y+62	; 0x3e
    14aa:	ff ad       	ldd	r31, Y+63	; 0x3f
    14ac:	eb 97       	sbiw	r28, 0x3b	; 59
    14ae:	e1 30       	cpi	r30, 0x01	; 1
    14b0:	f1 05       	cpc	r31, r1
    14b2:	09 f4       	brne	.+2      	; 0x14b6 <main+0x436>
    14b4:	4f c0       	rjmp	.+158    	; 0x1554 <main+0x4d4>
    14b6:	eb 96       	adiw	r28, 0x3b	; 59
    14b8:	8e ad       	ldd	r24, Y+62	; 0x3e
    14ba:	9f ad       	ldd	r25, Y+63	; 0x3f
    14bc:	eb 97       	sbiw	r28, 0x3b	; 59
    14be:	82 30       	cpi	r24, 0x02	; 2
    14c0:	91 05       	cpc	r25, r1
    14c2:	09 f4       	brne	.+2      	; 0x14c6 <main+0x446>
    14c4:	ea c0       	rjmp	.+468    	; 0x169a <main+0x61a>
    14c6:	0c 94 09 13 	jmp	0x2612	; 0x2612 <__stack+0x413>
    14ca:	eb 96       	adiw	r28, 0x3b	; 59
    14cc:	ee ad       	ldd	r30, Y+62	; 0x3e
    14ce:	ff ad       	ldd	r31, Y+63	; 0x3f
    14d0:	eb 97       	sbiw	r28, 0x3b	; 59
    14d2:	e4 30       	cpi	r30, 0x04	; 4
    14d4:	f1 05       	cpc	r31, r1
    14d6:	09 f4       	brne	.+2      	; 0x14da <main+0x45a>
    14d8:	ab c2       	rjmp	.+1366   	; 0x1a30 <main+0x9b0>
    14da:	eb 96       	adiw	r28, 0x3b	; 59
    14dc:	8e ad       	ldd	r24, Y+62	; 0x3e
    14de:	9f ad       	ldd	r25, Y+63	; 0x3f
    14e0:	eb 97       	sbiw	r28, 0x3b	; 59
    14e2:	85 30       	cpi	r24, 0x05	; 5
    14e4:	91 05       	cpc	r25, r1
    14e6:	09 f4       	brne	.+2      	; 0x14ea <main+0x46a>
    14e8:	a3 c3       	rjmp	.+1862   	; 0x1c30 <main+0xbb0>
    14ea:	0c 94 09 13 	jmp	0x2612	; 0x2612 <__stack+0x413>
    14ee:	eb 96       	adiw	r28, 0x3b	; 59
    14f0:	ee ad       	ldd	r30, Y+62	; 0x3e
    14f2:	ff ad       	ldd	r31, Y+63	; 0x3f
    14f4:	eb 97       	sbiw	r28, 0x3b	; 59
    14f6:	e9 30       	cpi	r30, 0x09	; 9
    14f8:	f1 05       	cpc	r31, r1
    14fa:	09 f4       	brne	.+2      	; 0x14fe <main+0x47e>
    14fc:	04 c6       	rjmp	.+3080   	; 0x2106 <main+0x1086>
    14fe:	eb 96       	adiw	r28, 0x3b	; 59
    1500:	8e ad       	ldd	r24, Y+62	; 0x3e
    1502:	9f ad       	ldd	r25, Y+63	; 0x3f
    1504:	eb 97       	sbiw	r28, 0x3b	; 59
    1506:	8a 30       	cpi	r24, 0x0A	; 10
    1508:	91 05       	cpc	r25, r1
    150a:	94 f4       	brge	.+36     	; 0x1530 <main+0x4b0>
    150c:	eb 96       	adiw	r28, 0x3b	; 59
    150e:	ee ad       	ldd	r30, Y+62	; 0x3e
    1510:	ff ad       	ldd	r31, Y+63	; 0x3f
    1512:	eb 97       	sbiw	r28, 0x3b	; 59
    1514:	e7 30       	cpi	r30, 0x07	; 7
    1516:	f1 05       	cpc	r31, r1
    1518:	09 f4       	brne	.+2      	; 0x151c <main+0x49c>
    151a:	bc c4       	rjmp	.+2424   	; 0x1e94 <main+0xe14>
    151c:	eb 96       	adiw	r28, 0x3b	; 59
    151e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1520:	9f ad       	ldd	r25, Y+63	; 0x3f
    1522:	eb 97       	sbiw	r28, 0x3b	; 59
    1524:	88 30       	cpi	r24, 0x08	; 8
    1526:	91 05       	cpc	r25, r1
    1528:	09 f4       	brne	.+2      	; 0x152c <main+0x4ac>
    152a:	17 c5       	rjmp	.+2606   	; 0x1f5a <main+0xeda>
    152c:	0c 94 09 13 	jmp	0x2612	; 0x2612 <__stack+0x413>
    1530:	eb 96       	adiw	r28, 0x3b	; 59
    1532:	ee ad       	ldd	r30, Y+62	; 0x3e
    1534:	ff ad       	ldd	r31, Y+63	; 0x3f
    1536:	eb 97       	sbiw	r28, 0x3b	; 59
    1538:	ea 30       	cpi	r30, 0x0A	; 10
    153a:	f1 05       	cpc	r31, r1
    153c:	09 f4       	brne	.+2      	; 0x1540 <main+0x4c0>
    153e:	b6 c6       	rjmp	.+3436   	; 0x22ac <__stack+0xad>
    1540:	eb 96       	adiw	r28, 0x3b	; 59
    1542:	8e ad       	ldd	r24, Y+62	; 0x3e
    1544:	9f ad       	ldd	r25, Y+63	; 0x3f
    1546:	eb 97       	sbiw	r28, 0x3b	; 59
    1548:	8b 30       	cpi	r24, 0x0B	; 11
    154a:	91 05       	cpc	r25, r1
    154c:	09 f4       	brne	.+2      	; 0x1550 <main+0x4d0>
    154e:	78 c7       	rjmp	.+3824   	; 0x2440 <__stack+0x241>
    1550:	0c 94 09 13 	jmp	0x2612	; 0x2612 <__stack+0x413>
            {
                case 1:
                    Slagbomenopen(1);
    1554:	81 e0       	ldi	r24, 0x01	; 1
    1556:	90 e0       	ldi	r25, 0x00	; 0
    1558:	0e 94 c0 07 	call	0xf80	; 0xf80 <Slagbomenopen>
                    Verlichtingbrugdicht(1);
    155c:	81 e0       	ldi	r24, 0x01	; 1
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	0e 94 d6 01 	call	0x3ac	; 0x3ac <Verlichtingbrugdicht>
                    LedsbedieningpaneelRoodDichtAan(1);
    1564:	81 e0       	ldi	r24, 0x01	; 1
    1566:	90 e0       	ldi	r25, 0x00	; 0
    1568:	0e 94 36 05 	call	0xa6c	; 0xa6c <LedsbedieningpaneelRoodDichtAan>
                    LedsbedieningpaneelRoodDichtUit(0);
    156c:	80 e0       	ldi	r24, 0x00	; 0
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	0e 94 4f 05 	call	0xa9e	; 0xa9e <LedsbedieningpaneelRoodDichtUit>
                    LedsbedieningpaneelBlauwOpenenAan(0);
    1574:	80 e0       	ldi	r24, 0x00	; 0
    1576:	90 e0       	ldi	r25, 0x00	; 0
    1578:	0e 94 68 05 	call	0xad0	; 0xad0 <LedsbedieningpaneelBlauwOpenenAan>
                    LedsbedieningpaneelBlauwOpenenUit(1);
    157c:	81 e0       	ldi	r24, 0x01	; 1
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	0e 94 81 05 	call	0xb02	; 0xb02 <LedsbedieningpaneelBlauwOpenenUit>
                    LedsbedieningpaneelBlauwSluitenAan(0);
    1584:	80 e0       	ldi	r24, 0x00	; 0
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	0e 94 9a 05 	call	0xb34	; 0xb34 <LedsbedieningpaneelBlauwSluitenAan>
                    LedsbedieningpaneelBlauwSluitenUit(1);
    158c:	81 e0       	ldi	r24, 0x01	; 1
    158e:	90 e0       	ldi	r25, 0x00	; 0
    1590:	0e 94 b3 05 	call	0xb66	; 0xb66 <LedsbedieningpaneelBlauwSluitenUit>
                    LedsbedieningpaneelRoodOpenAan(0);
    1594:	80 e0       	ldi	r24, 0x00	; 0
    1596:	90 e0       	ldi	r25, 0x00	; 0
    1598:	0e 94 04 05 	call	0xa08	; 0xa08 <LedsbedieningpaneelRoodOpenAan>
                    LedsbedieningpaneelRoodOpenUit(1);
    159c:	81 e0       	ldi	r24, 0x01	; 1
    159e:	90 e0       	ldi	r25, 0x00	; 0
    15a0:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LedsbedieningpaneelRoodOpenUit>
                    LedsbedieningpaneelGeelPersoonAan(0);
    15a4:	80 e0       	ldi	r24, 0x00	; 0
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	0e 94 fe 05 	call	0xbfc	; 0xbfc <LedsbedieningpaneelGeelPersoonAan>
                    LedsbedieningpaneelGeelPersoonUit(1);
    15ac:	81 e0       	ldi	r24, 0x01	; 1
    15ae:	90 e0       	ldi	r25, 0x00	; 0
    15b0:	0e 94 17 06 	call	0xc2e	; 0xc2e <LedsbedieningpaneelGeelPersoonUit>
                    LedsbedieningpaneelNoodstopUit(0);
    15b4:	80 e0       	ldi	r24, 0x00	; 0
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	0e 94 49 06 	call	0xc92	; 0xc92 <LedsbedieningpaneelNoodstopUit>
                    LedsbedieningpaneelNoodstopAan(1);
    15bc:	81 e0       	ldi	r24, 0x01	; 1
    15be:	90 e0       	ldi	r25, 0x00	; 0
    15c0:	0e 94 30 06 	call	0xc60	; 0xc60 <LedsbedieningpaneelNoodstopAan>
                    LedsbedieningpaneelGeelBootAan(0);
    15c4:	80 e0       	ldi	r24, 0x00	; 0
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	0e 94 cc 05 	call	0xb98	; 0xb98 <LedsbedieningpaneelGeelBootAan>
                    LedsbedieningpaneelGeelBootUit(1);
    15cc:	81 e0       	ldi	r24, 0x01	; 1
    15ce:	90 e0       	ldi	r25, 0x00	; 0
    15d0:	0e 94 e5 05 	call	0xbca	; 0xbca <LedsbedieningpaneelGeelBootUit>

                        if ((ultrasoonboot1 == 1) || (ultrasoonboot2 == 1))
    15d4:	fe 01       	movw	r30, r28
    15d6:	e5 59       	subi	r30, 0x95	; 149
    15d8:	ff 4f       	sbci	r31, 0xFF	; 255
    15da:	80 81       	ld	r24, Z
    15dc:	91 81       	ldd	r25, Z+1	; 0x01
    15de:	81 30       	cpi	r24, 0x01	; 1
    15e0:	91 05       	cpc	r25, r1
    15e2:	49 f0       	breq	.+18     	; 0x15f6 <main+0x576>
    15e4:	fe 01       	movw	r30, r28
    15e6:	e7 59       	subi	r30, 0x97	; 151
    15e8:	ff 4f       	sbci	r31, 0xFF	; 255
    15ea:	80 81       	ld	r24, Z
    15ec:	91 81       	ldd	r25, Z+1	; 0x01
    15ee:	81 30       	cpi	r24, 0x01	; 1
    15f0:	91 05       	cpc	r25, r1
    15f2:	09 f0       	breq	.+2      	; 0x15f6 <main+0x576>
    15f4:	49 c0       	rjmp	.+146    	; 0x1688 <main+0x608>
                        {
                            Slagbomenopen(1);
    15f6:	81 e0       	ldi	r24, 0x01	; 1
    15f8:	90 e0       	ldi	r25, 0x00	; 0
    15fa:	0e 94 c0 07 	call	0xf80	; 0xf80 <Slagbomenopen>
                            Verlichtingbrugdicht(1);
    15fe:	81 e0       	ldi	r24, 0x01	; 1
    1600:	90 e0       	ldi	r25, 0x00	; 0
    1602:	0e 94 d6 01 	call	0x3ac	; 0x3ac <Verlichtingbrugdicht>
                            LedsbedieningpaneelRoodDichtAan(1);
    1606:	81 e0       	ldi	r24, 0x01	; 1
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	0e 94 36 05 	call	0xa6c	; 0xa6c <LedsbedieningpaneelRoodDichtAan>
                            LedsbedieningpaneelRoodDichtUit(0);
    160e:	80 e0       	ldi	r24, 0x00	; 0
    1610:	90 e0       	ldi	r25, 0x00	; 0
    1612:	0e 94 4f 05 	call	0xa9e	; 0xa9e <LedsbedieningpaneelRoodDichtUit>
                            LedsbedieningpaneelBlauwOpenenAan(0);
    1616:	80 e0       	ldi	r24, 0x00	; 0
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	0e 94 68 05 	call	0xad0	; 0xad0 <LedsbedieningpaneelBlauwOpenenAan>
                            LedsbedieningpaneelBlauwOpenenUit(1);
    161e:	81 e0       	ldi	r24, 0x01	; 1
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	0e 94 81 05 	call	0xb02	; 0xb02 <LedsbedieningpaneelBlauwOpenenUit>
                            LedsbedieningpaneelBlauwSluitenAan(0);
    1626:	80 e0       	ldi	r24, 0x00	; 0
    1628:	90 e0       	ldi	r25, 0x00	; 0
    162a:	0e 94 9a 05 	call	0xb34	; 0xb34 <LedsbedieningpaneelBlauwSluitenAan>
                            LedsbedieningpaneelBlauwSluitenUit(1);
    162e:	81 e0       	ldi	r24, 0x01	; 1
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	0e 94 b3 05 	call	0xb66	; 0xb66 <LedsbedieningpaneelBlauwSluitenUit>
                            LedsbedieningpaneelRoodOpenAan(0);
    1636:	80 e0       	ldi	r24, 0x00	; 0
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	0e 94 04 05 	call	0xa08	; 0xa08 <LedsbedieningpaneelRoodOpenAan>
                            LedsbedieningpaneelRoodOpenUit(1);
    163e:	81 e0       	ldi	r24, 0x01	; 1
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LedsbedieningpaneelRoodOpenUit>
                            LedsbedieningpaneelGeelPersoonAan(0);
    1646:	80 e0       	ldi	r24, 0x00	; 0
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	0e 94 fe 05 	call	0xbfc	; 0xbfc <LedsbedieningpaneelGeelPersoonAan>
                            LedsbedieningpaneelGeelPersoonUit(1);
    164e:	81 e0       	ldi	r24, 0x01	; 1
    1650:	90 e0       	ldi	r25, 0x00	; 0
    1652:	0e 94 17 06 	call	0xc2e	; 0xc2e <LedsbedieningpaneelGeelPersoonUit>
                            LedsbedieningpaneelNoodstopUit(0);
    1656:	80 e0       	ldi	r24, 0x00	; 0
    1658:	90 e0       	ldi	r25, 0x00	; 0
    165a:	0e 94 49 06 	call	0xc92	; 0xc92 <LedsbedieningpaneelNoodstopUit>
                            LedsbedieningpaneelNoodstopAan(1);
    165e:	81 e0       	ldi	r24, 0x01	; 1
    1660:	90 e0       	ldi	r25, 0x00	; 0
    1662:	0e 94 30 06 	call	0xc60	; 0xc60 <LedsbedieningpaneelNoodstopAan>
                            LedsbedieningpaneelGeelBootAan(1);
    1666:	81 e0       	ldi	r24, 0x01	; 1
    1668:	90 e0       	ldi	r25, 0x00	; 0
    166a:	0e 94 cc 05 	call	0xb98	; 0xb98 <LedsbedieningpaneelGeelBootAan>
                            LedsbedieningpaneelGeelBootUit(0);
    166e:	80 e0       	ldi	r24, 0x00	; 0
    1670:	90 e0       	ldi	r25, 0x00	; 0
    1672:	0e 94 e5 05 	call	0xbca	; 0xbca <LedsbedieningpaneelGeelBootUit>
                            stand = 2;
    1676:	fe 01       	movw	r30, r28
    1678:	e3 59       	subi	r30, 0x93	; 147
    167a:	ff 4f       	sbci	r31, 0xFF	; 255
    167c:	82 e0       	ldi	r24, 0x02	; 2
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	91 83       	std	Z+1, r25	; 0x01
    1682:	80 83       	st	Z, r24
    1684:	0c 94 09 13 	jmp	0x2612	; 0x2612 <__stack+0x413>
                        }
                        else
                        {
                            stand = 1;
    1688:	fe 01       	movw	r30, r28
    168a:	e3 59       	subi	r30, 0x93	; 147
    168c:	ff 4f       	sbci	r31, 0xFF	; 255
    168e:	81 e0       	ldi	r24, 0x01	; 1
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	91 83       	std	Z+1, r25	; 0x01
    1694:	80 83       	st	Z, r24
    1696:	0c 94 09 13 	jmp	0x2612	; 0x2612 <__stack+0x413>
                        }
                    break;
                case 2:
                        Slagbomenopen(1);
    169a:	81 e0       	ldi	r24, 0x01	; 1
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	0e 94 c0 07 	call	0xf80	; 0xf80 <Slagbomenopen>
                        Verlichtingbrugdicht(1);
    16a2:	81 e0       	ldi	r24, 0x01	; 1
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	0e 94 d6 01 	call	0x3ac	; 0x3ac <Verlichtingbrugdicht>
                        LedsbedieningpaneelRoodDichtAan(1);
    16aa:	81 e0       	ldi	r24, 0x01	; 1
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	0e 94 36 05 	call	0xa6c	; 0xa6c <LedsbedieningpaneelRoodDichtAan>
                        LedsbedieningpaneelRoodDichtUit(0);
    16b2:	80 e0       	ldi	r24, 0x00	; 0
    16b4:	90 e0       	ldi	r25, 0x00	; 0
    16b6:	0e 94 4f 05 	call	0xa9e	; 0xa9e <LedsbedieningpaneelRoodDichtUit>
                        LedsbedieningpaneelBlauwOpenenAan(0);
    16ba:	80 e0       	ldi	r24, 0x00	; 0
    16bc:	90 e0       	ldi	r25, 0x00	; 0
    16be:	0e 94 68 05 	call	0xad0	; 0xad0 <LedsbedieningpaneelBlauwOpenenAan>
                        LedsbedieningpaneelBlauwOpenenUit(1);
    16c2:	81 e0       	ldi	r24, 0x01	; 1
    16c4:	90 e0       	ldi	r25, 0x00	; 0
    16c6:	0e 94 81 05 	call	0xb02	; 0xb02 <LedsbedieningpaneelBlauwOpenenUit>
                        LedsbedieningpaneelBlauwSluitenAan(0);
    16ca:	80 e0       	ldi	r24, 0x00	; 0
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	0e 94 9a 05 	call	0xb34	; 0xb34 <LedsbedieningpaneelBlauwSluitenAan>
                        LedsbedieningpaneelBlauwSluitenUit(1);
    16d2:	81 e0       	ldi	r24, 0x01	; 1
    16d4:	90 e0       	ldi	r25, 0x00	; 0
    16d6:	0e 94 b3 05 	call	0xb66	; 0xb66 <LedsbedieningpaneelBlauwSluitenUit>
                        LedsbedieningpaneelRoodOpenAan(0);
    16da:	80 e0       	ldi	r24, 0x00	; 0
    16dc:	90 e0       	ldi	r25, 0x00	; 0
    16de:	0e 94 04 05 	call	0xa08	; 0xa08 <LedsbedieningpaneelRoodOpenAan>
                        LedsbedieningpaneelRoodOpenUit(1);
    16e2:	81 e0       	ldi	r24, 0x01	; 1
    16e4:	90 e0       	ldi	r25, 0x00	; 0
    16e6:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LedsbedieningpaneelRoodOpenUit>
                        LedsbedieningpaneelGeelPersoonAan(0);
    16ea:	80 e0       	ldi	r24, 0x00	; 0
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	0e 94 fe 05 	call	0xbfc	; 0xbfc <LedsbedieningpaneelGeelPersoonAan>
                        LedsbedieningpaneelGeelPersoonUit(1);
    16f2:	81 e0       	ldi	r24, 0x01	; 1
    16f4:	90 e0       	ldi	r25, 0x00	; 0
    16f6:	0e 94 17 06 	call	0xc2e	; 0xc2e <LedsbedieningpaneelGeelPersoonUit>
                        LedsbedieningpaneelNoodstopUit(0);
    16fa:	80 e0       	ldi	r24, 0x00	; 0
    16fc:	90 e0       	ldi	r25, 0x00	; 0
    16fe:	0e 94 49 06 	call	0xc92	; 0xc92 <LedsbedieningpaneelNoodstopUit>
                        LedsbedieningpaneelNoodstopAan(1);
    1702:	81 e0       	ldi	r24, 0x01	; 1
    1704:	90 e0       	ldi	r25, 0x00	; 0
    1706:	0e 94 30 06 	call	0xc60	; 0xc60 <LedsbedieningpaneelNoodstopAan>
                        LedsbedieningpaneelGeelBootAan(1);
    170a:	81 e0       	ldi	r24, 0x01	; 1
    170c:	90 e0       	ldi	r25, 0x00	; 0
    170e:	0e 94 cc 05 	call	0xb98	; 0xb98 <LedsbedieningpaneelGeelBootAan>
                        LedsbedieningpaneelGeelBootUit(0);
    1712:	80 e0       	ldi	r24, 0x00	; 0
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	0e 94 e5 05 	call	0xbca	; 0xbca <LedsbedieningpaneelGeelBootUit>
                            if ((KnopOpen == 1) && (windmeter == 0))
    171a:	fe 01       	movw	r30, r28
    171c:	e9 58       	subi	r30, 0x89	; 137
    171e:	ff 4f       	sbci	r31, 0xFF	; 255
    1720:	80 81       	ld	r24, Z
    1722:	91 81       	ldd	r25, Z+1	; 0x01
    1724:	81 30       	cpi	r24, 0x01	; 1
    1726:	91 05       	cpc	r25, r1
    1728:	09 f0       	breq	.+2      	; 0x172c <main+0x6ac>
    172a:	53 c0       	rjmp	.+166    	; 0x17d2 <main+0x752>
    172c:	80 91 02 02 	lds	r24, 0x0202
    1730:	90 91 03 02 	lds	r25, 0x0203
    1734:	00 97       	sbiw	r24, 0x00	; 0
    1736:	09 f0       	breq	.+2      	; 0x173a <main+0x6ba>
    1738:	4c c0       	rjmp	.+152    	; 0x17d2 <main+0x752>
                            {
                                Slagbomenopen(1);
    173a:	81 e0       	ldi	r24, 0x01	; 1
    173c:	90 e0       	ldi	r25, 0x00	; 0
    173e:	0e 94 c0 07 	call	0xf80	; 0xf80 <Slagbomenopen>
                                Verlichtingbrugopent1Aan(1);
    1742:	81 e0       	ldi	r24, 0x01	; 1
    1744:	90 e0       	ldi	r25, 0x00	; 0
    1746:	0e 94 20 02 	call	0x440	; 0x440 <Verlichtingbrugopent1Aan>
                                waarschuwingslichtenAan(1);
    174a:	81 e0       	ldi	r24, 0x01	; 1
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	0e 94 62 06 	call	0xcc4	; 0xcc4 <waarschuwingslichtenAan>
                                LedsbedieningpaneelRoodDichtAan(1);
    1752:	81 e0       	ldi	r24, 0x01	; 1
    1754:	90 e0       	ldi	r25, 0x00	; 0
    1756:	0e 94 36 05 	call	0xa6c	; 0xa6c <LedsbedieningpaneelRoodDichtAan>
                                LedsbedieningpaneelRoodDichtUit(0);
    175a:	80 e0       	ldi	r24, 0x00	; 0
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	0e 94 4f 05 	call	0xa9e	; 0xa9e <LedsbedieningpaneelRoodDichtUit>
                                LedsbedieningpaneelBlauwOpenenAan(0);
    1762:	80 e0       	ldi	r24, 0x00	; 0
    1764:	90 e0       	ldi	r25, 0x00	; 0
    1766:	0e 94 68 05 	call	0xad0	; 0xad0 <LedsbedieningpaneelBlauwOpenenAan>
                                LedsbedieningpaneelBlauwOpenenUit(1);
    176a:	81 e0       	ldi	r24, 0x01	; 1
    176c:	90 e0       	ldi	r25, 0x00	; 0
    176e:	0e 94 81 05 	call	0xb02	; 0xb02 <LedsbedieningpaneelBlauwOpenenUit>
                                LedsbedieningpaneelBlauwSluitenAan(1);
    1772:	81 e0       	ldi	r24, 0x01	; 1
    1774:	90 e0       	ldi	r25, 0x00	; 0
    1776:	0e 94 9a 05 	call	0xb34	; 0xb34 <LedsbedieningpaneelBlauwSluitenAan>
                                LedsbedieningpaneelBlauwSluitenUit(0);
    177a:	80 e0       	ldi	r24, 0x00	; 0
    177c:	90 e0       	ldi	r25, 0x00	; 0
    177e:	0e 94 b3 05 	call	0xb66	; 0xb66 <LedsbedieningpaneelBlauwSluitenUit>
                                LedsbedieningpaneelRoodOpenAan(0);
    1782:	80 e0       	ldi	r24, 0x00	; 0
    1784:	90 e0       	ldi	r25, 0x00	; 0
    1786:	0e 94 04 05 	call	0xa08	; 0xa08 <LedsbedieningpaneelRoodOpenAan>
                                LedsbedieningpaneelRoodOpenUit(1);
    178a:	81 e0       	ldi	r24, 0x01	; 1
    178c:	90 e0       	ldi	r25, 0x00	; 0
    178e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LedsbedieningpaneelRoodOpenUit>
                                LedsbedieningpaneelGeelPersoonAan(0);
    1792:	80 e0       	ldi	r24, 0x00	; 0
    1794:	90 e0       	ldi	r25, 0x00	; 0
    1796:	0e 94 fe 05 	call	0xbfc	; 0xbfc <LedsbedieningpaneelGeelPersoonAan>
                                LedsbedieningpaneelGeelPersoonUit(1);
    179a:	81 e0       	ldi	r24, 0x01	; 1
    179c:	90 e0       	ldi	r25, 0x00	; 0
    179e:	0e 94 17 06 	call	0xc2e	; 0xc2e <LedsbedieningpaneelGeelPersoonUit>
                                LedsbedieningpaneelNoodstopUit(0);
    17a2:	80 e0       	ldi	r24, 0x00	; 0
    17a4:	90 e0       	ldi	r25, 0x00	; 0
    17a6:	0e 94 49 06 	call	0xc92	; 0xc92 <LedsbedieningpaneelNoodstopUit>
                                LedsbedieningpaneelNoodstopAan(1);
    17aa:	81 e0       	ldi	r24, 0x01	; 1
    17ac:	90 e0       	ldi	r25, 0x00	; 0
    17ae:	0e 94 30 06 	call	0xc60	; 0xc60 <LedsbedieningpaneelNoodstopAan>
                                LedsbedieningpaneelGeelBootAan(1);
    17b2:	81 e0       	ldi	r24, 0x01	; 1
    17b4:	90 e0       	ldi	r25, 0x00	; 0
    17b6:	0e 94 cc 05 	call	0xb98	; 0xb98 <LedsbedieningpaneelGeelBootAan>
                                LedsbedieningpaneelGeelBootUit(0);
    17ba:	80 e0       	ldi	r24, 0x00	; 0
    17bc:	90 e0       	ldi	r25, 0x00	; 0
    17be:	0e 94 e5 05 	call	0xbca	; 0xbca <LedsbedieningpaneelGeelBootUit>
                                stand = 3;
    17c2:	fe 01       	movw	r30, r28
    17c4:	e3 59       	subi	r30, 0x93	; 147
    17c6:	ff 4f       	sbci	r31, 0xFF	; 255
    17c8:	83 e0       	ldi	r24, 0x03	; 3
    17ca:	90 e0       	ldi	r25, 0x00	; 0
    17cc:	91 83       	std	Z+1, r25	; 0x01
    17ce:	80 83       	st	Z, r24
    17d0:	20 c7       	rjmp	.+3648   	; 0x2612 <__stack+0x413>
                            }
                            else
                            {
                                stand = 2;
    17d2:	fe 01       	movw	r30, r28
    17d4:	e3 59       	subi	r30, 0x93	; 147
    17d6:	ff 4f       	sbci	r31, 0xFF	; 255
    17d8:	82 e0       	ldi	r24, 0x02	; 2
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	91 83       	std	Z+1, r25	; 0x01
    17de:	80 83       	st	Z, r24
    17e0:	18 c7       	rjmp	.+3632   	; 0x2612 <__stack+0x413>
                            }
                    break;
                case 3:
                    Slagbomenopen(1);
    17e2:	81 e0       	ldi	r24, 0x01	; 1
    17e4:	90 e0       	ldi	r25, 0x00	; 0
    17e6:	0e 94 c0 07 	call	0xf80	; 0xf80 <Slagbomenopen>
                    Verlichtingbrugopent1Aan(1);
    17ea:	81 e0       	ldi	r24, 0x01	; 1
    17ec:	90 e0       	ldi	r25, 0x00	; 0
    17ee:	0e 94 20 02 	call	0x440	; 0x440 <Verlichtingbrugopent1Aan>
                    waarschuwingslichtenAan(1);
    17f2:	81 e0       	ldi	r24, 0x01	; 1
    17f4:	90 e0       	ldi	r25, 0x00	; 0
    17f6:	0e 94 62 06 	call	0xcc4	; 0xcc4 <waarschuwingslichtenAan>
                    LedsbedieningpaneelRoodDichtAan(1);
    17fa:	81 e0       	ldi	r24, 0x01	; 1
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	0e 94 36 05 	call	0xa6c	; 0xa6c <LedsbedieningpaneelRoodDichtAan>
                    LedsbedieningpaneelRoodDichtUit(0);
    1802:	80 e0       	ldi	r24, 0x00	; 0
    1804:	90 e0       	ldi	r25, 0x00	; 0
    1806:	0e 94 4f 05 	call	0xa9e	; 0xa9e <LedsbedieningpaneelRoodDichtUit>
                    LedsbedieningpaneelBlauwOpenenAan(0);
    180a:	80 e0       	ldi	r24, 0x00	; 0
    180c:	90 e0       	ldi	r25, 0x00	; 0
    180e:	0e 94 68 05 	call	0xad0	; 0xad0 <LedsbedieningpaneelBlauwOpenenAan>
                    LedsbedieningpaneelBlauwOpenenUit(1);
    1812:	81 e0       	ldi	r24, 0x01	; 1
    1814:	90 e0       	ldi	r25, 0x00	; 0
    1816:	0e 94 81 05 	call	0xb02	; 0xb02 <LedsbedieningpaneelBlauwOpenenUit>
                    LedsbedieningpaneelBlauwSluitenAan(1);
    181a:	81 e0       	ldi	r24, 0x01	; 1
    181c:	90 e0       	ldi	r25, 0x00	; 0
    181e:	0e 94 9a 05 	call	0xb34	; 0xb34 <LedsbedieningpaneelBlauwSluitenAan>
                    LedsbedieningpaneelBlauwSluitenUit(0);
    1822:	80 e0       	ldi	r24, 0x00	; 0
    1824:	90 e0       	ldi	r25, 0x00	; 0
    1826:	0e 94 b3 05 	call	0xb66	; 0xb66 <LedsbedieningpaneelBlauwSluitenUit>
                    LedsbedieningpaneelRoodOpenAan(0);
    182a:	80 e0       	ldi	r24, 0x00	; 0
    182c:	90 e0       	ldi	r25, 0x00	; 0
    182e:	0e 94 04 05 	call	0xa08	; 0xa08 <LedsbedieningpaneelRoodOpenAan>
                    LedsbedieningpaneelRoodOpenUit(1);
    1832:	81 e0       	ldi	r24, 0x01	; 1
    1834:	90 e0       	ldi	r25, 0x00	; 0
    1836:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LedsbedieningpaneelRoodOpenUit>
                    LedsbedieningpaneelGeelPersoonAan(0);
    183a:	80 e0       	ldi	r24, 0x00	; 0
    183c:	90 e0       	ldi	r25, 0x00	; 0
    183e:	0e 94 fe 05 	call	0xbfc	; 0xbfc <LedsbedieningpaneelGeelPersoonAan>
                    LedsbedieningpaneelGeelPersoonUit(1);
    1842:	81 e0       	ldi	r24, 0x01	; 1
    1844:	90 e0       	ldi	r25, 0x00	; 0
    1846:	0e 94 17 06 	call	0xc2e	; 0xc2e <LedsbedieningpaneelGeelPersoonUit>
                    LedsbedieningpaneelNoodstopUit(0);
    184a:	80 e0       	ldi	r24, 0x00	; 0
    184c:	90 e0       	ldi	r25, 0x00	; 0
    184e:	0e 94 49 06 	call	0xc92	; 0xc92 <LedsbedieningpaneelNoodstopUit>
                    LedsbedieningpaneelNoodstopAan(1);
    1852:	81 e0       	ldi	r24, 0x01	; 1
    1854:	90 e0       	ldi	r25, 0x00	; 0
    1856:	0e 94 30 06 	call	0xc60	; 0xc60 <LedsbedieningpaneelNoodstopAan>
                    LedsbedieningpaneelGeelBootAan(1);
    185a:	81 e0       	ldi	r24, 0x01	; 1
    185c:	90 e0       	ldi	r25, 0x00	; 0
    185e:	0e 94 cc 05 	call	0xb98	; 0xb98 <LedsbedieningpaneelGeelBootAan>
                    LedsbedieningpaneelGeelBootUit(0);
    1862:	80 e0       	ldi	r24, 0x00	; 0
    1864:	90 e0       	ldi	r25, 0x00	; 0
    1866:	0e 94 e5 05 	call	0xbca	; 0xbca <LedsbedieningpaneelGeelBootUit>
                        if ((ultrasoonpersoon1 == 1) || (ultrasoonpersoon2 == 1))
    186a:	fe 01       	movw	r30, r28
    186c:	e9 59       	subi	r30, 0x99	; 153
    186e:	ff 4f       	sbci	r31, 0xFF	; 255
    1870:	80 81       	ld	r24, Z
    1872:	91 81       	ldd	r25, Z+1	; 0x01
    1874:	81 30       	cpi	r24, 0x01	; 1
    1876:	91 05       	cpc	r25, r1
    1878:	49 f0       	breq	.+18     	; 0x188c <main+0x80c>
    187a:	fe 01       	movw	r30, r28
    187c:	eb 59       	subi	r30, 0x9B	; 155
    187e:	ff 4f       	sbci	r31, 0xFF	; 255
    1880:	80 81       	ld	r24, Z
    1882:	91 81       	ldd	r25, Z+1	; 0x01
    1884:	81 30       	cpi	r24, 0x01	; 1
    1886:	91 05       	cpc	r25, r1
    1888:	09 f0       	breq	.+2      	; 0x188c <main+0x80c>
    188a:	ca c0       	rjmp	.+404    	; 0x1a20 <main+0x9a0>
                        {
                            LedsbedieningpaneelGeelPersoonAan(1);
    188c:	81 e0       	ldi	r24, 0x01	; 1
    188e:	90 e0       	ldi	r25, 0x00	; 0
    1890:	0e 94 fe 05 	call	0xbfc	; 0xbfc <LedsbedieningpaneelGeelPersoonAan>
    1894:	fe 01       	movw	r30, r28
    1896:	e1 5a       	subi	r30, 0xA1	; 161
    1898:	ff 4f       	sbci	r31, 0xFF	; 255
    189a:	80 e0       	ldi	r24, 0x00	; 0
    189c:	90 e8       	ldi	r25, 0x80	; 128
    189e:	ab e3       	ldi	r26, 0x3B	; 59
    18a0:	b5 e4       	ldi	r27, 0x45	; 69
    18a2:	80 83       	st	Z, r24
    18a4:	91 83       	std	Z+1, r25	; 0x01
    18a6:	a2 83       	std	Z+2, r26	; 0x02
    18a8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18aa:	8e 01       	movw	r16, r28
    18ac:	05 5a       	subi	r16, 0xA5	; 165
    18ae:	1f 4f       	sbci	r17, 0xFF	; 255
    18b0:	fe 01       	movw	r30, r28
    18b2:	e1 5a       	subi	r30, 0xA1	; 161
    18b4:	ff 4f       	sbci	r31, 0xFF	; 255
    18b6:	60 81       	ld	r22, Z
    18b8:	71 81       	ldd	r23, Z+1	; 0x01
    18ba:	82 81       	ldd	r24, Z+2	; 0x02
    18bc:	93 81       	ldd	r25, Z+3	; 0x03
    18be:	20 e0       	ldi	r18, 0x00	; 0
    18c0:	30 e0       	ldi	r19, 0x00	; 0
    18c2:	4a e7       	ldi	r20, 0x7A	; 122
    18c4:	55 e4       	ldi	r21, 0x45	; 69
    18c6:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    18ca:	dc 01       	movw	r26, r24
    18cc:	cb 01       	movw	r24, r22
    18ce:	f8 01       	movw	r30, r16
    18d0:	80 83       	st	Z, r24
    18d2:	91 83       	std	Z+1, r25	; 0x01
    18d4:	a2 83       	std	Z+2, r26	; 0x02
    18d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18d8:	fe 01       	movw	r30, r28
    18da:	e5 5a       	subi	r30, 0xA5	; 165
    18dc:	ff 4f       	sbci	r31, 0xFF	; 255
    18de:	60 81       	ld	r22, Z
    18e0:	71 81       	ldd	r23, Z+1	; 0x01
    18e2:	82 81       	ldd	r24, Z+2	; 0x02
    18e4:	93 81       	ldd	r25, Z+3	; 0x03
    18e6:	20 e0       	ldi	r18, 0x00	; 0
    18e8:	30 e0       	ldi	r19, 0x00	; 0
    18ea:	40 e8       	ldi	r20, 0x80	; 128
    18ec:	5f e3       	ldi	r21, 0x3F	; 63
    18ee:	0e 94 2c 15 	call	0x2a58	; 0x2a58 <__cmpsf2>
    18f2:	88 23       	and	r24, r24
    18f4:	44 f4       	brge	.+16     	; 0x1906 <main+0x886>
		__ticks = 1;
    18f6:	fe 01       	movw	r30, r28
    18f8:	e7 5a       	subi	r30, 0xA7	; 167
    18fa:	ff 4f       	sbci	r31, 0xFF	; 255
    18fc:	81 e0       	ldi	r24, 0x01	; 1
    18fe:	90 e0       	ldi	r25, 0x00	; 0
    1900:	91 83       	std	Z+1, r25	; 0x01
    1902:	80 83       	st	Z, r24
    1904:	64 c0       	rjmp	.+200    	; 0x19ce <main+0x94e>
	else if (__tmp > 65535)
    1906:	fe 01       	movw	r30, r28
    1908:	e5 5a       	subi	r30, 0xA5	; 165
    190a:	ff 4f       	sbci	r31, 0xFF	; 255
    190c:	60 81       	ld	r22, Z
    190e:	71 81       	ldd	r23, Z+1	; 0x01
    1910:	82 81       	ldd	r24, Z+2	; 0x02
    1912:	93 81       	ldd	r25, Z+3	; 0x03
    1914:	20 e0       	ldi	r18, 0x00	; 0
    1916:	3f ef       	ldi	r19, 0xFF	; 255
    1918:	4f e7       	ldi	r20, 0x7F	; 127
    191a:	57 e4       	ldi	r21, 0x47	; 71
    191c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__gesf2>
    1920:	18 16       	cp	r1, r24
    1922:	0c f0       	brlt	.+2      	; 0x1926 <main+0x8a6>
    1924:	43 c0       	rjmp	.+134    	; 0x19ac <main+0x92c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1926:	fe 01       	movw	r30, r28
    1928:	e1 5a       	subi	r30, 0xA1	; 161
    192a:	ff 4f       	sbci	r31, 0xFF	; 255
    192c:	60 81       	ld	r22, Z
    192e:	71 81       	ldd	r23, Z+1	; 0x01
    1930:	82 81       	ldd	r24, Z+2	; 0x02
    1932:	93 81       	ldd	r25, Z+3	; 0x03
    1934:	20 e0       	ldi	r18, 0x00	; 0
    1936:	30 e0       	ldi	r19, 0x00	; 0
    1938:	40 e2       	ldi	r20, 0x20	; 32
    193a:	51 e4       	ldi	r21, 0x41	; 65
    193c:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    1940:	dc 01       	movw	r26, r24
    1942:	cb 01       	movw	r24, r22
    1944:	8e 01       	movw	r16, r28
    1946:	07 5a       	subi	r16, 0xA7	; 167
    1948:	1f 4f       	sbci	r17, 0xFF	; 255
    194a:	bc 01       	movw	r22, r24
    194c:	cd 01       	movw	r24, r26
    194e:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    1952:	dc 01       	movw	r26, r24
    1954:	cb 01       	movw	r24, r22
    1956:	f8 01       	movw	r30, r16
    1958:	91 83       	std	Z+1, r25	; 0x01
    195a:	80 83       	st	Z, r24
    195c:	1f c0       	rjmp	.+62     	; 0x199c <main+0x91c>
    195e:	fe 01       	movw	r30, r28
    1960:	e9 5a       	subi	r30, 0xA9	; 169
    1962:	ff 4f       	sbci	r31, 0xFF	; 255
    1964:	80 e9       	ldi	r24, 0x90	; 144
    1966:	91 e0       	ldi	r25, 0x01	; 1
    1968:	91 83       	std	Z+1, r25	; 0x01
    196a:	80 83       	st	Z, r24
    196c:	fe 01       	movw	r30, r28
    196e:	e9 5a       	subi	r30, 0xA9	; 169
    1970:	ff 4f       	sbci	r31, 0xFF	; 255
    1972:	80 81       	ld	r24, Z
    1974:	91 81       	ldd	r25, Z+1	; 0x01
    1976:	01 97       	sbiw	r24, 0x01	; 1
    1978:	f1 f7       	brne	.-4      	; 0x1976 <main+0x8f6>
    197a:	fe 01       	movw	r30, r28
    197c:	e9 5a       	subi	r30, 0xA9	; 169
    197e:	ff 4f       	sbci	r31, 0xFF	; 255
    1980:	91 83       	std	Z+1, r25	; 0x01
    1982:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1984:	de 01       	movw	r26, r28
    1986:	a7 5a       	subi	r26, 0xA7	; 167
    1988:	bf 4f       	sbci	r27, 0xFF	; 255
    198a:	fe 01       	movw	r30, r28
    198c:	e7 5a       	subi	r30, 0xA7	; 167
    198e:	ff 4f       	sbci	r31, 0xFF	; 255
    1990:	80 81       	ld	r24, Z
    1992:	91 81       	ldd	r25, Z+1	; 0x01
    1994:	01 97       	sbiw	r24, 0x01	; 1
    1996:	11 96       	adiw	r26, 0x01	; 1
    1998:	9c 93       	st	X, r25
    199a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    199c:	fe 01       	movw	r30, r28
    199e:	e7 5a       	subi	r30, 0xA7	; 167
    19a0:	ff 4f       	sbci	r31, 0xFF	; 255
    19a2:	80 81       	ld	r24, Z
    19a4:	91 81       	ldd	r25, Z+1	; 0x01
    19a6:	00 97       	sbiw	r24, 0x00	; 0
    19a8:	d1 f6       	brne	.-76     	; 0x195e <main+0x8de>
    19aa:	28 c0       	rjmp	.+80     	; 0x19fc <main+0x97c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19ac:	8e 01       	movw	r16, r28
    19ae:	07 5a       	subi	r16, 0xA7	; 167
    19b0:	1f 4f       	sbci	r17, 0xFF	; 255
    19b2:	fe 01       	movw	r30, r28
    19b4:	e5 5a       	subi	r30, 0xA5	; 165
    19b6:	ff 4f       	sbci	r31, 0xFF	; 255
    19b8:	60 81       	ld	r22, Z
    19ba:	71 81       	ldd	r23, Z+1	; 0x01
    19bc:	82 81       	ldd	r24, Z+2	; 0x02
    19be:	93 81       	ldd	r25, Z+3	; 0x03
    19c0:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    19c4:	dc 01       	movw	r26, r24
    19c6:	cb 01       	movw	r24, r22
    19c8:	f8 01       	movw	r30, r16
    19ca:	91 83       	std	Z+1, r25	; 0x01
    19cc:	80 83       	st	Z, r24
    19ce:	de 01       	movw	r26, r28
    19d0:	ab 5a       	subi	r26, 0xAB	; 171
    19d2:	bf 4f       	sbci	r27, 0xFF	; 255
    19d4:	fe 01       	movw	r30, r28
    19d6:	e7 5a       	subi	r30, 0xA7	; 167
    19d8:	ff 4f       	sbci	r31, 0xFF	; 255
    19da:	80 81       	ld	r24, Z
    19dc:	91 81       	ldd	r25, Z+1	; 0x01
    19de:	11 96       	adiw	r26, 0x01	; 1
    19e0:	9c 93       	st	X, r25
    19e2:	8e 93       	st	-X, r24
    19e4:	fe 01       	movw	r30, r28
    19e6:	eb 5a       	subi	r30, 0xAB	; 171
    19e8:	ff 4f       	sbci	r31, 0xFF	; 255
    19ea:	80 81       	ld	r24, Z
    19ec:	91 81       	ldd	r25, Z+1	; 0x01
    19ee:	01 97       	sbiw	r24, 0x01	; 1
    19f0:	f1 f7       	brne	.-4      	; 0x19ee <main+0x96e>
    19f2:	fe 01       	movw	r30, r28
    19f4:	eb 5a       	subi	r30, 0xAB	; 171
    19f6:	ff 4f       	sbci	r31, 0xFF	; 255
    19f8:	91 83       	std	Z+1, r25	; 0x01
    19fa:	80 83       	st	Z, r24
                            _delay_ms(3000);
                            ultrasoonpersoon1 = 0;
    19fc:	fe 01       	movw	r30, r28
    19fe:	e9 59       	subi	r30, 0x99	; 153
    1a00:	ff 4f       	sbci	r31, 0xFF	; 255
    1a02:	11 82       	std	Z+1, r1	; 0x01
    1a04:	10 82       	st	Z, r1
                            ultrasoonpersoon2 = 0;
    1a06:	fe 01       	movw	r30, r28
    1a08:	eb 59       	subi	r30, 0x9B	; 155
    1a0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a0c:	11 82       	std	Z+1, r1	; 0x01
    1a0e:	10 82       	st	Z, r1
                            stand = 3;
    1a10:	fe 01       	movw	r30, r28
    1a12:	e3 59       	subi	r30, 0x93	; 147
    1a14:	ff 4f       	sbci	r31, 0xFF	; 255
    1a16:	83 e0       	ldi	r24, 0x03	; 3
    1a18:	90 e0       	ldi	r25, 0x00	; 0
    1a1a:	91 83       	std	Z+1, r25	; 0x01
    1a1c:	80 83       	st	Z, r24
    1a1e:	f9 c5       	rjmp	.+3058   	; 0x2612 <__stack+0x413>
                        }
                        else
                        {
                            stand = 4;
    1a20:	fe 01       	movw	r30, r28
    1a22:	e3 59       	subi	r30, 0x93	; 147
    1a24:	ff 4f       	sbci	r31, 0xFF	; 255
    1a26:	84 e0       	ldi	r24, 0x04	; 4
    1a28:	90 e0       	ldi	r25, 0x00	; 0
    1a2a:	91 83       	std	Z+1, r25	; 0x01
    1a2c:	80 83       	st	Z, r24
    1a2e:	f1 c5       	rjmp	.+3042   	; 0x2612 <__stack+0x413>
                        }
                    break;
                case 4:
                    Slagbomenopen(1);
    1a30:	81 e0       	ldi	r24, 0x01	; 1
    1a32:	90 e0       	ldi	r25, 0x00	; 0
    1a34:	0e 94 c0 07 	call	0xf80	; 0xf80 <Slagbomenopen>
                    Verlichtingbrugopent1Aan(1);
    1a38:	81 e0       	ldi	r24, 0x01	; 1
    1a3a:	90 e0       	ldi	r25, 0x00	; 0
    1a3c:	0e 94 20 02 	call	0x440	; 0x440 <Verlichtingbrugopent1Aan>
                    waarschuwingslichtenAan(1);
    1a40:	81 e0       	ldi	r24, 0x01	; 1
    1a42:	90 e0       	ldi	r25, 0x00	; 0
    1a44:	0e 94 62 06 	call	0xcc4	; 0xcc4 <waarschuwingslichtenAan>
                    LedsbedieningpaneelRoodDichtAan(1);
    1a48:	81 e0       	ldi	r24, 0x01	; 1
    1a4a:	90 e0       	ldi	r25, 0x00	; 0
    1a4c:	0e 94 36 05 	call	0xa6c	; 0xa6c <LedsbedieningpaneelRoodDichtAan>
                    LedsbedieningpaneelRoodDichtUit(0);
    1a50:	80 e0       	ldi	r24, 0x00	; 0
    1a52:	90 e0       	ldi	r25, 0x00	; 0
    1a54:	0e 94 4f 05 	call	0xa9e	; 0xa9e <LedsbedieningpaneelRoodDichtUit>
                    LedsbedieningpaneelBlauwOpenenAan(0);
    1a58:	80 e0       	ldi	r24, 0x00	; 0
    1a5a:	90 e0       	ldi	r25, 0x00	; 0
    1a5c:	0e 94 68 05 	call	0xad0	; 0xad0 <LedsbedieningpaneelBlauwOpenenAan>
                    LedsbedieningpaneelBlauwOpenenUit(1);
    1a60:	81 e0       	ldi	r24, 0x01	; 1
    1a62:	90 e0       	ldi	r25, 0x00	; 0
    1a64:	0e 94 81 05 	call	0xb02	; 0xb02 <LedsbedieningpaneelBlauwOpenenUit>
                    LedsbedieningpaneelBlauwSluitenAan(1);
    1a68:	81 e0       	ldi	r24, 0x01	; 1
    1a6a:	90 e0       	ldi	r25, 0x00	; 0
    1a6c:	0e 94 9a 05 	call	0xb34	; 0xb34 <LedsbedieningpaneelBlauwSluitenAan>
                    LedsbedieningpaneelBlauwSluitenUit(0);
    1a70:	80 e0       	ldi	r24, 0x00	; 0
    1a72:	90 e0       	ldi	r25, 0x00	; 0
    1a74:	0e 94 b3 05 	call	0xb66	; 0xb66 <LedsbedieningpaneelBlauwSluitenUit>
                    LedsbedieningpaneelRoodOpenAan(0);
    1a78:	80 e0       	ldi	r24, 0x00	; 0
    1a7a:	90 e0       	ldi	r25, 0x00	; 0
    1a7c:	0e 94 04 05 	call	0xa08	; 0xa08 <LedsbedieningpaneelRoodOpenAan>
                    LedsbedieningpaneelRoodOpenUit(1);
    1a80:	81 e0       	ldi	r24, 0x01	; 1
    1a82:	90 e0       	ldi	r25, 0x00	; 0
    1a84:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LedsbedieningpaneelRoodOpenUit>
                    LedsbedieningpaneelGeelPersoonAan(0);
    1a88:	80 e0       	ldi	r24, 0x00	; 0
    1a8a:	90 e0       	ldi	r25, 0x00	; 0
    1a8c:	0e 94 fe 05 	call	0xbfc	; 0xbfc <LedsbedieningpaneelGeelPersoonAan>
                    LedsbedieningpaneelGeelPersoonUit(1);
    1a90:	81 e0       	ldi	r24, 0x01	; 1
    1a92:	90 e0       	ldi	r25, 0x00	; 0
    1a94:	0e 94 17 06 	call	0xc2e	; 0xc2e <LedsbedieningpaneelGeelPersoonUit>
                    LedsbedieningpaneelNoodstopUit(0);
    1a98:	80 e0       	ldi	r24, 0x00	; 0
    1a9a:	90 e0       	ldi	r25, 0x00	; 0
    1a9c:	0e 94 49 06 	call	0xc92	; 0xc92 <LedsbedieningpaneelNoodstopUit>
                    LedsbedieningpaneelNoodstopAan(1);
    1aa0:	81 e0       	ldi	r24, 0x01	; 1
    1aa2:	90 e0       	ldi	r25, 0x00	; 0
    1aa4:	0e 94 30 06 	call	0xc60	; 0xc60 <LedsbedieningpaneelNoodstopAan>
                    LedsbedieningpaneelGeelBootAan(1);
    1aa8:	81 e0       	ldi	r24, 0x01	; 1
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	0e 94 cc 05 	call	0xb98	; 0xb98 <LedsbedieningpaneelGeelBootAan>
                    LedsbedieningpaneelGeelBootUit(0);
    1ab0:	80 e0       	ldi	r24, 0x00	; 0
    1ab2:	90 e0       	ldi	r25, 0x00	; 0
    1ab4:	0e 94 e5 05 	call	0xbca	; 0xbca <LedsbedieningpaneelGeelBootUit>
    1ab8:	fe 01       	movw	r30, r28
    1aba:	ef 5a       	subi	r30, 0xAF	; 175
    1abc:	ff 4f       	sbci	r31, 0xFF	; 255
    1abe:	80 e0       	ldi	r24, 0x00	; 0
    1ac0:	90 e0       	ldi	r25, 0x00	; 0
    1ac2:	aa ef       	ldi	r26, 0xFA	; 250
    1ac4:	b4 e4       	ldi	r27, 0x44	; 68
    1ac6:	80 83       	st	Z, r24
    1ac8:	91 83       	std	Z+1, r25	; 0x01
    1aca:	a2 83       	std	Z+2, r26	; 0x02
    1acc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ace:	8e 01       	movw	r16, r28
    1ad0:	03 5b       	subi	r16, 0xB3	; 179
    1ad2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ad4:	fe 01       	movw	r30, r28
    1ad6:	ef 5a       	subi	r30, 0xAF	; 175
    1ad8:	ff 4f       	sbci	r31, 0xFF	; 255
    1ada:	60 81       	ld	r22, Z
    1adc:	71 81       	ldd	r23, Z+1	; 0x01
    1ade:	82 81       	ldd	r24, Z+2	; 0x02
    1ae0:	93 81       	ldd	r25, Z+3	; 0x03
    1ae2:	20 e0       	ldi	r18, 0x00	; 0
    1ae4:	30 e0       	ldi	r19, 0x00	; 0
    1ae6:	4a e7       	ldi	r20, 0x7A	; 122
    1ae8:	55 e4       	ldi	r21, 0x45	; 69
    1aea:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    1aee:	dc 01       	movw	r26, r24
    1af0:	cb 01       	movw	r24, r22
    1af2:	f8 01       	movw	r30, r16
    1af4:	80 83       	st	Z, r24
    1af6:	91 83       	std	Z+1, r25	; 0x01
    1af8:	a2 83       	std	Z+2, r26	; 0x02
    1afa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1afc:	fe 01       	movw	r30, r28
    1afe:	e3 5b       	subi	r30, 0xB3	; 179
    1b00:	ff 4f       	sbci	r31, 0xFF	; 255
    1b02:	60 81       	ld	r22, Z
    1b04:	71 81       	ldd	r23, Z+1	; 0x01
    1b06:	82 81       	ldd	r24, Z+2	; 0x02
    1b08:	93 81       	ldd	r25, Z+3	; 0x03
    1b0a:	20 e0       	ldi	r18, 0x00	; 0
    1b0c:	30 e0       	ldi	r19, 0x00	; 0
    1b0e:	40 e8       	ldi	r20, 0x80	; 128
    1b10:	5f e3       	ldi	r21, 0x3F	; 63
    1b12:	0e 94 2c 15 	call	0x2a58	; 0x2a58 <__cmpsf2>
    1b16:	88 23       	and	r24, r24
    1b18:	44 f4       	brge	.+16     	; 0x1b2a <main+0xaaa>
		__ticks = 1;
    1b1a:	fe 01       	movw	r30, r28
    1b1c:	e5 5b       	subi	r30, 0xB5	; 181
    1b1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b20:	81 e0       	ldi	r24, 0x01	; 1
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	91 83       	std	Z+1, r25	; 0x01
    1b26:	80 83       	st	Z, r24
    1b28:	64 c0       	rjmp	.+200    	; 0x1bf2 <main+0xb72>
	else if (__tmp > 65535)
    1b2a:	fe 01       	movw	r30, r28
    1b2c:	e3 5b       	subi	r30, 0xB3	; 179
    1b2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b30:	60 81       	ld	r22, Z
    1b32:	71 81       	ldd	r23, Z+1	; 0x01
    1b34:	82 81       	ldd	r24, Z+2	; 0x02
    1b36:	93 81       	ldd	r25, Z+3	; 0x03
    1b38:	20 e0       	ldi	r18, 0x00	; 0
    1b3a:	3f ef       	ldi	r19, 0xFF	; 255
    1b3c:	4f e7       	ldi	r20, 0x7F	; 127
    1b3e:	57 e4       	ldi	r21, 0x47	; 71
    1b40:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__gesf2>
    1b44:	18 16       	cp	r1, r24
    1b46:	0c f0       	brlt	.+2      	; 0x1b4a <main+0xaca>
    1b48:	43 c0       	rjmp	.+134    	; 0x1bd0 <main+0xb50>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b4a:	fe 01       	movw	r30, r28
    1b4c:	ef 5a       	subi	r30, 0xAF	; 175
    1b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b50:	60 81       	ld	r22, Z
    1b52:	71 81       	ldd	r23, Z+1	; 0x01
    1b54:	82 81       	ldd	r24, Z+2	; 0x02
    1b56:	93 81       	ldd	r25, Z+3	; 0x03
    1b58:	20 e0       	ldi	r18, 0x00	; 0
    1b5a:	30 e0       	ldi	r19, 0x00	; 0
    1b5c:	40 e2       	ldi	r20, 0x20	; 32
    1b5e:	51 e4       	ldi	r21, 0x41	; 65
    1b60:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    1b64:	dc 01       	movw	r26, r24
    1b66:	cb 01       	movw	r24, r22
    1b68:	8e 01       	movw	r16, r28
    1b6a:	05 5b       	subi	r16, 0xB5	; 181
    1b6c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b6e:	bc 01       	movw	r22, r24
    1b70:	cd 01       	movw	r24, r26
    1b72:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    1b76:	dc 01       	movw	r26, r24
    1b78:	cb 01       	movw	r24, r22
    1b7a:	f8 01       	movw	r30, r16
    1b7c:	91 83       	std	Z+1, r25	; 0x01
    1b7e:	80 83       	st	Z, r24
    1b80:	1f c0       	rjmp	.+62     	; 0x1bc0 <main+0xb40>
    1b82:	fe 01       	movw	r30, r28
    1b84:	e7 5b       	subi	r30, 0xB7	; 183
    1b86:	ff 4f       	sbci	r31, 0xFF	; 255
    1b88:	80 e9       	ldi	r24, 0x90	; 144
    1b8a:	91 e0       	ldi	r25, 0x01	; 1
    1b8c:	91 83       	std	Z+1, r25	; 0x01
    1b8e:	80 83       	st	Z, r24
    1b90:	fe 01       	movw	r30, r28
    1b92:	e7 5b       	subi	r30, 0xB7	; 183
    1b94:	ff 4f       	sbci	r31, 0xFF	; 255
    1b96:	80 81       	ld	r24, Z
    1b98:	91 81       	ldd	r25, Z+1	; 0x01
    1b9a:	01 97       	sbiw	r24, 0x01	; 1
    1b9c:	f1 f7       	brne	.-4      	; 0x1b9a <main+0xb1a>
    1b9e:	fe 01       	movw	r30, r28
    1ba0:	e7 5b       	subi	r30, 0xB7	; 183
    1ba2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba4:	91 83       	std	Z+1, r25	; 0x01
    1ba6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ba8:	de 01       	movw	r26, r28
    1baa:	a5 5b       	subi	r26, 0xB5	; 181
    1bac:	bf 4f       	sbci	r27, 0xFF	; 255
    1bae:	fe 01       	movw	r30, r28
    1bb0:	e5 5b       	subi	r30, 0xB5	; 181
    1bb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb4:	80 81       	ld	r24, Z
    1bb6:	91 81       	ldd	r25, Z+1	; 0x01
    1bb8:	01 97       	sbiw	r24, 0x01	; 1
    1bba:	11 96       	adiw	r26, 0x01	; 1
    1bbc:	9c 93       	st	X, r25
    1bbe:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bc0:	fe 01       	movw	r30, r28
    1bc2:	e5 5b       	subi	r30, 0xB5	; 181
    1bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc6:	80 81       	ld	r24, Z
    1bc8:	91 81       	ldd	r25, Z+1	; 0x01
    1bca:	00 97       	sbiw	r24, 0x00	; 0
    1bcc:	d1 f6       	brne	.-76     	; 0x1b82 <main+0xb02>
    1bce:	28 c0       	rjmp	.+80     	; 0x1c20 <main+0xba0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bd0:	8e 01       	movw	r16, r28
    1bd2:	05 5b       	subi	r16, 0xB5	; 181
    1bd4:	1f 4f       	sbci	r17, 0xFF	; 255
    1bd6:	fe 01       	movw	r30, r28
    1bd8:	e3 5b       	subi	r30, 0xB3	; 179
    1bda:	ff 4f       	sbci	r31, 0xFF	; 255
    1bdc:	60 81       	ld	r22, Z
    1bde:	71 81       	ldd	r23, Z+1	; 0x01
    1be0:	82 81       	ldd	r24, Z+2	; 0x02
    1be2:	93 81       	ldd	r25, Z+3	; 0x03
    1be4:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    1be8:	dc 01       	movw	r26, r24
    1bea:	cb 01       	movw	r24, r22
    1bec:	f8 01       	movw	r30, r16
    1bee:	91 83       	std	Z+1, r25	; 0x01
    1bf0:	80 83       	st	Z, r24
    1bf2:	de 01       	movw	r26, r28
    1bf4:	a9 5b       	subi	r26, 0xB9	; 185
    1bf6:	bf 4f       	sbci	r27, 0xFF	; 255
    1bf8:	fe 01       	movw	r30, r28
    1bfa:	e5 5b       	subi	r30, 0xB5	; 181
    1bfc:	ff 4f       	sbci	r31, 0xFF	; 255
    1bfe:	80 81       	ld	r24, Z
    1c00:	91 81       	ldd	r25, Z+1	; 0x01
    1c02:	11 96       	adiw	r26, 0x01	; 1
    1c04:	9c 93       	st	X, r25
    1c06:	8e 93       	st	-X, r24
    1c08:	fe 01       	movw	r30, r28
    1c0a:	e9 5b       	subi	r30, 0xB9	; 185
    1c0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c0e:	80 81       	ld	r24, Z
    1c10:	91 81       	ldd	r25, Z+1	; 0x01
    1c12:	01 97       	sbiw	r24, 0x01	; 1
    1c14:	f1 f7       	brne	.-4      	; 0x1c12 <main+0xb92>
    1c16:	fe 01       	movw	r30, r28
    1c18:	e9 5b       	subi	r30, 0xB9	; 185
    1c1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c1c:	91 83       	std	Z+1, r25	; 0x01
    1c1e:	80 83       	st	Z, r24
                    _delay_ms(2000);
                    stand = 5;
    1c20:	fe 01       	movw	r30, r28
    1c22:	e3 59       	subi	r30, 0x93	; 147
    1c24:	ff 4f       	sbci	r31, 0xFF	; 255
    1c26:	85 e0       	ldi	r24, 0x05	; 5
    1c28:	90 e0       	ldi	r25, 0x00	; 0
    1c2a:	91 83       	std	Z+1, r25	; 0x01
    1c2c:	80 83       	st	Z, r24
    1c2e:	f1 c4       	rjmp	.+2530   	; 0x2612 <__stack+0x413>
                    break;
                case 5:
                    Slagbomendicht(1);
    1c30:	81 e0       	ldi	r24, 0x01	; 1
    1c32:	90 e0       	ldi	r25, 0x00	; 0
    1c34:	0e 94 a8 07 	call	0xf50	; 0xf50 <Slagbomendicht>
                    Verlichtingbrugopent1Aan(1);
    1c38:	81 e0       	ldi	r24, 0x01	; 1
    1c3a:	90 e0       	ldi	r25, 0x00	; 0
    1c3c:	0e 94 20 02 	call	0x440	; 0x440 <Verlichtingbrugopent1Aan>
                    waarschuwingslichtenAan(1);
    1c40:	81 e0       	ldi	r24, 0x01	; 1
    1c42:	90 e0       	ldi	r25, 0x00	; 0
    1c44:	0e 94 62 06 	call	0xcc4	; 0xcc4 <waarschuwingslichtenAan>
                    LedsbedieningpaneelRoodDichtAan(1);
    1c48:	81 e0       	ldi	r24, 0x01	; 1
    1c4a:	90 e0       	ldi	r25, 0x00	; 0
    1c4c:	0e 94 36 05 	call	0xa6c	; 0xa6c <LedsbedieningpaneelRoodDichtAan>
                    LedsbedieningpaneelRoodDichtUit(0);
    1c50:	80 e0       	ldi	r24, 0x00	; 0
    1c52:	90 e0       	ldi	r25, 0x00	; 0
    1c54:	0e 94 4f 05 	call	0xa9e	; 0xa9e <LedsbedieningpaneelRoodDichtUit>
                    LedsbedieningpaneelBlauwOpenenAan(0);
    1c58:	80 e0       	ldi	r24, 0x00	; 0
    1c5a:	90 e0       	ldi	r25, 0x00	; 0
    1c5c:	0e 94 68 05 	call	0xad0	; 0xad0 <LedsbedieningpaneelBlauwOpenenAan>
                    LedsbedieningpaneelBlauwOpenenUit(1);
    1c60:	81 e0       	ldi	r24, 0x01	; 1
    1c62:	90 e0       	ldi	r25, 0x00	; 0
    1c64:	0e 94 81 05 	call	0xb02	; 0xb02 <LedsbedieningpaneelBlauwOpenenUit>
                    LedsbedieningpaneelBlauwSluitenAan(1);
    1c68:	81 e0       	ldi	r24, 0x01	; 1
    1c6a:	90 e0       	ldi	r25, 0x00	; 0
    1c6c:	0e 94 9a 05 	call	0xb34	; 0xb34 <LedsbedieningpaneelBlauwSluitenAan>
                    LedsbedieningpaneelBlauwSluitenUit(0);
    1c70:	80 e0       	ldi	r24, 0x00	; 0
    1c72:	90 e0       	ldi	r25, 0x00	; 0
    1c74:	0e 94 b3 05 	call	0xb66	; 0xb66 <LedsbedieningpaneelBlauwSluitenUit>
                    LedsbedieningpaneelRoodOpenAan(0);
    1c78:	80 e0       	ldi	r24, 0x00	; 0
    1c7a:	90 e0       	ldi	r25, 0x00	; 0
    1c7c:	0e 94 04 05 	call	0xa08	; 0xa08 <LedsbedieningpaneelRoodOpenAan>
                    LedsbedieningpaneelRoodOpenUit(1);
    1c80:	81 e0       	ldi	r24, 0x01	; 1
    1c82:	90 e0       	ldi	r25, 0x00	; 0
    1c84:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LedsbedieningpaneelRoodOpenUit>
                    LedsbedieningpaneelGeelPersoonAan(0);
    1c88:	80 e0       	ldi	r24, 0x00	; 0
    1c8a:	90 e0       	ldi	r25, 0x00	; 0
    1c8c:	0e 94 fe 05 	call	0xbfc	; 0xbfc <LedsbedieningpaneelGeelPersoonAan>
                    LedsbedieningpaneelGeelPersoonUit(1);
    1c90:	81 e0       	ldi	r24, 0x01	; 1
    1c92:	90 e0       	ldi	r25, 0x00	; 0
    1c94:	0e 94 17 06 	call	0xc2e	; 0xc2e <LedsbedieningpaneelGeelPersoonUit>
                    LedsbedieningpaneelNoodstopUit(0);
    1c98:	80 e0       	ldi	r24, 0x00	; 0
    1c9a:	90 e0       	ldi	r25, 0x00	; 0
    1c9c:	0e 94 49 06 	call	0xc92	; 0xc92 <LedsbedieningpaneelNoodstopUit>
                    LedsbedieningpaneelNoodstopAan(1);
    1ca0:	81 e0       	ldi	r24, 0x01	; 1
    1ca2:	90 e0       	ldi	r25, 0x00	; 0
    1ca4:	0e 94 30 06 	call	0xc60	; 0xc60 <LedsbedieningpaneelNoodstopAan>
                    LedsbedieningpaneelGeelBootAan(1);
    1ca8:	81 e0       	ldi	r24, 0x01	; 1
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	0e 94 cc 05 	call	0xb98	; 0xb98 <LedsbedieningpaneelGeelBootAan>
                    LedsbedieningpaneelGeelBootUit(0);
    1cb0:	80 e0       	ldi	r24, 0x00	; 0
    1cb2:	90 e0       	ldi	r25, 0x00	; 0
    1cb4:	0e 94 e5 05 	call	0xbca	; 0xbca <LedsbedieningpaneelGeelBootUit>
                    stand = 6;
    1cb8:	fe 01       	movw	r30, r28
    1cba:	e3 59       	subi	r30, 0x93	; 147
    1cbc:	ff 4f       	sbci	r31, 0xFF	; 255
    1cbe:	86 e0       	ldi	r24, 0x06	; 6
    1cc0:	90 e0       	ldi	r25, 0x00	; 0
    1cc2:	91 83       	std	Z+1, r25	; 0x01
    1cc4:	80 83       	st	Z, r24
    1cc6:	a5 c4       	rjmp	.+2378   	; 0x2612 <__stack+0x413>
                    break;
                case 6:
                    Slagbomendicht(1);
    1cc8:	81 e0       	ldi	r24, 0x01	; 1
    1cca:	90 e0       	ldi	r25, 0x00	; 0
    1ccc:	0e 94 a8 07 	call	0xf50	; 0xf50 <Slagbomendicht>
                    Verlichtingbrugopent1Aan(1);
    1cd0:	81 e0       	ldi	r24, 0x01	; 1
    1cd2:	90 e0       	ldi	r25, 0x00	; 0
    1cd4:	0e 94 20 02 	call	0x440	; 0x440 <Verlichtingbrugopent1Aan>
                    waarschuwingslichtenAan(1);
    1cd8:	81 e0       	ldi	r24, 0x01	; 1
    1cda:	90 e0       	ldi	r25, 0x00	; 0
    1cdc:	0e 94 62 06 	call	0xcc4	; 0xcc4 <waarschuwingslichtenAan>
                    LedsbedieningpaneelRoodDichtAan(1);
    1ce0:	81 e0       	ldi	r24, 0x01	; 1
    1ce2:	90 e0       	ldi	r25, 0x00	; 0
    1ce4:	0e 94 36 05 	call	0xa6c	; 0xa6c <LedsbedieningpaneelRoodDichtAan>
                    LedsbedieningpaneelRoodDichtUit(0);
    1ce8:	80 e0       	ldi	r24, 0x00	; 0
    1cea:	90 e0       	ldi	r25, 0x00	; 0
    1cec:	0e 94 4f 05 	call	0xa9e	; 0xa9e <LedsbedieningpaneelRoodDichtUit>
                    LedsbedieningpaneelBlauwOpenenAan(0);
    1cf0:	80 e0       	ldi	r24, 0x00	; 0
    1cf2:	90 e0       	ldi	r25, 0x00	; 0
    1cf4:	0e 94 68 05 	call	0xad0	; 0xad0 <LedsbedieningpaneelBlauwOpenenAan>
                    LedsbedieningpaneelBlauwOpenenUit(1);
    1cf8:	81 e0       	ldi	r24, 0x01	; 1
    1cfa:	90 e0       	ldi	r25, 0x00	; 0
    1cfc:	0e 94 81 05 	call	0xb02	; 0xb02 <LedsbedieningpaneelBlauwOpenenUit>
                    LedsbedieningpaneelBlauwSluitenAan(1);
    1d00:	81 e0       	ldi	r24, 0x01	; 1
    1d02:	90 e0       	ldi	r25, 0x00	; 0
    1d04:	0e 94 9a 05 	call	0xb34	; 0xb34 <LedsbedieningpaneelBlauwSluitenAan>
                    LedsbedieningpaneelBlauwSluitenUit(0);
    1d08:	80 e0       	ldi	r24, 0x00	; 0
    1d0a:	90 e0       	ldi	r25, 0x00	; 0
    1d0c:	0e 94 b3 05 	call	0xb66	; 0xb66 <LedsbedieningpaneelBlauwSluitenUit>
                    LedsbedieningpaneelRoodOpenAan(0);
    1d10:	80 e0       	ldi	r24, 0x00	; 0
    1d12:	90 e0       	ldi	r25, 0x00	; 0
    1d14:	0e 94 04 05 	call	0xa08	; 0xa08 <LedsbedieningpaneelRoodOpenAan>
                    LedsbedieningpaneelRoodOpenUit(1);
    1d18:	81 e0       	ldi	r24, 0x01	; 1
    1d1a:	90 e0       	ldi	r25, 0x00	; 0
    1d1c:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LedsbedieningpaneelRoodOpenUit>
                    LedsbedieningpaneelGeelPersoonAan(0);
    1d20:	80 e0       	ldi	r24, 0x00	; 0
    1d22:	90 e0       	ldi	r25, 0x00	; 0
    1d24:	0e 94 fe 05 	call	0xbfc	; 0xbfc <LedsbedieningpaneelGeelPersoonAan>
                    LedsbedieningpaneelGeelPersoonUit(1);
    1d28:	81 e0       	ldi	r24, 0x01	; 1
    1d2a:	90 e0       	ldi	r25, 0x00	; 0
    1d2c:	0e 94 17 06 	call	0xc2e	; 0xc2e <LedsbedieningpaneelGeelPersoonUit>
                    LedsbedieningpaneelNoodstopUit(0);
    1d30:	80 e0       	ldi	r24, 0x00	; 0
    1d32:	90 e0       	ldi	r25, 0x00	; 0
    1d34:	0e 94 49 06 	call	0xc92	; 0xc92 <LedsbedieningpaneelNoodstopUit>
                    LedsbedieningpaneelNoodstopAan(1);
    1d38:	81 e0       	ldi	r24, 0x01	; 1
    1d3a:	90 e0       	ldi	r25, 0x00	; 0
    1d3c:	0e 94 30 06 	call	0xc60	; 0xc60 <LedsbedieningpaneelNoodstopAan>
                    LedsbedieningpaneelGeelBootAan(1);
    1d40:	81 e0       	ldi	r24, 0x01	; 1
    1d42:	90 e0       	ldi	r25, 0x00	; 0
    1d44:	0e 94 cc 05 	call	0xb98	; 0xb98 <LedsbedieningpaneelGeelBootAan>
                    LedsbedieningpaneelGeelBootUit(0);
    1d48:	80 e0       	ldi	r24, 0x00	; 0
    1d4a:	90 e0       	ldi	r25, 0x00	; 0
    1d4c:	0e 94 e5 05 	call	0xbca	; 0xbca <LedsbedieningpaneelGeelBootUit>
                        if (EindOpen == 0)
    1d50:	fe 01       	movw	r30, r28
    1d52:	ef 58       	subi	r30, 0x8F	; 143
    1d54:	ff 4f       	sbci	r31, 0xFF	; 255
    1d56:	80 81       	ld	r24, Z
    1d58:	91 81       	ldd	r25, Z+1	; 0x01
    1d5a:	00 97       	sbiw	r24, 0x00	; 0
    1d5c:	51 f4       	brne	.+20     	; 0x1d72 <main+0xcf2>
                        {
                            Motoruit();
    1d5e:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <Motoruit>
                            stand = 7;
    1d62:	fe 01       	movw	r30, r28
    1d64:	e3 59       	subi	r30, 0x93	; 147
    1d66:	ff 4f       	sbci	r31, 0xFF	; 255
    1d68:	87 e0       	ldi	r24, 0x07	; 7
    1d6a:	90 e0       	ldi	r25, 0x00	; 0
    1d6c:	91 83       	std	Z+1, r25	; 0x01
    1d6e:	80 83       	st	Z, r24
    1d70:	50 c4       	rjmp	.+2208   	; 0x2612 <__stack+0x413>
                        }
                        else
                        {
                            Brugomlaag();
    1d72:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <Brugomlaag>
    1d76:	fe 01       	movw	r30, r28
    1d78:	ed 5b       	subi	r30, 0xBD	; 189
    1d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d7c:	80 e0       	ldi	r24, 0x00	; 0
    1d7e:	90 ec       	ldi	r25, 0xC0	; 192
    1d80:	af e0       	ldi	r26, 0x0F	; 15
    1d82:	b5 e4       	ldi	r27, 0x45	; 69
    1d84:	80 83       	st	Z, r24
    1d86:	91 83       	std	Z+1, r25	; 0x01
    1d88:	a2 83       	std	Z+2, r26	; 0x02
    1d8a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d8c:	8e 01       	movw	r16, r28
    1d8e:	01 5c       	subi	r16, 0xC1	; 193
    1d90:	1f 4f       	sbci	r17, 0xFF	; 255
    1d92:	fe 01       	movw	r30, r28
    1d94:	ed 5b       	subi	r30, 0xBD	; 189
    1d96:	ff 4f       	sbci	r31, 0xFF	; 255
    1d98:	60 81       	ld	r22, Z
    1d9a:	71 81       	ldd	r23, Z+1	; 0x01
    1d9c:	82 81       	ldd	r24, Z+2	; 0x02
    1d9e:	93 81       	ldd	r25, Z+3	; 0x03
    1da0:	20 e0       	ldi	r18, 0x00	; 0
    1da2:	30 e0       	ldi	r19, 0x00	; 0
    1da4:	4a e7       	ldi	r20, 0x7A	; 122
    1da6:	55 e4       	ldi	r21, 0x45	; 69
    1da8:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    1dac:	dc 01       	movw	r26, r24
    1dae:	cb 01       	movw	r24, r22
    1db0:	f8 01       	movw	r30, r16
    1db2:	80 83       	st	Z, r24
    1db4:	91 83       	std	Z+1, r25	; 0x01
    1db6:	a2 83       	std	Z+2, r26	; 0x02
    1db8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1dba:	fe 01       	movw	r30, r28
    1dbc:	ff 96       	adiw	r30, 0x3f	; 63
    1dbe:	60 81       	ld	r22, Z
    1dc0:	71 81       	ldd	r23, Z+1	; 0x01
    1dc2:	82 81       	ldd	r24, Z+2	; 0x02
    1dc4:	93 81       	ldd	r25, Z+3	; 0x03
    1dc6:	20 e0       	ldi	r18, 0x00	; 0
    1dc8:	30 e0       	ldi	r19, 0x00	; 0
    1dca:	40 e8       	ldi	r20, 0x80	; 128
    1dcc:	5f e3       	ldi	r21, 0x3F	; 63
    1dce:	0e 94 2c 15 	call	0x2a58	; 0x2a58 <__cmpsf2>
    1dd2:	88 23       	and	r24, r24
    1dd4:	2c f4       	brge	.+10     	; 0x1de0 <main+0xd60>
		__ticks = 1;
    1dd6:	81 e0       	ldi	r24, 0x01	; 1
    1dd8:	90 e0       	ldi	r25, 0x00	; 0
    1dda:	9e af       	std	Y+62, r25	; 0x3e
    1ddc:	8d af       	std	Y+61, r24	; 0x3d
    1dde:	46 c0       	rjmp	.+140    	; 0x1e6c <main+0xdec>
	else if (__tmp > 65535)
    1de0:	fe 01       	movw	r30, r28
    1de2:	ff 96       	adiw	r30, 0x3f	; 63
    1de4:	60 81       	ld	r22, Z
    1de6:	71 81       	ldd	r23, Z+1	; 0x01
    1de8:	82 81       	ldd	r24, Z+2	; 0x02
    1dea:	93 81       	ldd	r25, Z+3	; 0x03
    1dec:	20 e0       	ldi	r18, 0x00	; 0
    1dee:	3f ef       	ldi	r19, 0xFF	; 255
    1df0:	4f e7       	ldi	r20, 0x7F	; 127
    1df2:	57 e4       	ldi	r21, 0x47	; 71
    1df4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__gesf2>
    1df8:	18 16       	cp	r1, r24
    1dfa:	64 f5       	brge	.+88     	; 0x1e54 <main+0xdd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dfc:	fe 01       	movw	r30, r28
    1dfe:	ed 5b       	subi	r30, 0xBD	; 189
    1e00:	ff 4f       	sbci	r31, 0xFF	; 255
    1e02:	60 81       	ld	r22, Z
    1e04:	71 81       	ldd	r23, Z+1	; 0x01
    1e06:	82 81       	ldd	r24, Z+2	; 0x02
    1e08:	93 81       	ldd	r25, Z+3	; 0x03
    1e0a:	20 e0       	ldi	r18, 0x00	; 0
    1e0c:	30 e0       	ldi	r19, 0x00	; 0
    1e0e:	40 e2       	ldi	r20, 0x20	; 32
    1e10:	51 e4       	ldi	r21, 0x41	; 65
    1e12:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    1e16:	dc 01       	movw	r26, r24
    1e18:	cb 01       	movw	r24, r22
    1e1a:	bc 01       	movw	r22, r24
    1e1c:	cd 01       	movw	r24, r26
    1e1e:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    1e22:	dc 01       	movw	r26, r24
    1e24:	cb 01       	movw	r24, r22
    1e26:	9e af       	std	Y+62, r25	; 0x3e
    1e28:	8d af       	std	Y+61, r24	; 0x3d
    1e2a:	0f c0       	rjmp	.+30     	; 0x1e4a <main+0xdca>
    1e2c:	80 e9       	ldi	r24, 0x90	; 144
    1e2e:	91 e0       	ldi	r25, 0x01	; 1
    1e30:	9c af       	std	Y+60, r25	; 0x3c
    1e32:	8b af       	std	Y+59, r24	; 0x3b
    1e34:	8b ad       	ldd	r24, Y+59	; 0x3b
    1e36:	9c ad       	ldd	r25, Y+60	; 0x3c
    1e38:	01 97       	sbiw	r24, 0x01	; 1
    1e3a:	f1 f7       	brne	.-4      	; 0x1e38 <main+0xdb8>
    1e3c:	9c af       	std	Y+60, r25	; 0x3c
    1e3e:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e40:	8d ad       	ldd	r24, Y+61	; 0x3d
    1e42:	9e ad       	ldd	r25, Y+62	; 0x3e
    1e44:	01 97       	sbiw	r24, 0x01	; 1
    1e46:	9e af       	std	Y+62, r25	; 0x3e
    1e48:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e4a:	8d ad       	ldd	r24, Y+61	; 0x3d
    1e4c:	9e ad       	ldd	r25, Y+62	; 0x3e
    1e4e:	00 97       	sbiw	r24, 0x00	; 0
    1e50:	69 f7       	brne	.-38     	; 0x1e2c <main+0xdac>
    1e52:	16 c0       	rjmp	.+44     	; 0x1e80 <main+0xe00>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e54:	fe 01       	movw	r30, r28
    1e56:	ff 96       	adiw	r30, 0x3f	; 63
    1e58:	60 81       	ld	r22, Z
    1e5a:	71 81       	ldd	r23, Z+1	; 0x01
    1e5c:	82 81       	ldd	r24, Z+2	; 0x02
    1e5e:	93 81       	ldd	r25, Z+3	; 0x03
    1e60:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    1e64:	dc 01       	movw	r26, r24
    1e66:	cb 01       	movw	r24, r22
    1e68:	9e af       	std	Y+62, r25	; 0x3e
    1e6a:	8d af       	std	Y+61, r24	; 0x3d
    1e6c:	8d ad       	ldd	r24, Y+61	; 0x3d
    1e6e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1e70:	9a af       	std	Y+58, r25	; 0x3a
    1e72:	89 af       	std	Y+57, r24	; 0x39
    1e74:	89 ad       	ldd	r24, Y+57	; 0x39
    1e76:	9a ad       	ldd	r25, Y+58	; 0x3a
    1e78:	01 97       	sbiw	r24, 0x01	; 1
    1e7a:	f1 f7       	brne	.-4      	; 0x1e78 <main+0xdf8>
    1e7c:	9a af       	std	Y+58, r25	; 0x3a
    1e7e:	89 af       	std	Y+57, r24	; 0x39
                            _delay_ms(2300);
                            Motoruit();
    1e80:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <Motoruit>
                            stand = 7;
    1e84:	fe 01       	movw	r30, r28
    1e86:	e3 59       	subi	r30, 0x93	; 147
    1e88:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8a:	87 e0       	ldi	r24, 0x07	; 7
    1e8c:	90 e0       	ldi	r25, 0x00	; 0
    1e8e:	91 83       	std	Z+1, r25	; 0x01
    1e90:	80 83       	st	Z, r24
    1e92:	bf c3       	rjmp	.+1918   	; 0x2612 <__stack+0x413>
                        }
                    break;
                case 7:
                    Slagbomendicht(1);
    1e94:	81 e0       	ldi	r24, 0x01	; 1
    1e96:	90 e0       	ldi	r25, 0x00	; 0
    1e98:	0e 94 a8 07 	call	0xf50	; 0xf50 <Slagbomendicht>
                    Verlichtingbrugopen1Aan(1);
    1e9c:	81 e0       	ldi	r24, 0x01	; 1
    1e9e:	90 e0       	ldi	r25, 0x00	; 0
    1ea0:	0e 94 48 03 	call	0x690	; 0x690 <Verlichtingbrugopen1Aan>
                    waarschuwingslichtenAan(1);
    1ea4:	81 e0       	ldi	r24, 0x01	; 1
    1ea6:	90 e0       	ldi	r25, 0x00	; 0
    1ea8:	0e 94 62 06 	call	0xcc4	; 0xcc4 <waarschuwingslichtenAan>
                    LedsbedieningpaneelRoodDichtAan(0);
    1eac:	80 e0       	ldi	r24, 0x00	; 0
    1eae:	90 e0       	ldi	r25, 0x00	; 0
    1eb0:	0e 94 36 05 	call	0xa6c	; 0xa6c <LedsbedieningpaneelRoodDichtAan>
                    LedsbedieningpaneelRoodDichtUit(1);
    1eb4:	81 e0       	ldi	r24, 0x01	; 1
    1eb6:	90 e0       	ldi	r25, 0x00	; 0
    1eb8:	0e 94 4f 05 	call	0xa9e	; 0xa9e <LedsbedieningpaneelRoodDichtUit>
                    LedsbedieningpaneelBlauwOpenenAan(0);
    1ebc:	80 e0       	ldi	r24, 0x00	; 0
    1ebe:	90 e0       	ldi	r25, 0x00	; 0
    1ec0:	0e 94 68 05 	call	0xad0	; 0xad0 <LedsbedieningpaneelBlauwOpenenAan>
                    LedsbedieningpaneelBlauwOpenenUit(1);
    1ec4:	81 e0       	ldi	r24, 0x01	; 1
    1ec6:	90 e0       	ldi	r25, 0x00	; 0
    1ec8:	0e 94 81 05 	call	0xb02	; 0xb02 <LedsbedieningpaneelBlauwOpenenUit>
                    LedsbedieningpaneelBlauwSluitenAan(1);
    1ecc:	81 e0       	ldi	r24, 0x01	; 1
    1ece:	90 e0       	ldi	r25, 0x00	; 0
    1ed0:	0e 94 9a 05 	call	0xb34	; 0xb34 <LedsbedieningpaneelBlauwSluitenAan>
                    LedsbedieningpaneelBlauwSluitenUit(0);
    1ed4:	80 e0       	ldi	r24, 0x00	; 0
    1ed6:	90 e0       	ldi	r25, 0x00	; 0
    1ed8:	0e 94 b3 05 	call	0xb66	; 0xb66 <LedsbedieningpaneelBlauwSluitenUit>
                    LedsbedieningpaneelRoodOpenAan(1);
    1edc:	81 e0       	ldi	r24, 0x01	; 1
    1ede:	90 e0       	ldi	r25, 0x00	; 0
    1ee0:	0e 94 04 05 	call	0xa08	; 0xa08 <LedsbedieningpaneelRoodOpenAan>
                    LedsbedieningpaneelRoodOpenUit(0);
    1ee4:	80 e0       	ldi	r24, 0x00	; 0
    1ee6:	90 e0       	ldi	r25, 0x00	; 0
    1ee8:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LedsbedieningpaneelRoodOpenUit>
                    LedsbedieningpaneelGeelPersoonAan(0);
    1eec:	80 e0       	ldi	r24, 0x00	; 0
    1eee:	90 e0       	ldi	r25, 0x00	; 0
    1ef0:	0e 94 fe 05 	call	0xbfc	; 0xbfc <LedsbedieningpaneelGeelPersoonAan>
                    LedsbedieningpaneelGeelPersoonUit(1);
    1ef4:	81 e0       	ldi	r24, 0x01	; 1
    1ef6:	90 e0       	ldi	r25, 0x00	; 0
    1ef8:	0e 94 17 06 	call	0xc2e	; 0xc2e <LedsbedieningpaneelGeelPersoonUit>
                    LedsbedieningpaneelNoodstopUit(0);
    1efc:	80 e0       	ldi	r24, 0x00	; 0
    1efe:	90 e0       	ldi	r25, 0x00	; 0
    1f00:	0e 94 49 06 	call	0xc92	; 0xc92 <LedsbedieningpaneelNoodstopUit>
                    LedsbedieningpaneelNoodstopAan(1);
    1f04:	81 e0       	ldi	r24, 0x01	; 1
    1f06:	90 e0       	ldi	r25, 0x00	; 0
    1f08:	0e 94 30 06 	call	0xc60	; 0xc60 <LedsbedieningpaneelNoodstopAan>
                    LedsbedieningpaneelGeelBootAan(1);
    1f0c:	81 e0       	ldi	r24, 0x01	; 1
    1f0e:	90 e0       	ldi	r25, 0x00	; 0
    1f10:	0e 94 cc 05 	call	0xb98	; 0xb98 <LedsbedieningpaneelGeelBootAan>
                    LedsbedieningpaneelGeelBootUit(0);
    1f14:	80 e0       	ldi	r24, 0x00	; 0
    1f16:	90 e0       	ldi	r25, 0x00	; 0
    1f18:	0e 94 e5 05 	call	0xbca	; 0xbca <LedsbedieningpaneelGeelBootUit>
                    if ((ultrasoonboot1 == 0) && (ultrasoonboot2 == 1))
    1f1c:	fe 01       	movw	r30, r28
    1f1e:	e5 59       	subi	r30, 0x95	; 149
    1f20:	ff 4f       	sbci	r31, 0xFF	; 255
    1f22:	80 81       	ld	r24, Z
    1f24:	91 81       	ldd	r25, Z+1	; 0x01
    1f26:	00 97       	sbiw	r24, 0x00	; 0
    1f28:	81 f4       	brne	.+32     	; 0x1f4a <main+0xeca>
    1f2a:	fe 01       	movw	r30, r28
    1f2c:	e7 59       	subi	r30, 0x97	; 151
    1f2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f30:	80 81       	ld	r24, Z
    1f32:	91 81       	ldd	r25, Z+1	; 0x01
    1f34:	81 30       	cpi	r24, 0x01	; 1
    1f36:	91 05       	cpc	r25, r1
    1f38:	41 f4       	brne	.+16     	; 0x1f4a <main+0xeca>
                    {
                        stand = 8;
    1f3a:	fe 01       	movw	r30, r28
    1f3c:	e3 59       	subi	r30, 0x93	; 147
    1f3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f40:	88 e0       	ldi	r24, 0x08	; 8
    1f42:	90 e0       	ldi	r25, 0x00	; 0
    1f44:	91 83       	std	Z+1, r25	; 0x01
    1f46:	80 83       	st	Z, r24
    1f48:	64 c3       	rjmp	.+1736   	; 0x2612 <__stack+0x413>
                    }
                    else
                    {
                        stand = 7;
    1f4a:	fe 01       	movw	r30, r28
    1f4c:	e3 59       	subi	r30, 0x93	; 147
    1f4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f50:	87 e0       	ldi	r24, 0x07	; 7
    1f52:	90 e0       	ldi	r25, 0x00	; 0
    1f54:	91 83       	std	Z+1, r25	; 0x01
    1f56:	80 83       	st	Z, r24
    1f58:	5c c3       	rjmp	.+1720   	; 0x2612 <__stack+0x413>
                    }
                    break;
                case 8:
                    Slagbomendicht(1);
    1f5a:	81 e0       	ldi	r24, 0x01	; 1
    1f5c:	90 e0       	ldi	r25, 0x00	; 0
    1f5e:	0e 94 a8 07 	call	0xf50	; 0xf50 <Slagbomendicht>
                    Verlichtingbrugopen1Aan(1);
    1f62:	81 e0       	ldi	r24, 0x01	; 1
    1f64:	90 e0       	ldi	r25, 0x00	; 0
    1f66:	0e 94 48 03 	call	0x690	; 0x690 <Verlichtingbrugopen1Aan>
                    waarschuwingslichtenAan(1);
    1f6a:	81 e0       	ldi	r24, 0x01	; 1
    1f6c:	90 e0       	ldi	r25, 0x00	; 0
    1f6e:	0e 94 62 06 	call	0xcc4	; 0xcc4 <waarschuwingslichtenAan>
                    LedsbedieningpaneelRoodDichtAan(0);
    1f72:	80 e0       	ldi	r24, 0x00	; 0
    1f74:	90 e0       	ldi	r25, 0x00	; 0
    1f76:	0e 94 36 05 	call	0xa6c	; 0xa6c <LedsbedieningpaneelRoodDichtAan>
                    LedsbedieningpaneelRoodDichtUit(1);
    1f7a:	81 e0       	ldi	r24, 0x01	; 1
    1f7c:	90 e0       	ldi	r25, 0x00	; 0
    1f7e:	0e 94 4f 05 	call	0xa9e	; 0xa9e <LedsbedieningpaneelRoodDichtUit>
                    LedsbedieningpaneelBlauwOpenenAan(0);
    1f82:	80 e0       	ldi	r24, 0x00	; 0
    1f84:	90 e0       	ldi	r25, 0x00	; 0
    1f86:	0e 94 68 05 	call	0xad0	; 0xad0 <LedsbedieningpaneelBlauwOpenenAan>
                    LedsbedieningpaneelBlauwOpenenUit(1);
    1f8a:	81 e0       	ldi	r24, 0x01	; 1
    1f8c:	90 e0       	ldi	r25, 0x00	; 0
    1f8e:	0e 94 81 05 	call	0xb02	; 0xb02 <LedsbedieningpaneelBlauwOpenenUit>
                    LedsbedieningpaneelBlauwSluitenAan(0);
    1f92:	80 e0       	ldi	r24, 0x00	; 0
    1f94:	90 e0       	ldi	r25, 0x00	; 0
    1f96:	0e 94 9a 05 	call	0xb34	; 0xb34 <LedsbedieningpaneelBlauwSluitenAan>
                    LedsbedieningpaneelBlauwSluitenUit(1);
    1f9a:	81 e0       	ldi	r24, 0x01	; 1
    1f9c:	90 e0       	ldi	r25, 0x00	; 0
    1f9e:	0e 94 b3 05 	call	0xb66	; 0xb66 <LedsbedieningpaneelBlauwSluitenUit>
                    LedsbedieningpaneelRoodOpenAan(1);
    1fa2:	81 e0       	ldi	r24, 0x01	; 1
    1fa4:	90 e0       	ldi	r25, 0x00	; 0
    1fa6:	0e 94 04 05 	call	0xa08	; 0xa08 <LedsbedieningpaneelRoodOpenAan>
                    LedsbedieningpaneelRoodOpenUit(0);
    1faa:	80 e0       	ldi	r24, 0x00	; 0
    1fac:	90 e0       	ldi	r25, 0x00	; 0
    1fae:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LedsbedieningpaneelRoodOpenUit>
                    LedsbedieningpaneelGeelPersoonAan(0);
    1fb2:	80 e0       	ldi	r24, 0x00	; 0
    1fb4:	90 e0       	ldi	r25, 0x00	; 0
    1fb6:	0e 94 fe 05 	call	0xbfc	; 0xbfc <LedsbedieningpaneelGeelPersoonAan>
                    LedsbedieningpaneelGeelPersoonUit(1);
    1fba:	81 e0       	ldi	r24, 0x01	; 1
    1fbc:	90 e0       	ldi	r25, 0x00	; 0
    1fbe:	0e 94 17 06 	call	0xc2e	; 0xc2e <LedsbedieningpaneelGeelPersoonUit>
                    LedsbedieningpaneelNoodstopUit(0);
    1fc2:	80 e0       	ldi	r24, 0x00	; 0
    1fc4:	90 e0       	ldi	r25, 0x00	; 0
    1fc6:	0e 94 49 06 	call	0xc92	; 0xc92 <LedsbedieningpaneelNoodstopUit>
                    LedsbedieningpaneelNoodstopAan(1);
    1fca:	81 e0       	ldi	r24, 0x01	; 1
    1fcc:	90 e0       	ldi	r25, 0x00	; 0
    1fce:	0e 94 30 06 	call	0xc60	; 0xc60 <LedsbedieningpaneelNoodstopAan>
                    LedsbedieningpaneelGeelBootAan(0);
    1fd2:	80 e0       	ldi	r24, 0x00	; 0
    1fd4:	90 e0       	ldi	r25, 0x00	; 0
    1fd6:	0e 94 cc 05 	call	0xb98	; 0xb98 <LedsbedieningpaneelGeelBootAan>
                    LedsbedieningpaneelGeelBootUit(1);
    1fda:	81 e0       	ldi	r24, 0x01	; 1
    1fdc:	90 e0       	ldi	r25, 0x00	; 0
    1fde:	0e 94 e5 05 	call	0xbca	; 0xbca <LedsbedieningpaneelGeelBootUit>
                        if (KnopDicht == 1)
    1fe2:	fe 01       	movw	r30, r28
    1fe4:	eb 58       	subi	r30, 0x8B	; 139
    1fe6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe8:	80 81       	ld	r24, Z
    1fea:	91 81       	ldd	r25, Z+1	; 0x01
    1fec:	81 30       	cpi	r24, 0x01	; 1
    1fee:	91 05       	cpc	r25, r1
    1ff0:	09 f0       	breq	.+2      	; 0x1ff4 <main+0xf74>
    1ff2:	82 c0       	rjmp	.+260    	; 0x20f8 <main+0x1078>
                        {
                            Slagbomendicht(1);
    1ff4:	81 e0       	ldi	r24, 0x01	; 1
    1ff6:	90 e0       	ldi	r25, 0x00	; 0
    1ff8:	0e 94 a8 07 	call	0xf50	; 0xf50 <Slagbomendicht>
                            LedsbedieningpaneelBlauwOpenenAan(1);
    1ffc:	81 e0       	ldi	r24, 0x01	; 1
    1ffe:	90 e0       	ldi	r25, 0x00	; 0
    2000:	0e 94 68 05 	call	0xad0	; 0xad0 <LedsbedieningpaneelBlauwOpenenAan>
    2004:	80 e0       	ldi	r24, 0x00	; 0
    2006:	90 e8       	ldi	r25, 0x80	; 128
    2008:	ab e3       	ldi	r26, 0x3B	; 59
    200a:	b5 e4       	ldi	r27, 0x45	; 69
    200c:	8d ab       	std	Y+53, r24	; 0x35
    200e:	9e ab       	std	Y+54, r25	; 0x36
    2010:	af ab       	std	Y+55, r26	; 0x37
    2012:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2014:	6d a9       	ldd	r22, Y+53	; 0x35
    2016:	7e a9       	ldd	r23, Y+54	; 0x36
    2018:	8f a9       	ldd	r24, Y+55	; 0x37
    201a:	98 ad       	ldd	r25, Y+56	; 0x38
    201c:	20 e0       	ldi	r18, 0x00	; 0
    201e:	30 e0       	ldi	r19, 0x00	; 0
    2020:	4a e7       	ldi	r20, 0x7A	; 122
    2022:	55 e4       	ldi	r21, 0x45	; 69
    2024:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    2028:	dc 01       	movw	r26, r24
    202a:	cb 01       	movw	r24, r22
    202c:	89 ab       	std	Y+49, r24	; 0x31
    202e:	9a ab       	std	Y+50, r25	; 0x32
    2030:	ab ab       	std	Y+51, r26	; 0x33
    2032:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2034:	69 a9       	ldd	r22, Y+49	; 0x31
    2036:	7a a9       	ldd	r23, Y+50	; 0x32
    2038:	8b a9       	ldd	r24, Y+51	; 0x33
    203a:	9c a9       	ldd	r25, Y+52	; 0x34
    203c:	20 e0       	ldi	r18, 0x00	; 0
    203e:	30 e0       	ldi	r19, 0x00	; 0
    2040:	40 e8       	ldi	r20, 0x80	; 128
    2042:	5f e3       	ldi	r21, 0x3F	; 63
    2044:	0e 94 2c 15 	call	0x2a58	; 0x2a58 <__cmpsf2>
    2048:	88 23       	and	r24, r24
    204a:	2c f4       	brge	.+10     	; 0x2056 <main+0xfd6>
		__ticks = 1;
    204c:	81 e0       	ldi	r24, 0x01	; 1
    204e:	90 e0       	ldi	r25, 0x00	; 0
    2050:	98 ab       	std	Y+48, r25	; 0x30
    2052:	8f a7       	std	Y+47, r24	; 0x2f
    2054:	3f c0       	rjmp	.+126    	; 0x20d4 <main+0x1054>
	else if (__tmp > 65535)
    2056:	69 a9       	ldd	r22, Y+49	; 0x31
    2058:	7a a9       	ldd	r23, Y+50	; 0x32
    205a:	8b a9       	ldd	r24, Y+51	; 0x33
    205c:	9c a9       	ldd	r25, Y+52	; 0x34
    205e:	20 e0       	ldi	r18, 0x00	; 0
    2060:	3f ef       	ldi	r19, 0xFF	; 255
    2062:	4f e7       	ldi	r20, 0x7F	; 127
    2064:	57 e4       	ldi	r21, 0x47	; 71
    2066:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__gesf2>
    206a:	18 16       	cp	r1, r24
    206c:	4c f5       	brge	.+82     	; 0x20c0 <main+0x1040>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    206e:	6d a9       	ldd	r22, Y+53	; 0x35
    2070:	7e a9       	ldd	r23, Y+54	; 0x36
    2072:	8f a9       	ldd	r24, Y+55	; 0x37
    2074:	98 ad       	ldd	r25, Y+56	; 0x38
    2076:	20 e0       	ldi	r18, 0x00	; 0
    2078:	30 e0       	ldi	r19, 0x00	; 0
    207a:	40 e2       	ldi	r20, 0x20	; 32
    207c:	51 e4       	ldi	r21, 0x41	; 65
    207e:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    2082:	dc 01       	movw	r26, r24
    2084:	cb 01       	movw	r24, r22
    2086:	bc 01       	movw	r22, r24
    2088:	cd 01       	movw	r24, r26
    208a:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    208e:	dc 01       	movw	r26, r24
    2090:	cb 01       	movw	r24, r22
    2092:	98 ab       	std	Y+48, r25	; 0x30
    2094:	8f a7       	std	Y+47, r24	; 0x2f
    2096:	0f c0       	rjmp	.+30     	; 0x20b6 <main+0x1036>
    2098:	80 e9       	ldi	r24, 0x90	; 144
    209a:	91 e0       	ldi	r25, 0x01	; 1
    209c:	9e a7       	std	Y+46, r25	; 0x2e
    209e:	8d a7       	std	Y+45, r24	; 0x2d
    20a0:	8d a5       	ldd	r24, Y+45	; 0x2d
    20a2:	9e a5       	ldd	r25, Y+46	; 0x2e
    20a4:	01 97       	sbiw	r24, 0x01	; 1
    20a6:	f1 f7       	brne	.-4      	; 0x20a4 <main+0x1024>
    20a8:	9e a7       	std	Y+46, r25	; 0x2e
    20aa:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20ac:	8f a5       	ldd	r24, Y+47	; 0x2f
    20ae:	98 a9       	ldd	r25, Y+48	; 0x30
    20b0:	01 97       	sbiw	r24, 0x01	; 1
    20b2:	98 ab       	std	Y+48, r25	; 0x30
    20b4:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20b6:	8f a5       	ldd	r24, Y+47	; 0x2f
    20b8:	98 a9       	ldd	r25, Y+48	; 0x30
    20ba:	00 97       	sbiw	r24, 0x00	; 0
    20bc:	69 f7       	brne	.-38     	; 0x2098 <main+0x1018>
    20be:	14 c0       	rjmp	.+40     	; 0x20e8 <main+0x1068>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20c0:	69 a9       	ldd	r22, Y+49	; 0x31
    20c2:	7a a9       	ldd	r23, Y+50	; 0x32
    20c4:	8b a9       	ldd	r24, Y+51	; 0x33
    20c6:	9c a9       	ldd	r25, Y+52	; 0x34
    20c8:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    20cc:	dc 01       	movw	r26, r24
    20ce:	cb 01       	movw	r24, r22
    20d0:	98 ab       	std	Y+48, r25	; 0x30
    20d2:	8f a7       	std	Y+47, r24	; 0x2f
    20d4:	8f a5       	ldd	r24, Y+47	; 0x2f
    20d6:	98 a9       	ldd	r25, Y+48	; 0x30
    20d8:	9c a7       	std	Y+44, r25	; 0x2c
    20da:	8b a7       	std	Y+43, r24	; 0x2b
    20dc:	8b a5       	ldd	r24, Y+43	; 0x2b
    20de:	9c a5       	ldd	r25, Y+44	; 0x2c
    20e0:	01 97       	sbiw	r24, 0x01	; 1
    20e2:	f1 f7       	brne	.-4      	; 0x20e0 <main+0x1060>
    20e4:	9c a7       	std	Y+44, r25	; 0x2c
    20e6:	8b a7       	std	Y+43, r24	; 0x2b
                            _delay_ms(3000);
                            stand = 9;
    20e8:	fe 01       	movw	r30, r28
    20ea:	e3 59       	subi	r30, 0x93	; 147
    20ec:	ff 4f       	sbci	r31, 0xFF	; 255
    20ee:	89 e0       	ldi	r24, 0x09	; 9
    20f0:	90 e0       	ldi	r25, 0x00	; 0
    20f2:	91 83       	std	Z+1, r25	; 0x01
    20f4:	80 83       	st	Z, r24
    20f6:	07 c0       	rjmp	.+14     	; 0x2106 <main+0x1086>
                        }
                        else
                        {
                            stand = 8;
    20f8:	fe 01       	movw	r30, r28
    20fa:	e3 59       	subi	r30, 0x93	; 147
    20fc:	ff 4f       	sbci	r31, 0xFF	; 255
    20fe:	88 e0       	ldi	r24, 0x08	; 8
    2100:	90 e0       	ldi	r25, 0x00	; 0
    2102:	91 83       	std	Z+1, r25	; 0x01
    2104:	80 83       	st	Z, r24
                        }
                case 9:
                    Slagbomendicht(1);
    2106:	81 e0       	ldi	r24, 0x01	; 1
    2108:	90 e0       	ldi	r25, 0x00	; 0
    210a:	0e 94 a8 07 	call	0xf50	; 0xf50 <Slagbomendicht>
                    VerlichtingbrugsluitAan(1);
    210e:	81 e0       	ldi	r24, 0x01	; 1
    2110:	90 e0       	ldi	r25, 0x00	; 0
    2112:	0e 94 70 04 	call	0x8e0	; 0x8e0 <VerlichtingbrugsluitAan>
                    waarschuwingslichtenAan(1);
    2116:	81 e0       	ldi	r24, 0x01	; 1
    2118:	90 e0       	ldi	r25, 0x00	; 0
    211a:	0e 94 62 06 	call	0xcc4	; 0xcc4 <waarschuwingslichtenAan>
                    LedsbedieningpaneelRoodDichtAan(0);
    211e:	80 e0       	ldi	r24, 0x00	; 0
    2120:	90 e0       	ldi	r25, 0x00	; 0
    2122:	0e 94 36 05 	call	0xa6c	; 0xa6c <LedsbedieningpaneelRoodDichtAan>
                    LedsbedieningpaneelRoodDichtUit(1);
    2126:	81 e0       	ldi	r24, 0x01	; 1
    2128:	90 e0       	ldi	r25, 0x00	; 0
    212a:	0e 94 4f 05 	call	0xa9e	; 0xa9e <LedsbedieningpaneelRoodDichtUit>
                    LedsbedieningpaneelBlauwOpenenAan(1);
    212e:	81 e0       	ldi	r24, 0x01	; 1
    2130:	90 e0       	ldi	r25, 0x00	; 0
    2132:	0e 94 68 05 	call	0xad0	; 0xad0 <LedsbedieningpaneelBlauwOpenenAan>
                    LedsbedieningpaneelBlauwOpenenUit(0);
    2136:	80 e0       	ldi	r24, 0x00	; 0
    2138:	90 e0       	ldi	r25, 0x00	; 0
    213a:	0e 94 81 05 	call	0xb02	; 0xb02 <LedsbedieningpaneelBlauwOpenenUit>
                    LedsbedieningpaneelBlauwSluitenAan(0);
    213e:	80 e0       	ldi	r24, 0x00	; 0
    2140:	90 e0       	ldi	r25, 0x00	; 0
    2142:	0e 94 9a 05 	call	0xb34	; 0xb34 <LedsbedieningpaneelBlauwSluitenAan>
                    LedsbedieningpaneelBlauwSluitenUit(1);
    2146:	81 e0       	ldi	r24, 0x01	; 1
    2148:	90 e0       	ldi	r25, 0x00	; 0
    214a:	0e 94 b3 05 	call	0xb66	; 0xb66 <LedsbedieningpaneelBlauwSluitenUit>
                    LedsbedieningpaneelRoodOpenAan(1);
    214e:	81 e0       	ldi	r24, 0x01	; 1
    2150:	90 e0       	ldi	r25, 0x00	; 0
    2152:	0e 94 04 05 	call	0xa08	; 0xa08 <LedsbedieningpaneelRoodOpenAan>
                    LedsbedieningpaneelRoodOpenUit(0);
    2156:	80 e0       	ldi	r24, 0x00	; 0
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LedsbedieningpaneelRoodOpenUit>
                    LedsbedieningpaneelGeelPersoonAan(0);
    215e:	80 e0       	ldi	r24, 0x00	; 0
    2160:	90 e0       	ldi	r25, 0x00	; 0
    2162:	0e 94 fe 05 	call	0xbfc	; 0xbfc <LedsbedieningpaneelGeelPersoonAan>
                    LedsbedieningpaneelGeelPersoonUit(1);
    2166:	81 e0       	ldi	r24, 0x01	; 1
    2168:	90 e0       	ldi	r25, 0x00	; 0
    216a:	0e 94 17 06 	call	0xc2e	; 0xc2e <LedsbedieningpaneelGeelPersoonUit>
                    LedsbedieningpaneelNoodstopUit(0);
    216e:	80 e0       	ldi	r24, 0x00	; 0
    2170:	90 e0       	ldi	r25, 0x00	; 0
    2172:	0e 94 49 06 	call	0xc92	; 0xc92 <LedsbedieningpaneelNoodstopUit>
                    LedsbedieningpaneelNoodstopAan(1);
    2176:	81 e0       	ldi	r24, 0x01	; 1
    2178:	90 e0       	ldi	r25, 0x00	; 0
    217a:	0e 94 30 06 	call	0xc60	; 0xc60 <LedsbedieningpaneelNoodstopAan>
                    LedsbedieningpaneelGeelBootAan(0);
    217e:	80 e0       	ldi	r24, 0x00	; 0
    2180:	90 e0       	ldi	r25, 0x00	; 0
    2182:	0e 94 cc 05 	call	0xb98	; 0xb98 <LedsbedieningpaneelGeelBootAan>
                    LedsbedieningpaneelGeelBootUit(1);
    2186:	81 e0       	ldi	r24, 0x01	; 1
    2188:	90 e0       	ldi	r25, 0x00	; 0
    218a:	0e 94 e5 05 	call	0xbca	; 0xbca <LedsbedieningpaneelGeelBootUit>
                        if (EindDicht == 0)
    218e:	fe 01       	movw	r30, r28
    2190:	e1 59       	subi	r30, 0x91	; 145
    2192:	ff 4f       	sbci	r31, 0xFF	; 255
    2194:	80 81       	ld	r24, Z
    2196:	91 81       	ldd	r25, Z+1	; 0x01
    2198:	00 97       	sbiw	r24, 0x00	; 0
    219a:	51 f4       	brne	.+20     	; 0x21b0 <main+0x1130>
                        {
                            Motoruit();
    219c:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <Motoruit>
                            stand = 10;
    21a0:	fe 01       	movw	r30, r28
    21a2:	e3 59       	subi	r30, 0x93	; 147
    21a4:	ff 4f       	sbci	r31, 0xFF	; 255
    21a6:	8a e0       	ldi	r24, 0x0A	; 10
    21a8:	90 e0       	ldi	r25, 0x00	; 0
    21aa:	91 83       	std	Z+1, r25	; 0x01
    21ac:	80 83       	st	Z, r24
    21ae:	31 c2       	rjmp	.+1122   	; 0x2612 <__stack+0x413>
                        }
                        else
                        {
                            Brugomlaag();
    21b0:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <Brugomlaag>
    21b4:	80 e0       	ldi	r24, 0x00	; 0
    21b6:	90 e4       	ldi	r25, 0x40	; 64
    21b8:	a3 e0       	ldi	r26, 0x03	; 3
    21ba:	b5 e4       	ldi	r27, 0x45	; 69
    21bc:	8f a3       	std	Y+39, r24	; 0x27
    21be:	98 a7       	std	Y+40, r25	; 0x28
    21c0:	a9 a7       	std	Y+41, r26	; 0x29
    21c2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21c4:	6f a1       	ldd	r22, Y+39	; 0x27
    21c6:	78 a5       	ldd	r23, Y+40	; 0x28
    21c8:	89 a5       	ldd	r24, Y+41	; 0x29
    21ca:	9a a5       	ldd	r25, Y+42	; 0x2a
    21cc:	20 e0       	ldi	r18, 0x00	; 0
    21ce:	30 e0       	ldi	r19, 0x00	; 0
    21d0:	4a e7       	ldi	r20, 0x7A	; 122
    21d2:	55 e4       	ldi	r21, 0x45	; 69
    21d4:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    21d8:	dc 01       	movw	r26, r24
    21da:	cb 01       	movw	r24, r22
    21dc:	8b a3       	std	Y+35, r24	; 0x23
    21de:	9c a3       	std	Y+36, r25	; 0x24
    21e0:	ad a3       	std	Y+37, r26	; 0x25
    21e2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    21e4:	6b a1       	ldd	r22, Y+35	; 0x23
    21e6:	7c a1       	ldd	r23, Y+36	; 0x24
    21e8:	8d a1       	ldd	r24, Y+37	; 0x25
    21ea:	9e a1       	ldd	r25, Y+38	; 0x26
    21ec:	20 e0       	ldi	r18, 0x00	; 0
    21ee:	30 e0       	ldi	r19, 0x00	; 0
    21f0:	40 e8       	ldi	r20, 0x80	; 128
    21f2:	5f e3       	ldi	r21, 0x3F	; 63
    21f4:	0e 94 2c 15 	call	0x2a58	; 0x2a58 <__cmpsf2>
    21f8:	88 23       	and	r24, r24
    21fa:	2c f4       	brge	.+10     	; 0x2206 <__stack+0x7>
		__ticks = 1;
    21fc:	81 e0       	ldi	r24, 0x01	; 1
    21fe:	90 e0       	ldi	r25, 0x00	; 0
    2200:	9a a3       	std	Y+34, r25	; 0x22
    2202:	89 a3       	std	Y+33, r24	; 0x21
    2204:	3f c0       	rjmp	.+126    	; 0x2284 <__stack+0x85>
	else if (__tmp > 65535)
    2206:	6b a1       	ldd	r22, Y+35	; 0x23
    2208:	7c a1       	ldd	r23, Y+36	; 0x24
    220a:	8d a1       	ldd	r24, Y+37	; 0x25
    220c:	9e a1       	ldd	r25, Y+38	; 0x26
    220e:	20 e0       	ldi	r18, 0x00	; 0
    2210:	3f ef       	ldi	r19, 0xFF	; 255
    2212:	4f e7       	ldi	r20, 0x7F	; 127
    2214:	57 e4       	ldi	r21, 0x47	; 71
    2216:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__gesf2>
    221a:	18 16       	cp	r1, r24
    221c:	4c f5       	brge	.+82     	; 0x2270 <__stack+0x71>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    221e:	6f a1       	ldd	r22, Y+39	; 0x27
    2220:	78 a5       	ldd	r23, Y+40	; 0x28
    2222:	89 a5       	ldd	r24, Y+41	; 0x29
    2224:	9a a5       	ldd	r25, Y+42	; 0x2a
    2226:	20 e0       	ldi	r18, 0x00	; 0
    2228:	30 e0       	ldi	r19, 0x00	; 0
    222a:	40 e2       	ldi	r20, 0x20	; 32
    222c:	51 e4       	ldi	r21, 0x41	; 65
    222e:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    2232:	dc 01       	movw	r26, r24
    2234:	cb 01       	movw	r24, r22
    2236:	bc 01       	movw	r22, r24
    2238:	cd 01       	movw	r24, r26
    223a:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    223e:	dc 01       	movw	r26, r24
    2240:	cb 01       	movw	r24, r22
    2242:	9a a3       	std	Y+34, r25	; 0x22
    2244:	89 a3       	std	Y+33, r24	; 0x21
    2246:	0f c0       	rjmp	.+30     	; 0x2266 <__stack+0x67>
    2248:	80 e9       	ldi	r24, 0x90	; 144
    224a:	91 e0       	ldi	r25, 0x01	; 1
    224c:	98 a3       	std	Y+32, r25	; 0x20
    224e:	8f 8f       	std	Y+31, r24	; 0x1f
    2250:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2252:	98 a1       	ldd	r25, Y+32	; 0x20
    2254:	01 97       	sbiw	r24, 0x01	; 1
    2256:	f1 f7       	brne	.-4      	; 0x2254 <__stack+0x55>
    2258:	98 a3       	std	Y+32, r25	; 0x20
    225a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    225c:	89 a1       	ldd	r24, Y+33	; 0x21
    225e:	9a a1       	ldd	r25, Y+34	; 0x22
    2260:	01 97       	sbiw	r24, 0x01	; 1
    2262:	9a a3       	std	Y+34, r25	; 0x22
    2264:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2266:	89 a1       	ldd	r24, Y+33	; 0x21
    2268:	9a a1       	ldd	r25, Y+34	; 0x22
    226a:	00 97       	sbiw	r24, 0x00	; 0
    226c:	69 f7       	brne	.-38     	; 0x2248 <__stack+0x49>
    226e:	14 c0       	rjmp	.+40     	; 0x2298 <__stack+0x99>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2270:	6b a1       	ldd	r22, Y+35	; 0x23
    2272:	7c a1       	ldd	r23, Y+36	; 0x24
    2274:	8d a1       	ldd	r24, Y+37	; 0x25
    2276:	9e a1       	ldd	r25, Y+38	; 0x26
    2278:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    227c:	dc 01       	movw	r26, r24
    227e:	cb 01       	movw	r24, r22
    2280:	9a a3       	std	Y+34, r25	; 0x22
    2282:	89 a3       	std	Y+33, r24	; 0x21
    2284:	89 a1       	ldd	r24, Y+33	; 0x21
    2286:	9a a1       	ldd	r25, Y+34	; 0x22
    2288:	9e 8f       	std	Y+30, r25	; 0x1e
    228a:	8d 8f       	std	Y+29, r24	; 0x1d
    228c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    228e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2290:	01 97       	sbiw	r24, 0x01	; 1
    2292:	f1 f7       	brne	.-4      	; 0x2290 <__stack+0x91>
    2294:	9e 8f       	std	Y+30, r25	; 0x1e
    2296:	8d 8f       	std	Y+29, r24	; 0x1d
                            _delay_ms(2100);
                            Motoruit();
    2298:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <Motoruit>
                            stand = 10;
    229c:	fe 01       	movw	r30, r28
    229e:	e3 59       	subi	r30, 0x93	; 147
    22a0:	ff 4f       	sbci	r31, 0xFF	; 255
    22a2:	8a e0       	ldi	r24, 0x0A	; 10
    22a4:	90 e0       	ldi	r25, 0x00	; 0
    22a6:	91 83       	std	Z+1, r25	; 0x01
    22a8:	80 83       	st	Z, r24
    22aa:	b3 c1       	rjmp	.+870    	; 0x2612 <__stack+0x413>
                        }
                    break;
                case 10:
                    Slagbomendicht(1);
    22ac:	81 e0       	ldi	r24, 0x01	; 1
    22ae:	90 e0       	ldi	r25, 0x00	; 0
    22b0:	0e 94 a8 07 	call	0xf50	; 0xf50 <Slagbomendicht>
                    VerlichtingbrugsluitAan(1);
    22b4:	81 e0       	ldi	r24, 0x01	; 1
    22b6:	90 e0       	ldi	r25, 0x00	; 0
    22b8:	0e 94 70 04 	call	0x8e0	; 0x8e0 <VerlichtingbrugsluitAan>
                    waarschuwingslichtenAan(1);
    22bc:	81 e0       	ldi	r24, 0x01	; 1
    22be:	90 e0       	ldi	r25, 0x00	; 0
    22c0:	0e 94 62 06 	call	0xcc4	; 0xcc4 <waarschuwingslichtenAan>
                    LedsbedieningpaneelRoodDichtAan(1);
    22c4:	81 e0       	ldi	r24, 0x01	; 1
    22c6:	90 e0       	ldi	r25, 0x00	; 0
    22c8:	0e 94 36 05 	call	0xa6c	; 0xa6c <LedsbedieningpaneelRoodDichtAan>
                    LedsbedieningpaneelRoodDichtUit(0);
    22cc:	80 e0       	ldi	r24, 0x00	; 0
    22ce:	90 e0       	ldi	r25, 0x00	; 0
    22d0:	0e 94 4f 05 	call	0xa9e	; 0xa9e <LedsbedieningpaneelRoodDichtUit>
                    LedsbedieningpaneelBlauwOpenenAan(1);
    22d4:	81 e0       	ldi	r24, 0x01	; 1
    22d6:	90 e0       	ldi	r25, 0x00	; 0
    22d8:	0e 94 68 05 	call	0xad0	; 0xad0 <LedsbedieningpaneelBlauwOpenenAan>
                    LedsbedieningpaneelBlauwOpenenUit(0);
    22dc:	80 e0       	ldi	r24, 0x00	; 0
    22de:	90 e0       	ldi	r25, 0x00	; 0
    22e0:	0e 94 81 05 	call	0xb02	; 0xb02 <LedsbedieningpaneelBlauwOpenenUit>
                    LedsbedieningpaneelBlauwSluitenAan(0);
    22e4:	80 e0       	ldi	r24, 0x00	; 0
    22e6:	90 e0       	ldi	r25, 0x00	; 0
    22e8:	0e 94 9a 05 	call	0xb34	; 0xb34 <LedsbedieningpaneelBlauwSluitenAan>
                    LedsbedieningpaneelBlauwSluitenUit(1);
    22ec:	81 e0       	ldi	r24, 0x01	; 1
    22ee:	90 e0       	ldi	r25, 0x00	; 0
    22f0:	0e 94 b3 05 	call	0xb66	; 0xb66 <LedsbedieningpaneelBlauwSluitenUit>
                    LedsbedieningpaneelRoodOpenAan(1);
    22f4:	81 e0       	ldi	r24, 0x01	; 1
    22f6:	90 e0       	ldi	r25, 0x00	; 0
    22f8:	0e 94 04 05 	call	0xa08	; 0xa08 <LedsbedieningpaneelRoodOpenAan>
                    LedsbedieningpaneelRoodOpenUit(0);
    22fc:	80 e0       	ldi	r24, 0x00	; 0
    22fe:	90 e0       	ldi	r25, 0x00	; 0
    2300:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LedsbedieningpaneelRoodOpenUit>
                    LedsbedieningpaneelGeelPersoonAan(0);
    2304:	80 e0       	ldi	r24, 0x00	; 0
    2306:	90 e0       	ldi	r25, 0x00	; 0
    2308:	0e 94 fe 05 	call	0xbfc	; 0xbfc <LedsbedieningpaneelGeelPersoonAan>
                    LedsbedieningpaneelGeelPersoonUit(1);
    230c:	81 e0       	ldi	r24, 0x01	; 1
    230e:	90 e0       	ldi	r25, 0x00	; 0
    2310:	0e 94 17 06 	call	0xc2e	; 0xc2e <LedsbedieningpaneelGeelPersoonUit>
                    LedsbedieningpaneelNoodstopUit(0);
    2314:	80 e0       	ldi	r24, 0x00	; 0
    2316:	90 e0       	ldi	r25, 0x00	; 0
    2318:	0e 94 49 06 	call	0xc92	; 0xc92 <LedsbedieningpaneelNoodstopUit>
                    LedsbedieningpaneelNoodstopAan(1);
    231c:	81 e0       	ldi	r24, 0x01	; 1
    231e:	90 e0       	ldi	r25, 0x00	; 0
    2320:	0e 94 30 06 	call	0xc60	; 0xc60 <LedsbedieningpaneelNoodstopAan>
                    LedsbedieningpaneelGeelBootAan(0);
    2324:	80 e0       	ldi	r24, 0x00	; 0
    2326:	90 e0       	ldi	r25, 0x00	; 0
    2328:	0e 94 cc 05 	call	0xb98	; 0xb98 <LedsbedieningpaneelGeelBootAan>
                    LedsbedieningpaneelGeelBootUit(1);
    232c:	81 e0       	ldi	r24, 0x01	; 1
    232e:	90 e0       	ldi	r25, 0x00	; 0
    2330:	0e 94 e5 05 	call	0xbca	; 0xbca <LedsbedieningpaneelGeelBootUit>
    2334:	80 e0       	ldi	r24, 0x00	; 0
    2336:	90 e0       	ldi	r25, 0x00	; 0
    2338:	aa ef       	ldi	r26, 0xFA	; 250
    233a:	b4 e4       	ldi	r27, 0x44	; 68
    233c:	89 8f       	std	Y+25, r24	; 0x19
    233e:	9a 8f       	std	Y+26, r25	; 0x1a
    2340:	ab 8f       	std	Y+27, r26	; 0x1b
    2342:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2344:	69 8d       	ldd	r22, Y+25	; 0x19
    2346:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2348:	8b 8d       	ldd	r24, Y+27	; 0x1b
    234a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    234c:	20 e0       	ldi	r18, 0x00	; 0
    234e:	30 e0       	ldi	r19, 0x00	; 0
    2350:	4a e7       	ldi	r20, 0x7A	; 122
    2352:	55 e4       	ldi	r21, 0x45	; 69
    2354:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    2358:	dc 01       	movw	r26, r24
    235a:	cb 01       	movw	r24, r22
    235c:	8d 8b       	std	Y+21, r24	; 0x15
    235e:	9e 8b       	std	Y+22, r25	; 0x16
    2360:	af 8b       	std	Y+23, r26	; 0x17
    2362:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2364:	6d 89       	ldd	r22, Y+21	; 0x15
    2366:	7e 89       	ldd	r23, Y+22	; 0x16
    2368:	8f 89       	ldd	r24, Y+23	; 0x17
    236a:	98 8d       	ldd	r25, Y+24	; 0x18
    236c:	20 e0       	ldi	r18, 0x00	; 0
    236e:	30 e0       	ldi	r19, 0x00	; 0
    2370:	40 e8       	ldi	r20, 0x80	; 128
    2372:	5f e3       	ldi	r21, 0x3F	; 63
    2374:	0e 94 2c 15 	call	0x2a58	; 0x2a58 <__cmpsf2>
    2378:	88 23       	and	r24, r24
    237a:	2c f4       	brge	.+10     	; 0x2386 <__stack+0x187>
		__ticks = 1;
    237c:	81 e0       	ldi	r24, 0x01	; 1
    237e:	90 e0       	ldi	r25, 0x00	; 0
    2380:	9c 8b       	std	Y+20, r25	; 0x14
    2382:	8b 8b       	std	Y+19, r24	; 0x13
    2384:	3f c0       	rjmp	.+126    	; 0x2404 <__stack+0x205>
	else if (__tmp > 65535)
    2386:	6d 89       	ldd	r22, Y+21	; 0x15
    2388:	7e 89       	ldd	r23, Y+22	; 0x16
    238a:	8f 89       	ldd	r24, Y+23	; 0x17
    238c:	98 8d       	ldd	r25, Y+24	; 0x18
    238e:	20 e0       	ldi	r18, 0x00	; 0
    2390:	3f ef       	ldi	r19, 0xFF	; 255
    2392:	4f e7       	ldi	r20, 0x7F	; 127
    2394:	57 e4       	ldi	r21, 0x47	; 71
    2396:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__gesf2>
    239a:	18 16       	cp	r1, r24
    239c:	4c f5       	brge	.+82     	; 0x23f0 <__stack+0x1f1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    239e:	69 8d       	ldd	r22, Y+25	; 0x19
    23a0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    23a2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    23a4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    23a6:	20 e0       	ldi	r18, 0x00	; 0
    23a8:	30 e0       	ldi	r19, 0x00	; 0
    23aa:	40 e2       	ldi	r20, 0x20	; 32
    23ac:	51 e4       	ldi	r21, 0x41	; 65
    23ae:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    23b2:	dc 01       	movw	r26, r24
    23b4:	cb 01       	movw	r24, r22
    23b6:	bc 01       	movw	r22, r24
    23b8:	cd 01       	movw	r24, r26
    23ba:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    23be:	dc 01       	movw	r26, r24
    23c0:	cb 01       	movw	r24, r22
    23c2:	9c 8b       	std	Y+20, r25	; 0x14
    23c4:	8b 8b       	std	Y+19, r24	; 0x13
    23c6:	0f c0       	rjmp	.+30     	; 0x23e6 <__stack+0x1e7>
    23c8:	80 e9       	ldi	r24, 0x90	; 144
    23ca:	91 e0       	ldi	r25, 0x01	; 1
    23cc:	9a 8b       	std	Y+18, r25	; 0x12
    23ce:	89 8b       	std	Y+17, r24	; 0x11
    23d0:	89 89       	ldd	r24, Y+17	; 0x11
    23d2:	9a 89       	ldd	r25, Y+18	; 0x12
    23d4:	01 97       	sbiw	r24, 0x01	; 1
    23d6:	f1 f7       	brne	.-4      	; 0x23d4 <__stack+0x1d5>
    23d8:	9a 8b       	std	Y+18, r25	; 0x12
    23da:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23dc:	8b 89       	ldd	r24, Y+19	; 0x13
    23de:	9c 89       	ldd	r25, Y+20	; 0x14
    23e0:	01 97       	sbiw	r24, 0x01	; 1
    23e2:	9c 8b       	std	Y+20, r25	; 0x14
    23e4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23e6:	8b 89       	ldd	r24, Y+19	; 0x13
    23e8:	9c 89       	ldd	r25, Y+20	; 0x14
    23ea:	00 97       	sbiw	r24, 0x00	; 0
    23ec:	69 f7       	brne	.-38     	; 0x23c8 <__stack+0x1c9>
    23ee:	14 c0       	rjmp	.+40     	; 0x2418 <__stack+0x219>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23f0:	6d 89       	ldd	r22, Y+21	; 0x15
    23f2:	7e 89       	ldd	r23, Y+22	; 0x16
    23f4:	8f 89       	ldd	r24, Y+23	; 0x17
    23f6:	98 8d       	ldd	r25, Y+24	; 0x18
    23f8:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    23fc:	dc 01       	movw	r26, r24
    23fe:	cb 01       	movw	r24, r22
    2400:	9c 8b       	std	Y+20, r25	; 0x14
    2402:	8b 8b       	std	Y+19, r24	; 0x13
    2404:	8b 89       	ldd	r24, Y+19	; 0x13
    2406:	9c 89       	ldd	r25, Y+20	; 0x14
    2408:	98 8b       	std	Y+16, r25	; 0x10
    240a:	8f 87       	std	Y+15, r24	; 0x0f
    240c:	8f 85       	ldd	r24, Y+15	; 0x0f
    240e:	98 89       	ldd	r25, Y+16	; 0x10
    2410:	01 97       	sbiw	r24, 0x01	; 1
    2412:	f1 f7       	brne	.-4      	; 0x2410 <__stack+0x211>
    2414:	98 8b       	std	Y+16, r25	; 0x10
    2416:	8f 87       	std	Y+15, r24	; 0x0f
                    _delay_ms(2000);
                    Slagbomendicht(0);
    2418:	80 e0       	ldi	r24, 0x00	; 0
    241a:	90 e0       	ldi	r25, 0x00	; 0
    241c:	0e 94 a8 07 	call	0xf50	; 0xf50 <Slagbomendicht>
                    Slagbomenopen(1);
    2420:	81 e0       	ldi	r24, 0x01	; 1
    2422:	90 e0       	ldi	r25, 0x00	; 0
    2424:	0e 94 c0 07 	call	0xf80	; 0xf80 <Slagbomenopen>
                    Verlichtingbrugdicht(1);
    2428:	81 e0       	ldi	r24, 0x01	; 1
    242a:	90 e0       	ldi	r25, 0x00	; 0
    242c:	0e 94 d6 01 	call	0x3ac	; 0x3ac <Verlichtingbrugdicht>
                    stand = 11;
    2430:	fe 01       	movw	r30, r28
    2432:	e3 59       	subi	r30, 0x93	; 147
    2434:	ff 4f       	sbci	r31, 0xFF	; 255
    2436:	8b e0       	ldi	r24, 0x0B	; 11
    2438:	90 e0       	ldi	r25, 0x00	; 0
    243a:	91 83       	std	Z+1, r25	; 0x01
    243c:	80 83       	st	Z, r24
    243e:	e9 c0       	rjmp	.+466    	; 0x2612 <__stack+0x413>
                    break;
                case 11:
                    Slagbomenopen(1);
    2440:	81 e0       	ldi	r24, 0x01	; 1
    2442:	90 e0       	ldi	r25, 0x00	; 0
    2444:	0e 94 c0 07 	call	0xf80	; 0xf80 <Slagbomenopen>
                    Verlichtingbrugdicht(1);
    2448:	81 e0       	ldi	r24, 0x01	; 1
    244a:	90 e0       	ldi	r25, 0x00	; 0
    244c:	0e 94 d6 01 	call	0x3ac	; 0x3ac <Verlichtingbrugdicht>
                    waarschuwingslichtenAan(1);
    2450:	81 e0       	ldi	r24, 0x01	; 1
    2452:	90 e0       	ldi	r25, 0x00	; 0
    2454:	0e 94 62 06 	call	0xcc4	; 0xcc4 <waarschuwingslichtenAan>
                    LedsbedieningpaneelRoodDichtAan(1);
    2458:	81 e0       	ldi	r24, 0x01	; 1
    245a:	90 e0       	ldi	r25, 0x00	; 0
    245c:	0e 94 36 05 	call	0xa6c	; 0xa6c <LedsbedieningpaneelRoodDichtAan>
                    LedsbedieningpaneelRoodDichtUit(0);
    2460:	80 e0       	ldi	r24, 0x00	; 0
    2462:	90 e0       	ldi	r25, 0x00	; 0
    2464:	0e 94 4f 05 	call	0xa9e	; 0xa9e <LedsbedieningpaneelRoodDichtUit>
                    LedsbedieningpaneelBlauwOpenenAan(0);
    2468:	80 e0       	ldi	r24, 0x00	; 0
    246a:	90 e0       	ldi	r25, 0x00	; 0
    246c:	0e 94 68 05 	call	0xad0	; 0xad0 <LedsbedieningpaneelBlauwOpenenAan>
                    LedsbedieningpaneelBlauwOpenenUit(1);
    2470:	81 e0       	ldi	r24, 0x01	; 1
    2472:	90 e0       	ldi	r25, 0x00	; 0
    2474:	0e 94 81 05 	call	0xb02	; 0xb02 <LedsbedieningpaneelBlauwOpenenUit>
                    LedsbedieningpaneelBlauwSluitenAan(0);
    2478:	80 e0       	ldi	r24, 0x00	; 0
    247a:	90 e0       	ldi	r25, 0x00	; 0
    247c:	0e 94 9a 05 	call	0xb34	; 0xb34 <LedsbedieningpaneelBlauwSluitenAan>
                    LedsbedieningpaneelBlauwSluitenUit(1);
    2480:	81 e0       	ldi	r24, 0x01	; 1
    2482:	90 e0       	ldi	r25, 0x00	; 0
    2484:	0e 94 b3 05 	call	0xb66	; 0xb66 <LedsbedieningpaneelBlauwSluitenUit>
                    LedsbedieningpaneelRoodOpenAan(1);
    2488:	81 e0       	ldi	r24, 0x01	; 1
    248a:	90 e0       	ldi	r25, 0x00	; 0
    248c:	0e 94 04 05 	call	0xa08	; 0xa08 <LedsbedieningpaneelRoodOpenAan>
                    LedsbedieningpaneelRoodOpenUit(0);
    2490:	80 e0       	ldi	r24, 0x00	; 0
    2492:	90 e0       	ldi	r25, 0x00	; 0
    2494:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LedsbedieningpaneelRoodOpenUit>
                    LedsbedieningpaneelGeelPersoonAan(0);
    2498:	80 e0       	ldi	r24, 0x00	; 0
    249a:	90 e0       	ldi	r25, 0x00	; 0
    249c:	0e 94 fe 05 	call	0xbfc	; 0xbfc <LedsbedieningpaneelGeelPersoonAan>
                    LedsbedieningpaneelGeelPersoonUit(1);
    24a0:	81 e0       	ldi	r24, 0x01	; 1
    24a2:	90 e0       	ldi	r25, 0x00	; 0
    24a4:	0e 94 17 06 	call	0xc2e	; 0xc2e <LedsbedieningpaneelGeelPersoonUit>
                    LedsbedieningpaneelNoodstopUit(0);
    24a8:	80 e0       	ldi	r24, 0x00	; 0
    24aa:	90 e0       	ldi	r25, 0x00	; 0
    24ac:	0e 94 49 06 	call	0xc92	; 0xc92 <LedsbedieningpaneelNoodstopUit>
                    LedsbedieningpaneelNoodstopAan(1);
    24b0:	81 e0       	ldi	r24, 0x01	; 1
    24b2:	90 e0       	ldi	r25, 0x00	; 0
    24b4:	0e 94 30 06 	call	0xc60	; 0xc60 <LedsbedieningpaneelNoodstopAan>
                    LedsbedieningpaneelGeelBootAan(0);
    24b8:	80 e0       	ldi	r24, 0x00	; 0
    24ba:	90 e0       	ldi	r25, 0x00	; 0
    24bc:	0e 94 cc 05 	call	0xb98	; 0xb98 <LedsbedieningpaneelGeelBootAan>
                    LedsbedieningpaneelGeelBootUit(1);
    24c0:	81 e0       	ldi	r24, 0x01	; 1
    24c2:	90 e0       	ldi	r25, 0x00	; 0
    24c4:	0e 94 e5 05 	call	0xbca	; 0xbca <LedsbedieningpaneelGeelBootUit>
    24c8:	80 e0       	ldi	r24, 0x00	; 0
    24ca:	90 e0       	ldi	r25, 0x00	; 0
    24cc:	aa ef       	ldi	r26, 0xFA	; 250
    24ce:	b4 e4       	ldi	r27, 0x44	; 68
    24d0:	8b 87       	std	Y+11, r24	; 0x0b
    24d2:	9c 87       	std	Y+12, r25	; 0x0c
    24d4:	ad 87       	std	Y+13, r26	; 0x0d
    24d6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24d8:	6b 85       	ldd	r22, Y+11	; 0x0b
    24da:	7c 85       	ldd	r23, Y+12	; 0x0c
    24dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    24de:	9e 85       	ldd	r25, Y+14	; 0x0e
    24e0:	20 e0       	ldi	r18, 0x00	; 0
    24e2:	30 e0       	ldi	r19, 0x00	; 0
    24e4:	4a e7       	ldi	r20, 0x7A	; 122
    24e6:	55 e4       	ldi	r21, 0x45	; 69
    24e8:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    24ec:	dc 01       	movw	r26, r24
    24ee:	cb 01       	movw	r24, r22
    24f0:	8f 83       	std	Y+7, r24	; 0x07
    24f2:	98 87       	std	Y+8, r25	; 0x08
    24f4:	a9 87       	std	Y+9, r26	; 0x09
    24f6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    24f8:	6f 81       	ldd	r22, Y+7	; 0x07
    24fa:	78 85       	ldd	r23, Y+8	; 0x08
    24fc:	89 85       	ldd	r24, Y+9	; 0x09
    24fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    2500:	20 e0       	ldi	r18, 0x00	; 0
    2502:	30 e0       	ldi	r19, 0x00	; 0
    2504:	40 e8       	ldi	r20, 0x80	; 128
    2506:	5f e3       	ldi	r21, 0x3F	; 63
    2508:	0e 94 2c 15 	call	0x2a58	; 0x2a58 <__cmpsf2>
    250c:	88 23       	and	r24, r24
    250e:	2c f4       	brge	.+10     	; 0x251a <__stack+0x31b>
		__ticks = 1;
    2510:	81 e0       	ldi	r24, 0x01	; 1
    2512:	90 e0       	ldi	r25, 0x00	; 0
    2514:	9e 83       	std	Y+6, r25	; 0x06
    2516:	8d 83       	std	Y+5, r24	; 0x05
    2518:	3f c0       	rjmp	.+126    	; 0x2598 <__stack+0x399>
	else if (__tmp > 65535)
    251a:	6f 81       	ldd	r22, Y+7	; 0x07
    251c:	78 85       	ldd	r23, Y+8	; 0x08
    251e:	89 85       	ldd	r24, Y+9	; 0x09
    2520:	9a 85       	ldd	r25, Y+10	; 0x0a
    2522:	20 e0       	ldi	r18, 0x00	; 0
    2524:	3f ef       	ldi	r19, 0xFF	; 255
    2526:	4f e7       	ldi	r20, 0x7F	; 127
    2528:	57 e4       	ldi	r21, 0x47	; 71
    252a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__gesf2>
    252e:	18 16       	cp	r1, r24
    2530:	4c f5       	brge	.+82     	; 0x2584 <__stack+0x385>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2532:	6b 85       	ldd	r22, Y+11	; 0x0b
    2534:	7c 85       	ldd	r23, Y+12	; 0x0c
    2536:	8d 85       	ldd	r24, Y+13	; 0x0d
    2538:	9e 85       	ldd	r25, Y+14	; 0x0e
    253a:	20 e0       	ldi	r18, 0x00	; 0
    253c:	30 e0       	ldi	r19, 0x00	; 0
    253e:	40 e2       	ldi	r20, 0x20	; 32
    2540:	51 e4       	ldi	r21, 0x41	; 65
    2542:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    2546:	dc 01       	movw	r26, r24
    2548:	cb 01       	movw	r24, r22
    254a:	bc 01       	movw	r22, r24
    254c:	cd 01       	movw	r24, r26
    254e:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    2552:	dc 01       	movw	r26, r24
    2554:	cb 01       	movw	r24, r22
    2556:	9e 83       	std	Y+6, r25	; 0x06
    2558:	8d 83       	std	Y+5, r24	; 0x05
    255a:	0f c0       	rjmp	.+30     	; 0x257a <__stack+0x37b>
    255c:	80 e9       	ldi	r24, 0x90	; 144
    255e:	91 e0       	ldi	r25, 0x01	; 1
    2560:	9c 83       	std	Y+4, r25	; 0x04
    2562:	8b 83       	std	Y+3, r24	; 0x03
    2564:	8b 81       	ldd	r24, Y+3	; 0x03
    2566:	9c 81       	ldd	r25, Y+4	; 0x04
    2568:	01 97       	sbiw	r24, 0x01	; 1
    256a:	f1 f7       	brne	.-4      	; 0x2568 <__stack+0x369>
    256c:	9c 83       	std	Y+4, r25	; 0x04
    256e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2570:	8d 81       	ldd	r24, Y+5	; 0x05
    2572:	9e 81       	ldd	r25, Y+6	; 0x06
    2574:	01 97       	sbiw	r24, 0x01	; 1
    2576:	9e 83       	std	Y+6, r25	; 0x06
    2578:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    257a:	8d 81       	ldd	r24, Y+5	; 0x05
    257c:	9e 81       	ldd	r25, Y+6	; 0x06
    257e:	00 97       	sbiw	r24, 0x00	; 0
    2580:	69 f7       	brne	.-38     	; 0x255c <__stack+0x35d>
    2582:	14 c0       	rjmp	.+40     	; 0x25ac <__stack+0x3ad>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2584:	6f 81       	ldd	r22, Y+7	; 0x07
    2586:	78 85       	ldd	r23, Y+8	; 0x08
    2588:	89 85       	ldd	r24, Y+9	; 0x09
    258a:	9a 85       	ldd	r25, Y+10	; 0x0a
    258c:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    2590:	dc 01       	movw	r26, r24
    2592:	cb 01       	movw	r24, r22
    2594:	9e 83       	std	Y+6, r25	; 0x06
    2596:	8d 83       	std	Y+5, r24	; 0x05
    2598:	8d 81       	ldd	r24, Y+5	; 0x05
    259a:	9e 81       	ldd	r25, Y+6	; 0x06
    259c:	9a 83       	std	Y+2, r25	; 0x02
    259e:	89 83       	std	Y+1, r24	; 0x01
    25a0:	89 81       	ldd	r24, Y+1	; 0x01
    25a2:	9a 81       	ldd	r25, Y+2	; 0x02
    25a4:	01 97       	sbiw	r24, 0x01	; 1
    25a6:	f1 f7       	brne	.-4      	; 0x25a4 <__stack+0x3a5>
    25a8:	9a 83       	std	Y+2, r25	; 0x02
    25aa:	89 83       	std	Y+1, r24	; 0x01
                    _delay_ms(2000);
                    waarschuwingslichtenUit(1);
    25ac:	81 e0       	ldi	r24, 0x01	; 1
    25ae:	90 e0       	ldi	r25, 0x00	; 0
    25b0:	0e 94 7d 07 	call	0xefa	; 0xefa <waarschuwingslichtenUit>
                    KnopOpen = 0;
    25b4:	fe 01       	movw	r30, r28
    25b6:	e9 58       	subi	r30, 0x89	; 137
    25b8:	ff 4f       	sbci	r31, 0xFF	; 255
    25ba:	11 82       	std	Z+1, r1	; 0x01
    25bc:	10 82       	st	Z, r1
                    KnopDicht = 0;
    25be:	fe 01       	movw	r30, r28
    25c0:	eb 58       	subi	r30, 0x8B	; 139
    25c2:	ff 4f       	sbci	r31, 0xFF	; 255
    25c4:	11 82       	std	Z+1, r1	; 0x01
    25c6:	10 82       	st	Z, r1
                    EindOpen = 0;
    25c8:	fe 01       	movw	r30, r28
    25ca:	ef 58       	subi	r30, 0x8F	; 143
    25cc:	ff 4f       	sbci	r31, 0xFF	; 255
    25ce:	11 82       	std	Z+1, r1	; 0x01
    25d0:	10 82       	st	Z, r1
                    EindDicht = 0;
    25d2:	fe 01       	movw	r30, r28
    25d4:	e1 59       	subi	r30, 0x91	; 145
    25d6:	ff 4f       	sbci	r31, 0xFF	; 255
    25d8:	11 82       	std	Z+1, r1	; 0x01
    25da:	10 82       	st	Z, r1
                    ultrasoonboot1 = 0;
    25dc:	fe 01       	movw	r30, r28
    25de:	e5 59       	subi	r30, 0x95	; 149
    25e0:	ff 4f       	sbci	r31, 0xFF	; 255
    25e2:	11 82       	std	Z+1, r1	; 0x01
    25e4:	10 82       	st	Z, r1
                    ultrasoonboot2 = 0;
    25e6:	fe 01       	movw	r30, r28
    25e8:	e7 59       	subi	r30, 0x97	; 151
    25ea:	ff 4f       	sbci	r31, 0xFF	; 255
    25ec:	11 82       	std	Z+1, r1	; 0x01
    25ee:	10 82       	st	Z, r1
                    ultrasoonpersoon1 = 0;
    25f0:	fe 01       	movw	r30, r28
    25f2:	e9 59       	subi	r30, 0x99	; 153
    25f4:	ff 4f       	sbci	r31, 0xFF	; 255
    25f6:	11 82       	std	Z+1, r1	; 0x01
    25f8:	10 82       	st	Z, r1
                    ultrasoonpersoon2 = 0;
    25fa:	fe 01       	movw	r30, r28
    25fc:	eb 59       	subi	r30, 0x9B	; 155
    25fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2600:	11 82       	std	Z+1, r1	; 0x01
    2602:	10 82       	st	Z, r1
                    stand = 1;
    2604:	fe 01       	movw	r30, r28
    2606:	e3 59       	subi	r30, 0x93	; 147
    2608:	ff 4f       	sbci	r31, 0xFF	; 255
    260a:	81 e0       	ldi	r24, 0x01	; 1
    260c:	90 e0       	ldi	r25, 0x00	; 0
    260e:	91 83       	std	Z+1, r25	; 0x01
    2610:	80 83       	st	Z, r24
                    break;
                }
            if (!(PINL & (1 << Button_Noodstop)))
    2612:	e9 e0       	ldi	r30, 0x09	; 9
    2614:	f1 e0       	ldi	r31, 0x01	; 1
    2616:	80 81       	ld	r24, Z
    2618:	88 2f       	mov	r24, r24
    261a:	90 e0       	ldi	r25, 0x00	; 0
    261c:	80 71       	andi	r24, 0x10	; 16
    261e:	90 70       	andi	r25, 0x00	; 0
    2620:	00 97       	sbiw	r24, 0x00	; 0
    2622:	09 f0       	breq	.+2      	; 0x2626 <__stack+0x427>
    2624:	67 c0       	rjmp	.+206    	; 0x26f4 <__stack+0x4f5>
            {
                BrugbesturingAan++;
    2626:	de 01       	movw	r26, r28
    2628:	ad 59       	subi	r26, 0x9D	; 157
    262a:	bf 4f       	sbci	r27, 0xFF	; 255
    262c:	fe 01       	movw	r30, r28
    262e:	ed 59       	subi	r30, 0x9D	; 157
    2630:	ff 4f       	sbci	r31, 0xFF	; 255
    2632:	80 81       	ld	r24, Z
    2634:	91 81       	ldd	r25, Z+1	; 0x01
    2636:	01 96       	adiw	r24, 0x01	; 1
    2638:	11 96       	adiw	r26, 0x01	; 1
    263a:	9c 93       	st	X, r25
    263c:	8e 93       	st	-X, r24
    263e:	5a c0       	rjmp	.+180    	; 0x26f4 <__stack+0x4f5>
            }

        while ((BrugbesturingAan & 1) == 0)
        {
            init();
    2640:	0e 94 9d 07 	call	0xf3a	; 0xf3a <init>
            h_bridge_set_percentage(0);
    2644:	80 e0       	ldi	r24, 0x00	; 0
    2646:	0e 94 82 01 	call	0x304	; 0x304 <h_bridge_set_percentage>
            VerlichtingbrugsluitAan(1);
    264a:	81 e0       	ldi	r24, 0x01	; 1
    264c:	90 e0       	ldi	r25, 0x00	; 0
    264e:	0e 94 70 04 	call	0x8e0	; 0x8e0 <VerlichtingbrugsluitAan>
            waarschuwingslichtenAan(1);
    2652:	81 e0       	ldi	r24, 0x01	; 1
    2654:	90 e0       	ldi	r25, 0x00	; 0
    2656:	0e 94 62 06 	call	0xcc4	; 0xcc4 <waarschuwingslichtenAan>
            LedsbedieningpaneelRoodDichtAan(0);
    265a:	80 e0       	ldi	r24, 0x00	; 0
    265c:	90 e0       	ldi	r25, 0x00	; 0
    265e:	0e 94 36 05 	call	0xa6c	; 0xa6c <LedsbedieningpaneelRoodDichtAan>
            LedsbedieningpaneelRoodDichtUit(1);
    2662:	81 e0       	ldi	r24, 0x01	; 1
    2664:	90 e0       	ldi	r25, 0x00	; 0
    2666:	0e 94 4f 05 	call	0xa9e	; 0xa9e <LedsbedieningpaneelRoodDichtUit>
            LedsbedieningpaneelBlauwOpenenAan(0);
    266a:	80 e0       	ldi	r24, 0x00	; 0
    266c:	90 e0       	ldi	r25, 0x00	; 0
    266e:	0e 94 68 05 	call	0xad0	; 0xad0 <LedsbedieningpaneelBlauwOpenenAan>
            LedsbedieningpaneelBlauwOpenenUit(1);
    2672:	81 e0       	ldi	r24, 0x01	; 1
    2674:	90 e0       	ldi	r25, 0x00	; 0
    2676:	0e 94 81 05 	call	0xb02	; 0xb02 <LedsbedieningpaneelBlauwOpenenUit>
            LedsbedieningpaneelBlauwSluitenAan(0);
    267a:	80 e0       	ldi	r24, 0x00	; 0
    267c:	90 e0       	ldi	r25, 0x00	; 0
    267e:	0e 94 9a 05 	call	0xb34	; 0xb34 <LedsbedieningpaneelBlauwSluitenAan>
            LedsbedieningpaneelBlauwSluitenUit(1);
    2682:	81 e0       	ldi	r24, 0x01	; 1
    2684:	90 e0       	ldi	r25, 0x00	; 0
    2686:	0e 94 b3 05 	call	0xb66	; 0xb66 <LedsbedieningpaneelBlauwSluitenUit>
            LedsbedieningpaneelRoodOpenAan(0);
    268a:	80 e0       	ldi	r24, 0x00	; 0
    268c:	90 e0       	ldi	r25, 0x00	; 0
    268e:	0e 94 04 05 	call	0xa08	; 0xa08 <LedsbedieningpaneelRoodOpenAan>
            LedsbedieningpaneelRoodOpenUit(1);
    2692:	81 e0       	ldi	r24, 0x01	; 1
    2694:	90 e0       	ldi	r25, 0x00	; 0
    2696:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LedsbedieningpaneelRoodOpenUit>
            LedsbedieningpaneelGeelPersoonAan(0);
    269a:	80 e0       	ldi	r24, 0x00	; 0
    269c:	90 e0       	ldi	r25, 0x00	; 0
    269e:	0e 94 fe 05 	call	0xbfc	; 0xbfc <LedsbedieningpaneelGeelPersoonAan>
            LedsbedieningpaneelGeelPersoonUit(1);
    26a2:	81 e0       	ldi	r24, 0x01	; 1
    26a4:	90 e0       	ldi	r25, 0x00	; 0
    26a6:	0e 94 17 06 	call	0xc2e	; 0xc2e <LedsbedieningpaneelGeelPersoonUit>
            LedsbedieningpaneelNoodstopUit(1);
    26aa:	81 e0       	ldi	r24, 0x01	; 1
    26ac:	90 e0       	ldi	r25, 0x00	; 0
    26ae:	0e 94 49 06 	call	0xc92	; 0xc92 <LedsbedieningpaneelNoodstopUit>
            LedsbedieningpaneelNoodstopAan(0);
    26b2:	80 e0       	ldi	r24, 0x00	; 0
    26b4:	90 e0       	ldi	r25, 0x00	; 0
    26b6:	0e 94 30 06 	call	0xc60	; 0xc60 <LedsbedieningpaneelNoodstopAan>
            LedsbedieningpaneelGeelBootAan(0);
    26ba:	80 e0       	ldi	r24, 0x00	; 0
    26bc:	90 e0       	ldi	r25, 0x00	; 0
    26be:	0e 94 cc 05 	call	0xb98	; 0xb98 <LedsbedieningpaneelGeelBootAan>
            LedsbedieningpaneelGeelBootUit(1);
    26c2:	81 e0       	ldi	r24, 0x01	; 1
    26c4:	90 e0       	ldi	r25, 0x00	; 0
    26c6:	0e 94 e5 05 	call	0xbca	; 0xbca <LedsbedieningpaneelGeelBootUit>
                if (!(PINL & (1 << Button_Noodstop)))
    26ca:	e9 e0       	ldi	r30, 0x09	; 9
    26cc:	f1 e0       	ldi	r31, 0x01	; 1
    26ce:	80 81       	ld	r24, Z
    26d0:	88 2f       	mov	r24, r24
    26d2:	90 e0       	ldi	r25, 0x00	; 0
    26d4:	80 71       	andi	r24, 0x10	; 16
    26d6:	90 70       	andi	r25, 0x00	; 0
    26d8:	00 97       	sbiw	r24, 0x00	; 0
    26da:	61 f4       	brne	.+24     	; 0x26f4 <__stack+0x4f5>
                {
                    BrugbesturingAan++;
    26dc:	de 01       	movw	r26, r28
    26de:	ad 59       	subi	r26, 0x9D	; 157
    26e0:	bf 4f       	sbci	r27, 0xFF	; 255
    26e2:	fe 01       	movw	r30, r28
    26e4:	ed 59       	subi	r30, 0x9D	; 157
    26e6:	ff 4f       	sbci	r31, 0xFF	; 255
    26e8:	80 81       	ld	r24, Z
    26ea:	91 81       	ldd	r25, Z+1	; 0x01
    26ec:	01 96       	adiw	r24, 0x01	; 1
    26ee:	11 96       	adiw	r26, 0x01	; 1
    26f0:	9c 93       	st	X, r25
    26f2:	8e 93       	st	-X, r24
            if (!(PINL & (1 << Button_Noodstop)))
            {
                BrugbesturingAan++;
            }

        while ((BrugbesturingAan & 1) == 0)
    26f4:	fe 01       	movw	r30, r28
    26f6:	ed 59       	subi	r30, 0x9D	; 157
    26f8:	ff 4f       	sbci	r31, 0xFF	; 255
    26fa:	80 81       	ld	r24, Z
    26fc:	91 81       	ldd	r25, Z+1	; 0x01
    26fe:	81 70       	andi	r24, 0x01	; 1
    2700:	90 70       	andi	r25, 0x00	; 0
    2702:	00 97       	sbiw	r24, 0x00	; 0
    2704:	09 f4       	brne	.+2      	; 0x2708 <__stack+0x509>
    2706:	9c cf       	rjmp	.-200    	; 0x2640 <__stack+0x441>
        int BrugbesturingAan = 1;

        Slagbomenopen(1);
        h_bridge_set_percentage(0);

        while ((BrugbesturingAan & 1) != 0)
    2708:	fe 01       	movw	r30, r28
    270a:	ed 59       	subi	r30, 0x9D	; 157
    270c:	ff 4f       	sbci	r31, 0xFF	; 255
    270e:	80 81       	ld	r24, Z
    2710:	91 81       	ldd	r25, Z+1	; 0x01
    2712:	81 70       	andi	r24, 0x01	; 1
    2714:	90 70       	andi	r25, 0x00	; 0
    2716:	88 23       	and	r24, r24
    2718:	11 f0       	breq	.+4      	; 0x271e <__stack+0x51f>
    271a:	0c 94 96 09 	jmp	0x132c	; 0x132c <main+0x2ac>
    271e:	0c 94 52 09 	jmp	0x12a4	; 0x12a4 <main+0x224>

00002722 <__vector_20>:
    2722:	1f 92       	push	r1
    2724:	0f 92       	push	r0
    2726:	0f b6       	in	r0, 0x3f	; 63
    2728:	0f 92       	push	r0
    272a:	00 90 5b 00 	lds	r0, 0x005B
    272e:	0f 92       	push	r0
    2730:	11 24       	eor	r1, r1
    2732:	8f 93       	push	r24
    2734:	9f 93       	push	r25
    2736:	af 93       	push	r26
    2738:	bf 93       	push	r27
    273a:	ef 93       	push	r30
    273c:	ff 93       	push	r31
    273e:	df 93       	push	r29
    2740:	cf 93       	push	r28
    2742:	cd b7       	in	r28, 0x3d	; 61
    2744:	de b7       	in	r29, 0x3e	; 62
    2746:	e4 e8       	ldi	r30, 0x84	; 132
    2748:	f0 e0       	ldi	r31, 0x00	; 0
    274a:	84 e2       	ldi	r24, 0x24	; 36
    274c:	94 e6       	ldi	r25, 0x64	; 100
    274e:	91 83       	std	Z+1, r25	; 0x01
    2750:	80 83       	st	Z, r24
    2752:	ae e2       	ldi	r26, 0x2E	; 46
    2754:	b0 e0       	ldi	r27, 0x00	; 0
    2756:	ee e2       	ldi	r30, 0x2E	; 46
    2758:	f0 e0       	ldi	r31, 0x00	; 0
    275a:	80 81       	ld	r24, Z
    275c:	88 60       	ori	r24, 0x08	; 8
    275e:	8c 93       	st	X, r24
    2760:	a2 e0       	ldi	r26, 0x02	; 2
    2762:	b1 e0       	ldi	r27, 0x01	; 1
    2764:	e2 e0       	ldi	r30, 0x02	; 2
    2766:	f1 e0       	ldi	r31, 0x01	; 1
    2768:	80 81       	ld	r24, Z
    276a:	88 60       	ori	r24, 0x08	; 8
    276c:	8c 93       	st	X, r24
    276e:	cf 91       	pop	r28
    2770:	df 91       	pop	r29
    2772:	ff 91       	pop	r31
    2774:	ef 91       	pop	r30
    2776:	bf 91       	pop	r27
    2778:	af 91       	pop	r26
    277a:	9f 91       	pop	r25
    277c:	8f 91       	pop	r24
    277e:	0f 90       	pop	r0
    2780:	00 92 5b 00 	sts	0x005B, r0
    2784:	0f 90       	pop	r0
    2786:	0f be       	out	0x3f, r0	; 63
    2788:	0f 90       	pop	r0
    278a:	1f 90       	pop	r1
    278c:	18 95       	reti

0000278e <__vector_17>:
    278e:	1f 92       	push	r1
    2790:	0f 92       	push	r0
    2792:	0f b6       	in	r0, 0x3f	; 63
    2794:	0f 92       	push	r0
    2796:	00 90 5b 00 	lds	r0, 0x005B
    279a:	0f 92       	push	r0
    279c:	11 24       	eor	r1, r1
    279e:	8f 93       	push	r24
    27a0:	af 93       	push	r26
    27a2:	bf 93       	push	r27
    27a4:	ef 93       	push	r30
    27a6:	ff 93       	push	r31
    27a8:	df 93       	push	r29
    27aa:	cf 93       	push	r28
    27ac:	cd b7       	in	r28, 0x3d	; 61
    27ae:	de b7       	in	r29, 0x3e	; 62
    27b0:	ae e2       	ldi	r26, 0x2E	; 46
    27b2:	b0 e0       	ldi	r27, 0x00	; 0
    27b4:	ee e2       	ldi	r30, 0x2E	; 46
    27b6:	f0 e0       	ldi	r31, 0x00	; 0
    27b8:	80 81       	ld	r24, Z
    27ba:	87 7f       	andi	r24, 0xF7	; 247
    27bc:	8c 93       	st	X, r24
    27be:	cf 91       	pop	r28
    27c0:	df 91       	pop	r29
    27c2:	ff 91       	pop	r31
    27c4:	ef 91       	pop	r30
    27c6:	bf 91       	pop	r27
    27c8:	af 91       	pop	r26
    27ca:	8f 91       	pop	r24
    27cc:	0f 90       	pop	r0
    27ce:	00 92 5b 00 	sts	0x005B, r0
    27d2:	0f 90       	pop	r0
    27d4:	0f be       	out	0x3f, r0	; 63
    27d6:	0f 90       	pop	r0
    27d8:	1f 90       	pop	r1
    27da:	18 95       	reti

000027dc <__vector_18>:
    27dc:	1f 92       	push	r1
    27de:	0f 92       	push	r0
    27e0:	0f b6       	in	r0, 0x3f	; 63
    27e2:	0f 92       	push	r0
    27e4:	00 90 5b 00 	lds	r0, 0x005B
    27e8:	0f 92       	push	r0
    27ea:	11 24       	eor	r1, r1
    27ec:	8f 93       	push	r24
    27ee:	af 93       	push	r26
    27f0:	bf 93       	push	r27
    27f2:	ef 93       	push	r30
    27f4:	ff 93       	push	r31
    27f6:	df 93       	push	r29
    27f8:	cf 93       	push	r28
    27fa:	cd b7       	in	r28, 0x3d	; 61
    27fc:	de b7       	in	r29, 0x3e	; 62
    27fe:	a2 e0       	ldi	r26, 0x02	; 2
    2800:	b1 e0       	ldi	r27, 0x01	; 1
    2802:	e2 e0       	ldi	r30, 0x02	; 2
    2804:	f1 e0       	ldi	r31, 0x01	; 1
    2806:	80 81       	ld	r24, Z
    2808:	87 7f       	andi	r24, 0xF7	; 247
    280a:	8c 93       	st	X, r24
    280c:	cf 91       	pop	r28
    280e:	df 91       	pop	r29
    2810:	ff 91       	pop	r31
    2812:	ef 91       	pop	r30
    2814:	bf 91       	pop	r27
    2816:	af 91       	pop	r26
    2818:	8f 91       	pop	r24
    281a:	0f 90       	pop	r0
    281c:	00 92 5b 00 	sts	0x005B, r0
    2820:	0f 90       	pop	r0
    2822:	0f be       	out	0x3f, r0	; 63
    2824:	0f 90       	pop	r0
    2826:	1f 90       	pop	r1
    2828:	18 95       	reti

0000282a <init_servo>:
    282a:	df 93       	push	r29
    282c:	cf 93       	push	r28
    282e:	cd b7       	in	r28, 0x3d	; 61
    2830:	de b7       	in	r29, 0x3e	; 62
    2832:	ad e2       	ldi	r26, 0x2D	; 45
    2834:	b0 e0       	ldi	r27, 0x00	; 0
    2836:	ed e2       	ldi	r30, 0x2D	; 45
    2838:	f0 e0       	ldi	r31, 0x00	; 0
    283a:	80 81       	ld	r24, Z
    283c:	88 60       	ori	r24, 0x08	; 8
    283e:	8c 93       	st	X, r24
    2840:	a1 e0       	ldi	r26, 0x01	; 1
    2842:	b1 e0       	ldi	r27, 0x01	; 1
    2844:	e1 e0       	ldi	r30, 0x01	; 1
    2846:	f1 e0       	ldi	r31, 0x01	; 1
    2848:	80 81       	ld	r24, Z
    284a:	88 60       	ori	r24, 0x08	; 8
    284c:	8c 93       	st	X, r24
    284e:	e0 e8       	ldi	r30, 0x80	; 128
    2850:	f0 e0       	ldi	r31, 0x00	; 0
    2852:	10 82       	st	Z, r1
    2854:	e1 e8       	ldi	r30, 0x81	; 129
    2856:	f0 e0       	ldi	r31, 0x00	; 0
    2858:	82 e0       	ldi	r24, 0x02	; 2
    285a:	80 83       	st	Z, r24
    285c:	ef e6       	ldi	r30, 0x6F	; 111
    285e:	f0 e0       	ldi	r31, 0x00	; 0
    2860:	87 e0       	ldi	r24, 0x07	; 7
    2862:	80 83       	st	Z, r24
    2864:	e4 e8       	ldi	r30, 0x84	; 132
    2866:	f0 e0       	ldi	r31, 0x00	; 0
    2868:	84 e2       	ldi	r24, 0x24	; 36
    286a:	94 e6       	ldi	r25, 0x64	; 100
    286c:	91 83       	std	Z+1, r25	; 0x01
    286e:	80 83       	st	Z, r24
    2870:	80 e0       	ldi	r24, 0x00	; 0
    2872:	0e 94 42 14 	call	0x2884	; 0x2884 <servo1_set_percentage>
    2876:	80 e0       	ldi	r24, 0x00	; 0
    2878:	0e 94 81 14 	call	0x2902	; 0x2902 <servo2_set_percentage>
    287c:	78 94       	sei
    287e:	cf 91       	pop	r28
    2880:	df 91       	pop	r29
    2882:	08 95       	ret

00002884 <servo1_set_percentage>:
    2884:	0f 93       	push	r16
    2886:	1f 93       	push	r17
    2888:	df 93       	push	r29
    288a:	cf 93       	push	r28
    288c:	0f 92       	push	r0
    288e:	cd b7       	in	r28, 0x3d	; 61
    2890:	de b7       	in	r29, 0x3e	; 62
    2892:	89 83       	std	Y+1, r24	; 0x01
    2894:	89 81       	ldd	r24, Y+1	; 0x01
    2896:	8c 39       	cpi	r24, 0x9C	; 156
    2898:	74 f1       	brlt	.+92     	; 0x28f6 <servo1_set_percentage+0x72>
    289a:	89 81       	ldd	r24, Y+1	; 0x01
    289c:	85 36       	cpi	r24, 0x65	; 101
    289e:	5c f5       	brge	.+86     	; 0x28f6 <servo1_set_percentage+0x72>
    28a0:	08 e8       	ldi	r16, 0x88	; 136
    28a2:	10 e0       	ldi	r17, 0x00	; 0
    28a4:	89 81       	ldd	r24, Y+1	; 0x01
    28a6:	99 27       	eor	r25, r25
    28a8:	87 fd       	sbrc	r24, 7
    28aa:	90 95       	com	r25
    28ac:	a9 2f       	mov	r26, r25
    28ae:	b9 2f       	mov	r27, r25
    28b0:	bc 01       	movw	r22, r24
    28b2:	cd 01       	movw	r24, r26
    28b4:	0e 94 5e 15 	call	0x2abc	; 0x2abc <__floatsisf>
    28b8:	dc 01       	movw	r26, r24
    28ba:	cb 01       	movw	r24, r22
    28bc:	bc 01       	movw	r22, r24
    28be:	cd 01       	movw	r24, r26
    28c0:	20 e0       	ldi	r18, 0x00	; 0
    28c2:	30 e0       	ldi	r19, 0x00	; 0
    28c4:	40 e2       	ldi	r20, 0x20	; 32
    28c6:	51 e4       	ldi	r21, 0x41	; 65
    28c8:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    28cc:	dc 01       	movw	r26, r24
    28ce:	cb 01       	movw	r24, r22
    28d0:	bc 01       	movw	r22, r24
    28d2:	cd 01       	movw	r24, r26
    28d4:	20 e0       	ldi	r18, 0x00	; 0
    28d6:	38 eb       	ldi	r19, 0xB8	; 184
    28d8:	4f ed       	ldi	r20, 0xDF	; 223
    28da:	56 e4       	ldi	r21, 0x46	; 70
    28dc:	0e 94 c3 14 	call	0x2986	; 0x2986 <__addsf3>
    28e0:	dc 01       	movw	r26, r24
    28e2:	cb 01       	movw	r24, r22
    28e4:	bc 01       	movw	r22, r24
    28e6:	cd 01       	movw	r24, r26
    28e8:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    28ec:	dc 01       	movw	r26, r24
    28ee:	cb 01       	movw	r24, r22
    28f0:	f8 01       	movw	r30, r16
    28f2:	91 83       	std	Z+1, r25	; 0x01
    28f4:	80 83       	st	Z, r24
    28f6:	0f 90       	pop	r0
    28f8:	cf 91       	pop	r28
    28fa:	df 91       	pop	r29
    28fc:	1f 91       	pop	r17
    28fe:	0f 91       	pop	r16
    2900:	08 95       	ret

00002902 <servo2_set_percentage>:
    2902:	0f 93       	push	r16
    2904:	1f 93       	push	r17
    2906:	df 93       	push	r29
    2908:	cf 93       	push	r28
    290a:	0f 92       	push	r0
    290c:	cd b7       	in	r28, 0x3d	; 61
    290e:	de b7       	in	r29, 0x3e	; 62
    2910:	89 83       	std	Y+1, r24	; 0x01
    2912:	89 81       	ldd	r24, Y+1	; 0x01
    2914:	8c 39       	cpi	r24, 0x9C	; 156
    2916:	74 f1       	brlt	.+92     	; 0x2974 <servo2_set_percentage+0x72>
    2918:	89 81       	ldd	r24, Y+1	; 0x01
    291a:	85 36       	cpi	r24, 0x65	; 101
    291c:	5c f5       	brge	.+86     	; 0x2974 <servo2_set_percentage+0x72>
    291e:	0a e8       	ldi	r16, 0x8A	; 138
    2920:	10 e0       	ldi	r17, 0x00	; 0
    2922:	89 81       	ldd	r24, Y+1	; 0x01
    2924:	99 27       	eor	r25, r25
    2926:	87 fd       	sbrc	r24, 7
    2928:	90 95       	com	r25
    292a:	a9 2f       	mov	r26, r25
    292c:	b9 2f       	mov	r27, r25
    292e:	bc 01       	movw	r22, r24
    2930:	cd 01       	movw	r24, r26
    2932:	0e 94 5e 15 	call	0x2abc	; 0x2abc <__floatsisf>
    2936:	dc 01       	movw	r26, r24
    2938:	cb 01       	movw	r24, r22
    293a:	bc 01       	movw	r22, r24
    293c:	cd 01       	movw	r24, r26
    293e:	20 e0       	ldi	r18, 0x00	; 0
    2940:	30 e0       	ldi	r19, 0x00	; 0
    2942:	40 e2       	ldi	r20, 0x20	; 32
    2944:	51 e4       	ldi	r21, 0x41	; 65
    2946:	0e 94 13 16 	call	0x2c26	; 0x2c26 <__mulsf3>
    294a:	dc 01       	movw	r26, r24
    294c:	cb 01       	movw	r24, r22
    294e:	bc 01       	movw	r22, r24
    2950:	cd 01       	movw	r24, r26
    2952:	20 e0       	ldi	r18, 0x00	; 0
    2954:	38 eb       	ldi	r19, 0xB8	; 184
    2956:	4f ed       	ldi	r20, 0xDF	; 223
    2958:	56 e4       	ldi	r21, 0x46	; 70
    295a:	0e 94 c3 14 	call	0x2986	; 0x2986 <__addsf3>
    295e:	dc 01       	movw	r26, r24
    2960:	cb 01       	movw	r24, r22
    2962:	bc 01       	movw	r22, r24
    2964:	cd 01       	movw	r24, r26
    2966:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fixunssfsi>
    296a:	dc 01       	movw	r26, r24
    296c:	cb 01       	movw	r24, r22
    296e:	f8 01       	movw	r30, r16
    2970:	91 83       	std	Z+1, r25	; 0x01
    2972:	80 83       	st	Z, r24
    2974:	0f 90       	pop	r0
    2976:	cf 91       	pop	r28
    2978:	df 91       	pop	r29
    297a:	1f 91       	pop	r17
    297c:	0f 91       	pop	r16
    297e:	08 95       	ret

00002980 <exit>:
    2980:	f8 94       	cli
    2982:	e3 c1       	rjmp	.+966    	; 0x2d4a <_exit>

00002984 <__subsf3>:
    2984:	50 58       	subi	r21, 0x80	; 128

00002986 <__addsf3>:
    2986:	bb 27       	eor	r27, r27
    2988:	aa 27       	eor	r26, r26
    298a:	0e d0       	rcall	.+28     	; 0x29a8 <__addsf3x>
    298c:	0d c1       	rjmp	.+538    	; 0x2ba8 <__fp_round>
    298e:	fe d0       	rcall	.+508    	; 0x2b8c <__fp_pscA>
    2990:	30 f0       	brcs	.+12     	; 0x299e <__addsf3+0x18>
    2992:	03 d1       	rcall	.+518    	; 0x2b9a <__fp_pscB>
    2994:	20 f0       	brcs	.+8      	; 0x299e <__addsf3+0x18>
    2996:	31 f4       	brne	.+12     	; 0x29a4 <__addsf3+0x1e>
    2998:	9f 3f       	cpi	r25, 0xFF	; 255
    299a:	11 f4       	brne	.+4      	; 0x29a0 <__addsf3+0x1a>
    299c:	1e f4       	brtc	.+6      	; 0x29a4 <__addsf3+0x1e>
    299e:	f3 c0       	rjmp	.+486    	; 0x2b86 <__fp_nan>
    29a0:	0e f4       	brtc	.+2      	; 0x29a4 <__addsf3+0x1e>
    29a2:	e0 95       	com	r30
    29a4:	e7 fb       	bst	r30, 7
    29a6:	e9 c0       	rjmp	.+466    	; 0x2b7a <__fp_inf>

000029a8 <__addsf3x>:
    29a8:	e9 2f       	mov	r30, r25
    29aa:	0f d1       	rcall	.+542    	; 0x2bca <__fp_split3>
    29ac:	80 f3       	brcs	.-32     	; 0x298e <__addsf3+0x8>
    29ae:	ba 17       	cp	r27, r26
    29b0:	62 07       	cpc	r22, r18
    29b2:	73 07       	cpc	r23, r19
    29b4:	84 07       	cpc	r24, r20
    29b6:	95 07       	cpc	r25, r21
    29b8:	18 f0       	brcs	.+6      	; 0x29c0 <__addsf3x+0x18>
    29ba:	99 f4       	brne	.+38     	; 0x29e2 <__addsf3x+0x3a>
    29bc:	c6 f5       	brtc	.+112    	; 0x2a2e <__addsf3x+0x86>
    29be:	27 c1       	rjmp	.+590    	; 0x2c0e <__fp_zero>
    29c0:	0e f4       	brtc	.+2      	; 0x29c4 <__addsf3x+0x1c>
    29c2:	e0 95       	com	r30
    29c4:	0b 2e       	mov	r0, r27
    29c6:	ba 2f       	mov	r27, r26
    29c8:	a0 2d       	mov	r26, r0
    29ca:	06 2e       	mov	r0, r22
    29cc:	62 2f       	mov	r22, r18
    29ce:	20 2d       	mov	r18, r0
    29d0:	07 2e       	mov	r0, r23
    29d2:	73 2f       	mov	r23, r19
    29d4:	30 2d       	mov	r19, r0
    29d6:	08 2e       	mov	r0, r24
    29d8:	84 2f       	mov	r24, r20
    29da:	40 2d       	mov	r20, r0
    29dc:	09 2e       	mov	r0, r25
    29de:	95 2f       	mov	r25, r21
    29e0:	50 2d       	mov	r21, r0
    29e2:	ff 27       	eor	r31, r31
    29e4:	59 1b       	sub	r21, r25
    29e6:	99 f0       	breq	.+38     	; 0x2a0e <__addsf3x+0x66>
    29e8:	59 3f       	cpi	r21, 0xF9	; 249
    29ea:	50 f4       	brcc	.+20     	; 0x2a00 <__addsf3x+0x58>
    29ec:	50 3e       	cpi	r21, 0xE0	; 224
    29ee:	68 f1       	brcs	.+90     	; 0x2a4a <__addsf3x+0xa2>
    29f0:	1a 16       	cp	r1, r26
    29f2:	f0 40       	sbci	r31, 0x00	; 0
    29f4:	a2 2f       	mov	r26, r18
    29f6:	23 2f       	mov	r18, r19
    29f8:	34 2f       	mov	r19, r20
    29fa:	44 27       	eor	r20, r20
    29fc:	58 5f       	subi	r21, 0xF8	; 248
    29fe:	f3 cf       	rjmp	.-26     	; 0x29e6 <__addsf3x+0x3e>
    2a00:	46 95       	lsr	r20
    2a02:	37 95       	ror	r19
    2a04:	27 95       	ror	r18
    2a06:	a7 95       	ror	r26
    2a08:	f0 40       	sbci	r31, 0x00	; 0
    2a0a:	53 95       	inc	r21
    2a0c:	c9 f7       	brne	.-14     	; 0x2a00 <__addsf3x+0x58>
    2a0e:	7e f4       	brtc	.+30     	; 0x2a2e <__addsf3x+0x86>
    2a10:	1f 16       	cp	r1, r31
    2a12:	ba 0b       	sbc	r27, r26
    2a14:	62 0b       	sbc	r22, r18
    2a16:	73 0b       	sbc	r23, r19
    2a18:	84 0b       	sbc	r24, r20
    2a1a:	ba f0       	brmi	.+46     	; 0x2a4a <__addsf3x+0xa2>
    2a1c:	91 50       	subi	r25, 0x01	; 1
    2a1e:	a1 f0       	breq	.+40     	; 0x2a48 <__addsf3x+0xa0>
    2a20:	ff 0f       	add	r31, r31
    2a22:	bb 1f       	adc	r27, r27
    2a24:	66 1f       	adc	r22, r22
    2a26:	77 1f       	adc	r23, r23
    2a28:	88 1f       	adc	r24, r24
    2a2a:	c2 f7       	brpl	.-16     	; 0x2a1c <__addsf3x+0x74>
    2a2c:	0e c0       	rjmp	.+28     	; 0x2a4a <__addsf3x+0xa2>
    2a2e:	ba 0f       	add	r27, r26
    2a30:	62 1f       	adc	r22, r18
    2a32:	73 1f       	adc	r23, r19
    2a34:	84 1f       	adc	r24, r20
    2a36:	48 f4       	brcc	.+18     	; 0x2a4a <__addsf3x+0xa2>
    2a38:	87 95       	ror	r24
    2a3a:	77 95       	ror	r23
    2a3c:	67 95       	ror	r22
    2a3e:	b7 95       	ror	r27
    2a40:	f7 95       	ror	r31
    2a42:	9e 3f       	cpi	r25, 0xFE	; 254
    2a44:	08 f0       	brcs	.+2      	; 0x2a48 <__addsf3x+0xa0>
    2a46:	ae cf       	rjmp	.-164    	; 0x29a4 <__addsf3+0x1e>
    2a48:	93 95       	inc	r25
    2a4a:	88 0f       	add	r24, r24
    2a4c:	08 f0       	brcs	.+2      	; 0x2a50 <__addsf3x+0xa8>
    2a4e:	99 27       	eor	r25, r25
    2a50:	ee 0f       	add	r30, r30
    2a52:	97 95       	ror	r25
    2a54:	87 95       	ror	r24
    2a56:	08 95       	ret

00002a58 <__cmpsf2>:
    2a58:	6c d0       	rcall	.+216    	; 0x2b32 <__fp_cmp>
    2a5a:	08 f4       	brcc	.+2      	; 0x2a5e <__cmpsf2+0x6>
    2a5c:	81 e0       	ldi	r24, 0x01	; 1
    2a5e:	08 95       	ret

00002a60 <__fixunssfsi>:
    2a60:	bc d0       	rcall	.+376    	; 0x2bda <__fp_splitA>
    2a62:	88 f0       	brcs	.+34     	; 0x2a86 <__fixunssfsi+0x26>
    2a64:	9f 57       	subi	r25, 0x7F	; 127
    2a66:	90 f0       	brcs	.+36     	; 0x2a8c <__fixunssfsi+0x2c>
    2a68:	b9 2f       	mov	r27, r25
    2a6a:	99 27       	eor	r25, r25
    2a6c:	b7 51       	subi	r27, 0x17	; 23
    2a6e:	a0 f0       	brcs	.+40     	; 0x2a98 <__fixunssfsi+0x38>
    2a70:	d1 f0       	breq	.+52     	; 0x2aa6 <__fixunssfsi+0x46>
    2a72:	66 0f       	add	r22, r22
    2a74:	77 1f       	adc	r23, r23
    2a76:	88 1f       	adc	r24, r24
    2a78:	99 1f       	adc	r25, r25
    2a7a:	1a f0       	brmi	.+6      	; 0x2a82 <__fixunssfsi+0x22>
    2a7c:	ba 95       	dec	r27
    2a7e:	c9 f7       	brne	.-14     	; 0x2a72 <__fixunssfsi+0x12>
    2a80:	12 c0       	rjmp	.+36     	; 0x2aa6 <__fixunssfsi+0x46>
    2a82:	b1 30       	cpi	r27, 0x01	; 1
    2a84:	81 f0       	breq	.+32     	; 0x2aa6 <__fixunssfsi+0x46>
    2a86:	c3 d0       	rcall	.+390    	; 0x2c0e <__fp_zero>
    2a88:	b1 e0       	ldi	r27, 0x01	; 1
    2a8a:	08 95       	ret
    2a8c:	c0 c0       	rjmp	.+384    	; 0x2c0e <__fp_zero>
    2a8e:	67 2f       	mov	r22, r23
    2a90:	78 2f       	mov	r23, r24
    2a92:	88 27       	eor	r24, r24
    2a94:	b8 5f       	subi	r27, 0xF8	; 248
    2a96:	39 f0       	breq	.+14     	; 0x2aa6 <__fixunssfsi+0x46>
    2a98:	b9 3f       	cpi	r27, 0xF9	; 249
    2a9a:	cc f3       	brlt	.-14     	; 0x2a8e <__fixunssfsi+0x2e>
    2a9c:	86 95       	lsr	r24
    2a9e:	77 95       	ror	r23
    2aa0:	67 95       	ror	r22
    2aa2:	b3 95       	inc	r27
    2aa4:	d9 f7       	brne	.-10     	; 0x2a9c <__fixunssfsi+0x3c>
    2aa6:	3e f4       	brtc	.+14     	; 0x2ab6 <__fixunssfsi+0x56>
    2aa8:	90 95       	com	r25
    2aaa:	80 95       	com	r24
    2aac:	70 95       	com	r23
    2aae:	61 95       	neg	r22
    2ab0:	7f 4f       	sbci	r23, 0xFF	; 255
    2ab2:	8f 4f       	sbci	r24, 0xFF	; 255
    2ab4:	9f 4f       	sbci	r25, 0xFF	; 255
    2ab6:	08 95       	ret

00002ab8 <__floatunsisf>:
    2ab8:	e8 94       	clt
    2aba:	09 c0       	rjmp	.+18     	; 0x2ace <__floatsisf+0x12>

00002abc <__floatsisf>:
    2abc:	97 fb       	bst	r25, 7
    2abe:	3e f4       	brtc	.+14     	; 0x2ace <__floatsisf+0x12>
    2ac0:	90 95       	com	r25
    2ac2:	80 95       	com	r24
    2ac4:	70 95       	com	r23
    2ac6:	61 95       	neg	r22
    2ac8:	7f 4f       	sbci	r23, 0xFF	; 255
    2aca:	8f 4f       	sbci	r24, 0xFF	; 255
    2acc:	9f 4f       	sbci	r25, 0xFF	; 255
    2ace:	99 23       	and	r25, r25
    2ad0:	a9 f0       	breq	.+42     	; 0x2afc <__floatsisf+0x40>
    2ad2:	f9 2f       	mov	r31, r25
    2ad4:	96 e9       	ldi	r25, 0x96	; 150
    2ad6:	bb 27       	eor	r27, r27
    2ad8:	93 95       	inc	r25
    2ada:	f6 95       	lsr	r31
    2adc:	87 95       	ror	r24
    2ade:	77 95       	ror	r23
    2ae0:	67 95       	ror	r22
    2ae2:	b7 95       	ror	r27
    2ae4:	f1 11       	cpse	r31, r1
    2ae6:	f8 cf       	rjmp	.-16     	; 0x2ad8 <__floatsisf+0x1c>
    2ae8:	fa f4       	brpl	.+62     	; 0x2b28 <__floatsisf+0x6c>
    2aea:	bb 0f       	add	r27, r27
    2aec:	11 f4       	brne	.+4      	; 0x2af2 <__floatsisf+0x36>
    2aee:	60 ff       	sbrs	r22, 0
    2af0:	1b c0       	rjmp	.+54     	; 0x2b28 <__floatsisf+0x6c>
    2af2:	6f 5f       	subi	r22, 0xFF	; 255
    2af4:	7f 4f       	sbci	r23, 0xFF	; 255
    2af6:	8f 4f       	sbci	r24, 0xFF	; 255
    2af8:	9f 4f       	sbci	r25, 0xFF	; 255
    2afa:	16 c0       	rjmp	.+44     	; 0x2b28 <__floatsisf+0x6c>
    2afc:	88 23       	and	r24, r24
    2afe:	11 f0       	breq	.+4      	; 0x2b04 <__floatsisf+0x48>
    2b00:	96 e9       	ldi	r25, 0x96	; 150
    2b02:	11 c0       	rjmp	.+34     	; 0x2b26 <__floatsisf+0x6a>
    2b04:	77 23       	and	r23, r23
    2b06:	21 f0       	breq	.+8      	; 0x2b10 <__floatsisf+0x54>
    2b08:	9e e8       	ldi	r25, 0x8E	; 142
    2b0a:	87 2f       	mov	r24, r23
    2b0c:	76 2f       	mov	r23, r22
    2b0e:	05 c0       	rjmp	.+10     	; 0x2b1a <__floatsisf+0x5e>
    2b10:	66 23       	and	r22, r22
    2b12:	71 f0       	breq	.+28     	; 0x2b30 <__floatsisf+0x74>
    2b14:	96 e8       	ldi	r25, 0x86	; 134
    2b16:	86 2f       	mov	r24, r22
    2b18:	70 e0       	ldi	r23, 0x00	; 0
    2b1a:	60 e0       	ldi	r22, 0x00	; 0
    2b1c:	2a f0       	brmi	.+10     	; 0x2b28 <__floatsisf+0x6c>
    2b1e:	9a 95       	dec	r25
    2b20:	66 0f       	add	r22, r22
    2b22:	77 1f       	adc	r23, r23
    2b24:	88 1f       	adc	r24, r24
    2b26:	da f7       	brpl	.-10     	; 0x2b1e <__floatsisf+0x62>
    2b28:	88 0f       	add	r24, r24
    2b2a:	96 95       	lsr	r25
    2b2c:	87 95       	ror	r24
    2b2e:	97 f9       	bld	r25, 7
    2b30:	08 95       	ret

00002b32 <__fp_cmp>:
    2b32:	99 0f       	add	r25, r25
    2b34:	00 08       	sbc	r0, r0
    2b36:	55 0f       	add	r21, r21
    2b38:	aa 0b       	sbc	r26, r26
    2b3a:	e0 e8       	ldi	r30, 0x80	; 128
    2b3c:	fe ef       	ldi	r31, 0xFE	; 254
    2b3e:	16 16       	cp	r1, r22
    2b40:	17 06       	cpc	r1, r23
    2b42:	e8 07       	cpc	r30, r24
    2b44:	f9 07       	cpc	r31, r25
    2b46:	c0 f0       	brcs	.+48     	; 0x2b78 <__fp_cmp+0x46>
    2b48:	12 16       	cp	r1, r18
    2b4a:	13 06       	cpc	r1, r19
    2b4c:	e4 07       	cpc	r30, r20
    2b4e:	f5 07       	cpc	r31, r21
    2b50:	98 f0       	brcs	.+38     	; 0x2b78 <__fp_cmp+0x46>
    2b52:	62 1b       	sub	r22, r18
    2b54:	73 0b       	sbc	r23, r19
    2b56:	84 0b       	sbc	r24, r20
    2b58:	95 0b       	sbc	r25, r21
    2b5a:	39 f4       	brne	.+14     	; 0x2b6a <__fp_cmp+0x38>
    2b5c:	0a 26       	eor	r0, r26
    2b5e:	61 f0       	breq	.+24     	; 0x2b78 <__fp_cmp+0x46>
    2b60:	23 2b       	or	r18, r19
    2b62:	24 2b       	or	r18, r20
    2b64:	25 2b       	or	r18, r21
    2b66:	21 f4       	brne	.+8      	; 0x2b70 <__fp_cmp+0x3e>
    2b68:	08 95       	ret
    2b6a:	0a 26       	eor	r0, r26
    2b6c:	09 f4       	brne	.+2      	; 0x2b70 <__fp_cmp+0x3e>
    2b6e:	a1 40       	sbci	r26, 0x01	; 1
    2b70:	a6 95       	lsr	r26
    2b72:	8f ef       	ldi	r24, 0xFF	; 255
    2b74:	81 1d       	adc	r24, r1
    2b76:	81 1d       	adc	r24, r1
    2b78:	08 95       	ret

00002b7a <__fp_inf>:
    2b7a:	97 f9       	bld	r25, 7
    2b7c:	9f 67       	ori	r25, 0x7F	; 127
    2b7e:	80 e8       	ldi	r24, 0x80	; 128
    2b80:	70 e0       	ldi	r23, 0x00	; 0
    2b82:	60 e0       	ldi	r22, 0x00	; 0
    2b84:	08 95       	ret

00002b86 <__fp_nan>:
    2b86:	9f ef       	ldi	r25, 0xFF	; 255
    2b88:	80 ec       	ldi	r24, 0xC0	; 192
    2b8a:	08 95       	ret

00002b8c <__fp_pscA>:
    2b8c:	00 24       	eor	r0, r0
    2b8e:	0a 94       	dec	r0
    2b90:	16 16       	cp	r1, r22
    2b92:	17 06       	cpc	r1, r23
    2b94:	18 06       	cpc	r1, r24
    2b96:	09 06       	cpc	r0, r25
    2b98:	08 95       	ret

00002b9a <__fp_pscB>:
    2b9a:	00 24       	eor	r0, r0
    2b9c:	0a 94       	dec	r0
    2b9e:	12 16       	cp	r1, r18
    2ba0:	13 06       	cpc	r1, r19
    2ba2:	14 06       	cpc	r1, r20
    2ba4:	05 06       	cpc	r0, r21
    2ba6:	08 95       	ret

00002ba8 <__fp_round>:
    2ba8:	09 2e       	mov	r0, r25
    2baa:	03 94       	inc	r0
    2bac:	00 0c       	add	r0, r0
    2bae:	11 f4       	brne	.+4      	; 0x2bb4 <__fp_round+0xc>
    2bb0:	88 23       	and	r24, r24
    2bb2:	52 f0       	brmi	.+20     	; 0x2bc8 <__fp_round+0x20>
    2bb4:	bb 0f       	add	r27, r27
    2bb6:	40 f4       	brcc	.+16     	; 0x2bc8 <__fp_round+0x20>
    2bb8:	bf 2b       	or	r27, r31
    2bba:	11 f4       	brne	.+4      	; 0x2bc0 <__fp_round+0x18>
    2bbc:	60 ff       	sbrs	r22, 0
    2bbe:	04 c0       	rjmp	.+8      	; 0x2bc8 <__fp_round+0x20>
    2bc0:	6f 5f       	subi	r22, 0xFF	; 255
    2bc2:	7f 4f       	sbci	r23, 0xFF	; 255
    2bc4:	8f 4f       	sbci	r24, 0xFF	; 255
    2bc6:	9f 4f       	sbci	r25, 0xFF	; 255
    2bc8:	08 95       	ret

00002bca <__fp_split3>:
    2bca:	57 fd       	sbrc	r21, 7
    2bcc:	90 58       	subi	r25, 0x80	; 128
    2bce:	44 0f       	add	r20, r20
    2bd0:	55 1f       	adc	r21, r21
    2bd2:	59 f0       	breq	.+22     	; 0x2bea <__fp_splitA+0x10>
    2bd4:	5f 3f       	cpi	r21, 0xFF	; 255
    2bd6:	71 f0       	breq	.+28     	; 0x2bf4 <__fp_splitA+0x1a>
    2bd8:	47 95       	ror	r20

00002bda <__fp_splitA>:
    2bda:	88 0f       	add	r24, r24
    2bdc:	97 fb       	bst	r25, 7
    2bde:	99 1f       	adc	r25, r25
    2be0:	61 f0       	breq	.+24     	; 0x2bfa <__fp_splitA+0x20>
    2be2:	9f 3f       	cpi	r25, 0xFF	; 255
    2be4:	79 f0       	breq	.+30     	; 0x2c04 <__fp_splitA+0x2a>
    2be6:	87 95       	ror	r24
    2be8:	08 95       	ret
    2bea:	12 16       	cp	r1, r18
    2bec:	13 06       	cpc	r1, r19
    2bee:	14 06       	cpc	r1, r20
    2bf0:	55 1f       	adc	r21, r21
    2bf2:	f2 cf       	rjmp	.-28     	; 0x2bd8 <__fp_split3+0xe>
    2bf4:	46 95       	lsr	r20
    2bf6:	f1 df       	rcall	.-30     	; 0x2bda <__fp_splitA>
    2bf8:	08 c0       	rjmp	.+16     	; 0x2c0a <__fp_splitA+0x30>
    2bfa:	16 16       	cp	r1, r22
    2bfc:	17 06       	cpc	r1, r23
    2bfe:	18 06       	cpc	r1, r24
    2c00:	99 1f       	adc	r25, r25
    2c02:	f1 cf       	rjmp	.-30     	; 0x2be6 <__fp_splitA+0xc>
    2c04:	86 95       	lsr	r24
    2c06:	71 05       	cpc	r23, r1
    2c08:	61 05       	cpc	r22, r1
    2c0a:	08 94       	sec
    2c0c:	08 95       	ret

00002c0e <__fp_zero>:
    2c0e:	e8 94       	clt

00002c10 <__fp_szero>:
    2c10:	bb 27       	eor	r27, r27
    2c12:	66 27       	eor	r22, r22
    2c14:	77 27       	eor	r23, r23
    2c16:	86 2f       	mov	r24, r22
    2c18:	97 2f       	mov	r25, r23
    2c1a:	97 f9       	bld	r25, 7
    2c1c:	08 95       	ret

00002c1e <__gesf2>:
    2c1e:	89 df       	rcall	.-238    	; 0x2b32 <__fp_cmp>
    2c20:	08 f4       	brcc	.+2      	; 0x2c24 <__gesf2+0x6>
    2c22:	8f ef       	ldi	r24, 0xFF	; 255
    2c24:	08 95       	ret

00002c26 <__mulsf3>:
    2c26:	0a d0       	rcall	.+20     	; 0x2c3c <__mulsf3x>
    2c28:	bf cf       	rjmp	.-130    	; 0x2ba8 <__fp_round>
    2c2a:	b0 df       	rcall	.-160    	; 0x2b8c <__fp_pscA>
    2c2c:	28 f0       	brcs	.+10     	; 0x2c38 <__mulsf3+0x12>
    2c2e:	b5 df       	rcall	.-150    	; 0x2b9a <__fp_pscB>
    2c30:	18 f0       	brcs	.+6      	; 0x2c38 <__mulsf3+0x12>
    2c32:	95 23       	and	r25, r21
    2c34:	09 f0       	breq	.+2      	; 0x2c38 <__mulsf3+0x12>
    2c36:	a1 cf       	rjmp	.-190    	; 0x2b7a <__fp_inf>
    2c38:	a6 cf       	rjmp	.-180    	; 0x2b86 <__fp_nan>
    2c3a:	ea cf       	rjmp	.-44     	; 0x2c10 <__fp_szero>

00002c3c <__mulsf3x>:
    2c3c:	c6 df       	rcall	.-116    	; 0x2bca <__fp_split3>
    2c3e:	a8 f3       	brcs	.-22     	; 0x2c2a <__mulsf3+0x4>

00002c40 <__mulsf3_pse>:
    2c40:	99 23       	and	r25, r25
    2c42:	d9 f3       	breq	.-10     	; 0x2c3a <__mulsf3+0x14>
    2c44:	55 23       	and	r21, r21
    2c46:	c9 f3       	breq	.-14     	; 0x2c3a <__mulsf3+0x14>
    2c48:	95 0f       	add	r25, r21
    2c4a:	50 e0       	ldi	r21, 0x00	; 0
    2c4c:	55 1f       	adc	r21, r21
    2c4e:	aa 27       	eor	r26, r26
    2c50:	ee 27       	eor	r30, r30
    2c52:	ff 27       	eor	r31, r31
    2c54:	bb 27       	eor	r27, r27
    2c56:	00 24       	eor	r0, r0
    2c58:	08 94       	sec
    2c5a:	67 95       	ror	r22
    2c5c:	20 f4       	brcc	.+8      	; 0x2c66 <__mulsf3_pse+0x26>
    2c5e:	e2 0f       	add	r30, r18
    2c60:	f3 1f       	adc	r31, r19
    2c62:	b4 1f       	adc	r27, r20
    2c64:	0a 1e       	adc	r0, r26
    2c66:	22 0f       	add	r18, r18
    2c68:	33 1f       	adc	r19, r19
    2c6a:	44 1f       	adc	r20, r20
    2c6c:	aa 1f       	adc	r26, r26
    2c6e:	66 95       	lsr	r22
    2c70:	a9 f7       	brne	.-22     	; 0x2c5c <__mulsf3_pse+0x1c>
    2c72:	77 95       	ror	r23
    2c74:	30 f4       	brcc	.+12     	; 0x2c82 <__mulsf3_pse+0x42>
    2c76:	f3 0f       	add	r31, r19
    2c78:	b4 1f       	adc	r27, r20
    2c7a:	0a 1e       	adc	r0, r26
    2c7c:	12 1e       	adc	r1, r18
    2c7e:	08 f4       	brcc	.+2      	; 0x2c82 <__mulsf3_pse+0x42>
    2c80:	63 95       	inc	r22
    2c82:	33 0f       	add	r19, r19
    2c84:	44 1f       	adc	r20, r20
    2c86:	aa 1f       	adc	r26, r26
    2c88:	22 1f       	adc	r18, r18
    2c8a:	76 95       	lsr	r23
    2c8c:	99 f7       	brne	.-26     	; 0x2c74 <__mulsf3_pse+0x34>
    2c8e:	87 95       	ror	r24
    2c90:	20 f4       	brcc	.+8      	; 0x2c9a <__mulsf3_pse+0x5a>
    2c92:	b4 0f       	add	r27, r20
    2c94:	0a 1e       	adc	r0, r26
    2c96:	12 1e       	adc	r1, r18
    2c98:	63 1f       	adc	r22, r19
    2c9a:	44 0f       	add	r20, r20
    2c9c:	aa 1f       	adc	r26, r26
    2c9e:	22 1f       	adc	r18, r18
    2ca0:	33 1f       	adc	r19, r19
    2ca2:	86 95       	lsr	r24
    2ca4:	a9 f7       	brne	.-22     	; 0x2c90 <__mulsf3_pse+0x50>
    2ca6:	86 2f       	mov	r24, r22
    2ca8:	71 2d       	mov	r23, r1
    2caa:	60 2d       	mov	r22, r0
    2cac:	11 24       	eor	r1, r1
    2cae:	9f 57       	subi	r25, 0x7F	; 127
    2cb0:	50 40       	sbci	r21, 0x00	; 0
    2cb2:	8a f0       	brmi	.+34     	; 0x2cd6 <__mulsf3_pse+0x96>
    2cb4:	e1 f0       	breq	.+56     	; 0x2cee <__mulsf3_pse+0xae>
    2cb6:	88 23       	and	r24, r24
    2cb8:	4a f0       	brmi	.+18     	; 0x2ccc <__mulsf3_pse+0x8c>
    2cba:	ee 0f       	add	r30, r30
    2cbc:	ff 1f       	adc	r31, r31
    2cbe:	bb 1f       	adc	r27, r27
    2cc0:	66 1f       	adc	r22, r22
    2cc2:	77 1f       	adc	r23, r23
    2cc4:	88 1f       	adc	r24, r24
    2cc6:	91 50       	subi	r25, 0x01	; 1
    2cc8:	50 40       	sbci	r21, 0x00	; 0
    2cca:	a9 f7       	brne	.-22     	; 0x2cb6 <__mulsf3_pse+0x76>
    2ccc:	9e 3f       	cpi	r25, 0xFE	; 254
    2cce:	51 05       	cpc	r21, r1
    2cd0:	70 f0       	brcs	.+28     	; 0x2cee <__mulsf3_pse+0xae>
    2cd2:	53 cf       	rjmp	.-346    	; 0x2b7a <__fp_inf>
    2cd4:	9d cf       	rjmp	.-198    	; 0x2c10 <__fp_szero>
    2cd6:	5f 3f       	cpi	r21, 0xFF	; 255
    2cd8:	ec f3       	brlt	.-6      	; 0x2cd4 <__mulsf3_pse+0x94>
    2cda:	98 3e       	cpi	r25, 0xE8	; 232
    2cdc:	dc f3       	brlt	.-10     	; 0x2cd4 <__mulsf3_pse+0x94>
    2cde:	86 95       	lsr	r24
    2ce0:	77 95       	ror	r23
    2ce2:	67 95       	ror	r22
    2ce4:	b7 95       	ror	r27
    2ce6:	f7 95       	ror	r31
    2ce8:	e7 95       	ror	r30
    2cea:	9f 5f       	subi	r25, 0xFF	; 255
    2cec:	c1 f7       	brne	.-16     	; 0x2cde <__mulsf3_pse+0x9e>
    2cee:	fe 2b       	or	r31, r30
    2cf0:	88 0f       	add	r24, r24
    2cf2:	91 1d       	adc	r25, r1
    2cf4:	96 95       	lsr	r25
    2cf6:	87 95       	ror	r24
    2cf8:	97 f9       	bld	r25, 7
    2cfa:	08 95       	ret

00002cfc <__divmodhi4>:
    2cfc:	97 fb       	bst	r25, 7
    2cfe:	09 2e       	mov	r0, r25
    2d00:	07 26       	eor	r0, r23
    2d02:	0a d0       	rcall	.+20     	; 0x2d18 <__divmodhi4_neg1>
    2d04:	77 fd       	sbrc	r23, 7
    2d06:	04 d0       	rcall	.+8      	; 0x2d10 <__divmodhi4_neg2>
    2d08:	0c d0       	rcall	.+24     	; 0x2d22 <__udivmodhi4>
    2d0a:	06 d0       	rcall	.+12     	; 0x2d18 <__divmodhi4_neg1>
    2d0c:	00 20       	and	r0, r0
    2d0e:	1a f4       	brpl	.+6      	; 0x2d16 <__divmodhi4_exit>

00002d10 <__divmodhi4_neg2>:
    2d10:	70 95       	com	r23
    2d12:	61 95       	neg	r22
    2d14:	7f 4f       	sbci	r23, 0xFF	; 255

00002d16 <__divmodhi4_exit>:
    2d16:	08 95       	ret

00002d18 <__divmodhi4_neg1>:
    2d18:	f6 f7       	brtc	.-4      	; 0x2d16 <__divmodhi4_exit>
    2d1a:	90 95       	com	r25
    2d1c:	81 95       	neg	r24
    2d1e:	9f 4f       	sbci	r25, 0xFF	; 255
    2d20:	08 95       	ret

00002d22 <__udivmodhi4>:
    2d22:	aa 1b       	sub	r26, r26
    2d24:	bb 1b       	sub	r27, r27
    2d26:	51 e1       	ldi	r21, 0x11	; 17
    2d28:	07 c0       	rjmp	.+14     	; 0x2d38 <__udivmodhi4_ep>

00002d2a <__udivmodhi4_loop>:
    2d2a:	aa 1f       	adc	r26, r26
    2d2c:	bb 1f       	adc	r27, r27
    2d2e:	a6 17       	cp	r26, r22
    2d30:	b7 07       	cpc	r27, r23
    2d32:	10 f0       	brcs	.+4      	; 0x2d38 <__udivmodhi4_ep>
    2d34:	a6 1b       	sub	r26, r22
    2d36:	b7 0b       	sbc	r27, r23

00002d38 <__udivmodhi4_ep>:
    2d38:	88 1f       	adc	r24, r24
    2d3a:	99 1f       	adc	r25, r25
    2d3c:	5a 95       	dec	r21
    2d3e:	a9 f7       	brne	.-22     	; 0x2d2a <__udivmodhi4_loop>
    2d40:	80 95       	com	r24
    2d42:	90 95       	com	r25
    2d44:	bc 01       	movw	r22, r24
    2d46:	cd 01       	movw	r24, r26
    2d48:	08 95       	ret

00002d4a <_exit>:
    2d4a:	f8 94       	cli

00002d4c <__stop_program>:
    2d4c:	ff cf       	rjmp	.-2      	; 0x2d4c <__stop_program>
